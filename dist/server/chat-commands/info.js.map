{
  "version": 3,
  "sources": ["../../../server/chat-commands/info.ts"],
  "sourcesContent": ["/**\r\n * Informational Commands\r\n * Pokemon Showdown - https://pokemonshowdown.com/\r\n *\r\n * These are informational commands. For instance, you can define the command\r\n * 'whois' here, then use it by typing /whois into Pokemon Showdown.\r\n * For the API, see chat-plugins/COMMANDS.md\r\n *\r\n * @license MIT\r\n */\r\nimport * as net from 'net';\r\nimport { YouTube, Twitch } from '../chat-plugins/youtube';\r\nimport { Net, Utils } from '../../lib';\r\nimport { RoomSections } from './room-settings';\r\n\r\nconst ONLINE_SYMBOL = ` \\u25C9 `;\r\nconst OFFLINE_SYMBOL = ` \\u25CC `;\r\n\r\ninterface DexResources {\r\n\turl: string;\r\n\tresources: { resource_name: string, url: string }[];\r\n}\r\n\r\nexport function getCommonBattles(\r\n\tuserID1: ID, user1: User | null, userID2: ID, user2: User | null, connection: Connection\r\n) {\r\n\tconst battles = [];\r\n\tfor (const curRoom of Rooms.rooms.values()) {\r\n\t\tif (!curRoom.battle) continue;\r\n\t\tif (\r\n\t\t\t(user1?.inRooms.has(curRoom.roomid) || curRoom.auth.get(userID1) === Users.PLAYER_SYMBOL) &&\r\n\t\t\t(user2?.inRooms.has(curRoom.roomid) || curRoom.auth.get(userID2) === Users.PLAYER_SYMBOL)\r\n\t\t) {\r\n\t\t\tif (connection) {\r\n\t\t\t\tvoid curRoom.uploadReplay(connection.user, connection, \"forpunishment\");\r\n\t\t\t}\r\n\t\t\tbattles.push(curRoom.roomid);\r\n\t\t}\r\n\t}\r\n\treturn battles;\r\n}\r\n\r\nexport function findFormats(targetId: string, isOMSearch = false) {\r\n\tconst exactFormat = Dex.formats.get(targetId);\r\n\r\n\tconst formatList = exactFormat.exists ? [exactFormat] : Dex.formats.all();\r\n\r\n\t// Filter formats and group by section\r\n\tconst sections: { [k: string]: { name: string, formats: ID[] } } = {};\r\n\tlet totalMatches = 0;\r\n\tfor (const format of formatList) {\r\n\t\tconst sectionId = toID(format.section);\r\n\t\t// Skip generation prefix if it wasn't provided\r\n\t\tconst formatId = /^gen\\d+/.test(targetId) ? format.id : format.id.slice(4);\r\n\t\tif (\r\n\t\t\t!targetId || format[targetId + 'Show' as 'searchShow'] || sectionId === targetId ||\r\n\t\t\tformatId.startsWith(targetId) || exactFormat.exists\r\n\t\t) {\r\n\t\t\tif (isOMSearch) {\r\n\t\t\t\tconst officialFormats = [\r\n\t\t\t\t\t'ou', 'uu', 'ru', 'nu', 'pu', 'ubers', 'lc', 'monotype', 'customgame', 'doublescustomgame', 'gbusingles', 'gbudoubles',\r\n\t\t\t\t];\r\n\t\t\t\tif (format.id.startsWith('gen') && officialFormats.includes(format.id.slice(4))) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttotalMatches++;\r\n\t\t\tif (!sections[sectionId]) sections[sectionId] = { name: format.section!, formats: [] };\r\n\t\t\tsections[sectionId].formats.push(format.id);\r\n\t\t}\r\n\t}\r\n\treturn { totalMatches, sections };\r\n}\r\n\r\nexport const formatsDataCache = new Map<string, DexResources | null>();\r\nexport async function getFormatResources(format: string) {\r\n\tconst cached = formatsDataCache.get(format);\r\n\tif (cached !== undefined) return cached;\r\n\ttry {\r\n\t\tconst raw = await Net(`https://www.smogon.com/dex/api/formats/by-ps-name/${format}`).get();\r\n\t\tconst data = JSON.parse(raw);\r\n\t\tformatsDataCache.set(format, data);\r\n\t\treturn data;\r\n\t} catch {\r\n\t\t// some sort of json error or request can't be made\r\n\t\t// so something on smogon's end. freeze the request, punt\r\n\t\tformatsDataCache.set(format, null);\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n// clear every 15 minutes to ensure it's only minimally stale\r\nconst resourceRefreshInterval = setInterval(() => formatsDataCache.clear(), 15 * 60 * 1000);\r\n\r\nexport function destroy() {\r\n\tclearInterval(resourceRefreshInterval);\r\n}\r\n\r\nexport const commands: Chat.ChatCommands = {\r\n\tip: 'whois',\r\n\trooms: 'whois',\r\n\talt: 'whois',\r\n\talts: 'whois',\r\n\twhoare: 'whois',\r\n\taltsnorecurse: 'whois',\r\n\tprofile: 'whois',\r\n\twhois(target, room, user, connection, cmd) {\r\n\t\tif (room?.roomid === 'staff' && !this.runBroadcast()) return;\r\n\t\tconst targetUser = this.getUserOrSelf(target, { exactName: user.tempGroup === ' ' });\r\n\t\tconst showAll = (cmd === 'ip' || cmd === 'whoare' || cmd === 'alt' || cmd === 'alts' || cmd === 'altsnorecurse');\r\n\t\tconst showRecursiveAlts = showAll && (cmd !== 'altsnorecurse');\r\n\t\tif (!targetUser) {\r\n\t\t\tif (showAll) return this.parse('/offlinewhois ' + target);\r\n\t\t\tthrow new Chat.ErrorMessage(`User ${target} not found.`);\r\n\t\t}\r\n\t\tif (showAll && !user.trusted && targetUser !== user) {\r\n\t\t\tthrow new Chat.ErrorMessage(`/${cmd} - Access denied.`);\r\n\t\t}\r\n\r\n\t\tlet buf = Utils.html`<strong class=\"username\"><small style=\"display:none\">${targetUser.tempGroup}</small>${targetUser.name}</strong> `;\r\n\t\tconst ac = targetUser.autoconfirmed;\r\n\t\tif (ac && showAll) {\r\n\t\t\tbuf += ` <small style=\"color:gray\">(ac${targetUser.id === ac ? `` : `: <span class=\"username\">${ac}</span>`})</small>`;\r\n\t\t}\r\n\t\tconst trusted = targetUser.trusted;\r\n\t\tif (trusted && showAll) {\r\n\t\t\tbuf += ` <small style=\"color:gray\">(trusted${targetUser.id === trusted ? `` : `: <span class=\"username\">${trusted}</span>`})</small>`;\r\n\t\t}\r\n\t\tif (!targetUser.connected) buf += ` <em style=\"color:gray\">(offline)</em>`;\r\n\t\tconst roomauth = room?.auth.getDirect(targetUser.id);\r\n\t\tif (roomauth && Config.groups[roomauth]?.name) {\r\n\t\t\tbuf += Utils.html`<br />${Config.groups[roomauth].name} (${roomauth})`;\r\n\t\t}\r\n\t\tif (Config.groups[targetUser.tempGroup]?.name) {\r\n\t\t\tbuf += Utils.html`<br />Global ${Config.groups[targetUser.tempGroup].name} (${targetUser.tempGroup})`;\r\n\t\t}\r\n\t\tif (Users.globalAuth.sectionLeaders.has(targetUser.id)) {\r\n\t\t\tbuf += Utils.html`<br />Section Leader (${RoomSections.sectionNames[Users.globalAuth.sectionLeaders.get(targetUser.id)!]})`;\r\n\t\t}\r\n\t\tif (targetUser.isSysop) {\r\n\t\t\tbuf += `<br />(Pok&eacute;mon Showdown System Operator)`;\r\n\t\t}\r\n\t\tif (!targetUser.registered) {\r\n\t\t\tbuf += `<br />(Unregistered)`;\r\n\t\t}\r\n\t\tlet publicrooms = ``;\r\n\t\tlet hiddenrooms = ``;\r\n\t\tlet privaterooms = ``;\r\n\t\tfor (const roomid of targetUser.inRooms) {\r\n\t\t\tconst targetRoom = Rooms.get(roomid)!;\r\n\r\n\t\t\tconst authSymbol = targetRoom.auth.getDirect(targetUser.id).trim();\r\n\t\t\tconst battleTitle = (targetRoom.battle ? ` title=\"${targetRoom.title}\"` : '');\r\n\t\t\tconst output = `${authSymbol}<a href=\"/${roomid}\"${battleTitle}>${roomid}</a>`;\r\n\t\t\tif (targetRoom.settings.isPrivate === true) {\r\n\t\t\t\tif (targetRoom.settings.modjoin === '~') continue;\r\n\t\t\t\tif (privaterooms) privaterooms += ` | `;\r\n\t\t\t\tprivaterooms += output;\r\n\t\t\t} else if (targetRoom.settings.isPrivate) {\r\n\t\t\t\tif (hiddenrooms) hiddenrooms += ` | `;\r\n\t\t\t\thiddenrooms += output;\r\n\t\t\t} else {\r\n\t\t\t\tif (publicrooms) publicrooms += ` | `;\r\n\t\t\t\tpublicrooms += output;\r\n\t\t\t}\r\n\t\t}\r\n\t\tbuf += `<br />Rooms: ${publicrooms || `<em>(no public rooms)</em>`}`;\r\n\r\n\t\tif (!showAll) {\r\n\t\t\treturn this.sendReplyBox(buf);\r\n\t\t}\r\n\t\tconst canViewAlts = (user === targetUser ? user.can('altsself') : user.can('alts', targetUser));\r\n\t\tconst canViewPunishments = canViewAlts ||\r\n\t\t\t(room && room.settings.isPrivate !== true && user.can('mute', targetUser, room) && targetUser.id in room.users);\r\n\t\tconst canViewSecretRooms = user === targetUser || (canViewAlts && targetUser.locked) || user.can('makeroom');\r\n\t\tbuf += `<br />`;\r\n\r\n\t\tif (canViewAlts) {\r\n\t\t\tlet prevNames = targetUser.previousIDs.map(userid => {\r\n\t\t\t\tconst punishments = Punishments.userids.get(userid);\r\n\t\t\t\tif (!punishments || !user.can('alts')) return userid;\r\n\t\t\t\treturn punishments.map(\r\n\t\t\t\t\tpunishment => (\r\n\t\t\t\t\t\t`${userid}${punishment ? ` (${Punishments.punishmentTypes.get(punishment.type)?.desc || `punished`}` +\r\n\t\t\t\t\t\t`${punishment.id !== targetUser.id ? ` as ${punishment.id}` : ``})` : ``}`\r\n\t\t\t\t\t)\r\n\t\t\t\t).join(' | ');\r\n\t\t\t}).join(\", \");\r\n\t\t\tif (prevNames) buf += Utils.html`<br />Previous names: ${prevNames}`;\r\n\r\n\t\t\tfor (const targetAlt of targetUser.getAltUsers(true)) {\r\n\t\t\t\tif (!targetAlt.named && !targetAlt.connected) continue;\r\n\t\t\t\tif (targetAlt.tempGroup === '~' && user.tempGroup !== '~') continue;\r\n\r\n\t\t\t\tconst punishments = Punishments.userids.get(targetAlt.id) || [];\r\n\t\t\t\tconst punishMsg = !user.can('alts') ? '' : punishments.map(punishment => (\r\n\t\t\t\t\t` (${Punishments.punishmentTypes.get(punishment.type)?.desc || 'punished'}` +\r\n\t\t\t\t\t`${punishment.id !== targetAlt.id ? ` as ${punishment.id}` : ''})`\r\n\t\t\t\t)).join(' | ');\r\n\t\t\t\tbuf += Utils.html`<br />Alt: <span class=\"username\">${targetAlt.name}</span>${punishMsg}`;\r\n\t\t\t\tif (!targetAlt.connected) buf += ` <em style=\"color:gray\">(offline)</em>`;\r\n\t\t\t\tprevNames = targetAlt.previousIDs.map(userid => {\r\n\t\t\t\t\tconst p = Punishments.userids.get(userid);\r\n\t\t\t\t\tif (!p || !user.can('alts')) return userid;\r\n\t\t\t\t\treturn p.map(\r\n\t\t\t\t\t\tcur => `${userid} (${Punishments.punishmentTypes.get(cur.type)?.desc || 'punished'}` + `${cur.id !== targetAlt.id ? ` as ${cur.id}` : ``})`\r\n\t\t\t\t\t).join(' | ');\r\n\t\t\t\t}).join(\", \");\r\n\t\t\t\tif (prevNames) buf += `<br />Previous names: ${prevNames}`;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (canViewPunishments) {\r\n\t\t\tif (targetUser.namelocked) {\r\n\t\t\t\tbuf += `<br />NAMELOCKED: ${targetUser.namelocked}`;\r\n\t\t\t\tconst punishment = Punishments.userids.getByType(targetUser.locked!, 'NAMELOCK');\r\n\t\t\t\tif (punishment) {\r\n\t\t\t\t\tconst expiresIn = Punishments.checkLockExpiration(targetUser.locked);\r\n\t\t\t\t\tif (expiresIn) buf += expiresIn;\r\n\t\t\t\t\tif (punishment.reason) buf += Utils.html` (reason: ${punishment.reason})`;\r\n\t\t\t\t}\r\n\t\t\t} else if (targetUser.locked) {\r\n\t\t\t\tbuf += `<br />LOCKED: ${targetUser.locked}`;\r\n\t\t\t\tswitch (targetUser.locked) {\r\n\t\t\t\tcase '#rangelock':\r\n\t\t\t\t\tbuf += ` - IP or host is in a temporary range-lock`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase '#hostfilter':\r\n\t\t\t\t\tbuf += ` - host is permanently locked for being a proxy`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tconst punishment = Punishments.userids.getByType(targetUser.locked, 'LOCK');\r\n\t\t\t\tif (punishment) {\r\n\t\t\t\t\tconst expiresIn = Punishments.checkLockExpiration(targetUser.locked);\r\n\t\t\t\t\tif (expiresIn) buf += expiresIn;\r\n\t\t\t\t\tif (punishment.reason) buf += Utils.html` (reason: ${punishment.reason})`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (user.can('lock')) {\r\n\t\t\t\tconst battlebanned = Punishments.isBattleBanned(targetUser);\r\n\t\t\t\tif (battlebanned) {\r\n\t\t\t\t\tbuf += `<br />BATTLEBANNED: ${battlebanned.id}`;\r\n\t\t\t\t\tbuf += ` ${Punishments.checkPunishmentExpiration(battlebanned)}`;\r\n\t\t\t\t\tif (battlebanned.reason) buf += Utils.html` (reason: ${battlebanned.reason})`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst groupchatbanned = Punishments.isGroupchatBanned(targetUser);\r\n\t\t\t\tif (groupchatbanned) {\r\n\t\t\t\t\tbuf += `<br />Banned from using groupchats${groupchatbanned.id !== targetUser.id ? `: ${groupchatbanned.id}` : ``}`;\r\n\t\t\t\t\tbuf += ` ${Punishments.checkPunishmentExpiration(groupchatbanned)}`;\r\n\t\t\t\t\tif (groupchatbanned.reason) buf += Utils.html` (reason: ${groupchatbanned.reason})`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst ticketbanned = Punishments.isTicketBanned(targetUser.id);\r\n\t\t\t\tif (ticketbanned) {\r\n\t\t\t\t\tbuf += `<br />Banned from creating help tickets${ticketbanned.id !== targetUser.id ? `: ${ticketbanned.id}` : ``}`;\r\n\t\t\t\t\tbuf += ` ${Punishments.checkPunishmentExpiration(ticketbanned)}`;\r\n\t\t\t\t\tif (ticketbanned.reason) buf += Utils.html` (reason: ${ticketbanned.reason})`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (targetUser.semilocked) {\r\n\t\t\t\tbuf += `<br />Semilocked: ${user.can('lock') ? targetUser.semilocked : \"(reason hidden)\"}`;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (user === targetUser ? user.can('ipself') : user.can('ip', targetUser)) {\r\n\t\t\tconst ips = targetUser.ips.map(ip => {\r\n\t\t\t\tconst status = [];\r\n\t\t\t\tconst punishments = Punishments.ips.get(ip);\r\n\t\t\t\tif (user.can('alts') && punishments) {\r\n\t\t\t\t\tfor (const punishment of punishments) {\r\n\t\t\t\t\t\tconst { type, id } = punishment;\r\n\t\t\t\t\t\tlet punishMsg = Punishments.punishmentTypes.get(type)?.desc || type;\r\n\t\t\t\t\t\tif (id !== targetUser.id) punishMsg += ` as ${id}`;\r\n\t\t\t\t\t\tstatus.push(punishMsg);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (Punishments.isSharedIp(ip)) {\r\n\t\t\t\t\tlet sharedStr = 'shared';\r\n\t\t\t\t\tif (Punishments.sharedIps.get(ip)) {\r\n\t\t\t\t\t\tsharedStr += `: ${Punishments.sharedIps.get(ip)}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstatus.push(sharedStr);\r\n\t\t\t\t}\r\n\t\t\t\treturn `<a href=\"https://whatismyipaddress.com/ip/${ip}\" target=\"_blank\">${ip}</a>` + (status.length ? ` (${status.join('; ')})` : '');\r\n\t\t\t});\r\n\t\t\tbuf += `<br /> IP${Chat.plural(ips)}: ${ips.join(\", \")}`;\r\n\t\t\tif (user.tempGroup !== ' ' && targetUser.latestHost) {\r\n\t\t\t\tbuf += Utils.html`<br />Host: ${targetUser.latestHost} [${targetUser.latestHostType}]`;\r\n\t\t\t}\r\n\t\t} else if (user === targetUser) {\r\n\t\t\tbuf += `<br /> IP: <a href=\"https://whatismyipaddress.com/ip/${connection.ip}\" target=\"_blank\">${connection.ip}</a>`;\r\n\t\t}\r\n\t\tif ((user === targetUser || canViewAlts) && hiddenrooms) {\r\n\t\t\tbuf += `<br />Hidden rooms: ${hiddenrooms}`;\r\n\t\t}\r\n\t\tif (canViewSecretRooms && privaterooms) {\r\n\t\t\tbuf += `<br />Secret rooms: ${privaterooms}`;\r\n\t\t}\r\n\r\n\t\tconst gameRooms = [];\r\n\t\tfor (const curRoom of Rooms.rooms.values()) {\r\n\t\t\tif (!curRoom.game) continue;\r\n\t\t\tconst inPlayerTable = targetUser.id in curRoom.game.playerTable && !targetUser.inRooms.has(curRoom.roomid);\r\n\t\t\tconst hasPlayerSymbol = curRoom.auth.getDirect(targetUser.id) === Users.PLAYER_SYMBOL;\r\n\t\t\tconst canSeeRoom = canViewAlts || user === targetUser || !curRoom.settings.isPrivate;\r\n\r\n\t\t\tif ((inPlayerTable || hasPlayerSymbol) && canSeeRoom) {\r\n\t\t\t\tgameRooms.push(curRoom.roomid);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (gameRooms.length) {\r\n\t\t\tbuf += `<br />Recent games: ${gameRooms.map(id => {\r\n\t\t\t\tconst shortId = id.startsWith('battle-') ? id.slice(7) : id;\r\n\t\t\t\treturn Utils.html`<a href=\"/${id}\">${shortId}</a>`;\r\n\t\t\t}).join(' | ')}`;\r\n\t\t}\r\n\r\n\t\tif (canViewPunishments) {\r\n\t\t\tconst punishments = Punishments.getRoomPunishments(targetUser, { checkIps: true });\r\n\r\n\t\t\tif (punishments.length) {\r\n\t\t\t\tbuf += `<br />Room punishments: `;\r\n\r\n\t\t\t\tbuf += punishments.map(([curRoom, curPunishment]) => {\r\n\t\t\t\t\tconst { type: punishType, id: punishUserid, expireTime, reason } = curPunishment;\r\n\t\t\t\t\tlet punishDesc = Punishments.roomPunishmentTypes.get(punishType)?.desc || punishType;\r\n\t\t\t\t\tif (punishUserid !== targetUser.id) punishDesc += ` as ${punishUserid}`;\r\n\t\t\t\t\tconst expiresIn = new Date(expireTime).getTime() - Date.now();\r\n\t\t\t\t\tconst expireString = Chat.toDurationString(expiresIn, { precision: 1 });\r\n\t\t\t\t\tpunishDesc += ` for ${expireString}`;\r\n\r\n\t\t\t\t\tif (reason) punishDesc += `: ${reason}`;\r\n\t\t\t\t\treturn `<a href=\"/${curRoom}\">${curRoom}</a> (${punishDesc})`;\r\n\t\t\t\t}).join(', ');\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.sendReplyBox(buf);\r\n\r\n\t\tif (showRecursiveAlts && canViewAlts) {\r\n\t\t\tconst targetId = toID(target);\r\n\t\t\tfor (const alt of Users.users.values()) {\r\n\t\t\t\tif (alt !== targetUser && alt.previousIDs.includes(targetId)) {\r\n\t\t\t\t\tvoid this.parse(`/altsnorecurse ${alt.name}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\twhoishelp: [\r\n\t\t`/whois - Get details on yourself: alts, group, IP address, and rooms.`,\r\n\t\t`/whois [username] - Get details on a username: alts (Requires: % @ ~), group, IP address (Requires: @ ~), and rooms.`,\r\n\t],\r\n\r\n\t'chp': 'offlinewhois',\r\n\tcheckpunishment: 'offlinewhois',\r\n\tofflinewhois(target, room, user) {\r\n\t\tif (!user.trusted) {\r\n\t\t\tthrow new Chat.ErrorMessage(\"/offlinewhois - Access denied.\");\r\n\t\t}\r\n\t\tconst userid = toID(target);\r\n\t\tif (!userid) throw new Chat.ErrorMessage(\"Please enter a valid username.\");\r\n\t\tconst targetUser = Users.get(userid);\r\n\t\tlet buf = Utils.html`<strong class=\"username\">${target}</strong>`;\r\n\t\tif (!targetUser?.connected) buf += ` <em style=\"color:gray\">(offline)</em>`;\r\n\r\n\t\tconst roomauth = room?.auth.getDirect(userid);\r\n\t\tif (roomauth && Config.groups[roomauth]?.name) {\r\n\t\t\tbuf += `<br />${Config.groups[roomauth].name} (${roomauth})`;\r\n\t\t}\r\n\t\tconst group = Users.globalAuth.get(userid);\r\n\t\tif (Config.groups[group]?.name) {\r\n\t\t\tbuf += `<br />Global ${Config.groups[group].name} (${group})`;\r\n\t\t}\r\n\t\tif (Users.globalAuth.sectionLeaders.has(userid)) {\r\n\t\t\tbuf += `<br />Section Leader (${RoomSections.sectionNames[Users.globalAuth.sectionLeaders.get(userid)!]})`;\r\n\t\t}\r\n\r\n\t\tbuf += `<br /><br />`;\r\n\t\tlet atLeastOne = false;\r\n\r\n\t\tconst idPunishments = Punishments.userids.get(userid);\r\n\t\tif (idPunishments) {\r\n\t\t\tfor (const p of idPunishments) {\r\n\t\t\t\tconst { type: punishType, id: punishUserid, reason } = p;\r\n\t\t\t\tif (!user.can('alts') && !['LOCK', 'BAN'].includes(punishType)) continue;\r\n\t\t\t\tconst punishDesc = (Punishments.punishmentTypes.get(punishType)?.desc || punishType);\r\n\t\t\t\tbuf += `${punishDesc}: ${punishUserid}`;\r\n\t\t\t\tconst expiresIn = Punishments.checkLockExpiration(userid);\r\n\t\t\t\tif (expiresIn) buf += expiresIn;\r\n\t\t\t\tif (reason) buf += Utils.html` (reason: ${reason})`;\r\n\t\t\t\tbuf += '<br />';\r\n\t\t\t\tatLeastOne = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!user.can('alts') && !atLeastOne) {\r\n\t\t\tconst hasJurisdiction = room && user.can('mute', null, room) && Punishments.roomUserids.nestedHas(room.roomid, userid);\r\n\t\t\tif (!hasJurisdiction) {\r\n\t\t\t\tthrow new Chat.ErrorMessage(\"/checkpunishment - User not found.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst punishments = Punishments.getRoomPunishments(targetUser || { id: userid } as User);\r\n\r\n\t\tif (punishments?.length) {\r\n\t\t\tbuf += `<br />Room punishments: `;\r\n\r\n\t\t\tbuf += punishments.map(([curRoom, curPunishment]) => {\r\n\t\t\t\tconst { type: punishType, id: punishUserid, expireTime, reason } = curPunishment;\r\n\t\t\t\tlet punishDesc = Punishments.roomPunishmentTypes.get(punishType)?.desc || punishType;\r\n\t\t\t\tif (punishUserid !== userid) punishDesc += ` as ${punishUserid}`;\r\n\t\t\t\tconst expiresIn = new Date(expireTime).getTime() - Date.now();\r\n\t\t\t\tconst expireString = Chat.toDurationString(expiresIn, { precision: 1 });\r\n\t\t\t\tpunishDesc += ` for ${expireString}`;\r\n\r\n\t\t\t\tif (reason) punishDesc += `: ${reason}`;\r\n\t\t\t\treturn `<a href=\"/${curRoom}\">${curRoom}</a> (${punishDesc})`;\r\n\t\t\t}).join(', ');\r\n\t\t\tatLeastOne = true;\r\n\t\t}\r\n\t\tif (!atLeastOne) {\r\n\t\t\tbuf += `This username has no punishments associated with it.`;\r\n\t\t}\r\n\t\tthis.sendReplyBox(buf);\r\n\t},\r\n\tofflinewhoishelp: [\r\n\t\t`/offlinewhois [username] - Get details on a username without requiring them to be online.`,\r\n\t\t`Requires: trusted user. `,\r\n\t],\r\n\r\n\tsbtl: 'sharedbattles',\r\n\tsharedbattles(target, room) {\r\n\t\tthis.checkCan('lock');\r\n\r\n\t\tconst [targetUsername1, targetUsername2] = target.split(',');\r\n\t\tif (!targetUsername1 || !targetUsername2) return this.parse(`/help sharedbattles`);\r\n\t\tconst user1 = Users.get(targetUsername1);\r\n\t\tconst user2 = Users.get(targetUsername2);\r\n\t\tconst userID1 = toID(targetUsername1);\r\n\t\tconst userID2 = toID(targetUsername2);\r\n\r\n\t\tconst battles = getCommonBattles(userID1, user1, userID2, user2, this.connection);\r\n\r\n\t\tif (!battles.length) return this.sendReply(`${targetUsername1} and ${targetUsername2} have no common battles.`);\r\n\r\n\t\tthis.sendReplyBox(Utils.html`Common battles between ${targetUsername1} and ${targetUsername2}:<br />` + battles.map(id => {\r\n\t\t\tconst shortId = id.startsWith('battle-') ? id.slice(7) : id;\r\n\t\t\treturn Utils.html`<a href=\"/${id}\">${shortId}</a>`;\r\n\t\t}).join(' | '));\r\n\t},\r\n\tsharedbattleshelp: [`/sharedbattles [user1], [user2] - Finds recent battles common to [user1] and [user2]. Requires % @ ~`],\r\n\r\n\tsp: 'showpunishments',\r\n\tshowpunishments(target, room, user) {\r\n\t\troom = this.requireRoom();\r\n\t\tif (!room.persist) {\r\n\t\t\tthrow new Chat.ErrorMessage(\"This command is unavailable in temporary rooms.\");\r\n\t\t}\r\n\t\treturn this.parse(`/join view-punishments-${room}`);\r\n\t},\r\n\tshowpunishmentshelp: [`/showpunishments - Shows the current punishments in the room. Requires: % @ # ~`],\r\n\r\n\tsgp: 'showglobalpunishments',\r\n\tshowglobalpunishments(target, room, user) {\r\n\t\tthis.checkCan('lock');\r\n\t\treturn this.parse(`/join view-globalpunishments`);\r\n\t},\r\n\tshowglobalpunishmentshelp: [`/showpunishments - Shows the current global punishments. Requires: % @ # ~`],\r\n\r\n\tasync host(target, room, user, connection, cmd) {\r\n\t\tif (!target) return this.parse('/help host');\r\n\t\tthis.checkCan('alts');\r\n\t\ttarget = target.trim();\r\n\t\tif (!net.isIPv4(target)) throw new Chat.ErrorMessage('You must pass a valid IPv4 IP to /host.');\r\n\t\tconst { dnsbl, host, hostType } = await IPTools.lookup(target);\r\n\t\tconst dnsblMessage = dnsbl ? ` [${dnsbl}]` : ``;\r\n\t\tthis.sendReply(`IP ${target}: ${host || \"ERROR\"} [${hostType}]${dnsblMessage}`);\r\n\t},\r\n\thosthelp: [`/host [ip] - Gets the host for a given IP. Requires: % @ ~`],\r\n\r\n\tsearchip: 'ipsearch',\r\n\tipsearchall: 'ipsearch',\r\n\thostsearch: 'ipsearch',\r\n\tipsearch(target, room, user, connection, cmd) {\r\n\t\tif (!target.trim()) return this.parse(`/help ipsearch`);\r\n\t\tthis.checkCan('rangeban');\r\n\r\n\t\tconst [ipOrHost, roomid] = this.splitOne(target);\r\n\t\tconst targetRoom = roomid ? Rooms.get(roomid) : null;\r\n\t\tif (typeof targetRoom === 'undefined') {\r\n\t\t\tthrow new Chat.ErrorMessage(`The room \"${roomid}\" does not exist.`);\r\n\t\t}\r\n\t\tconst results: string[] = [];\r\n\t\tconst isAll = (cmd === 'ipsearchall');\r\n\r\n\t\tif (/[a-z]/.test(ipOrHost)) {\r\n\t\t\t// host\r\n\t\t\tthis.sendReply(`Users with host ${ipOrHost}${targetRoom ? ` in the room ${targetRoom.title}` : ``}:`);\r\n\t\t\tfor (const curUser of Users.users.values()) {\r\n\t\t\t\tif (results.length > 100 && !isAll) break;\r\n\t\t\t\tif (!curUser.latestHost?.endsWith(ipOrHost)) continue;\r\n\t\t\t\tif (targetRoom && !curUser.inRooms.has(targetRoom.roomid)) continue;\r\n\t\t\t\tresults.push(`${curUser.connected ? ONLINE_SYMBOL : OFFLINE_SYMBOL} ${curUser.name}`);\r\n\t\t\t}\r\n\t\t} else if (IPTools.ipRegex.test(ipOrHost)) {\r\n\t\t\t// ip\r\n\t\t\tthis.sendReply(`Users with IP ${ipOrHost}${targetRoom ? ` in the room ${targetRoom.title}` : ``}:`);\r\n\t\t\tfor (const curUser of Users.users.values()) {\r\n\t\t\t\tif (!curUser.ips.some(ip => ip === ipOrHost)) continue;\r\n\t\t\t\tif (targetRoom && !curUser.inRooms.has(targetRoom.roomid)) continue;\r\n\t\t\t\tresults.push(`${curUser.connected ? ONLINE_SYMBOL : OFFLINE_SYMBOL} ${curUser.name}`);\r\n\t\t\t}\r\n\t\t} else if (IPTools.isValidRange(ipOrHost)) {\r\n\t\t\t// range\r\n\t\t\tthis.sendReply(`Users in IP range ${ipOrHost}${targetRoom ? ` in the room ${targetRoom.title}` : ``}:`);\r\n\t\t\tconst checker = IPTools.checker(ipOrHost);\r\n\t\t\tfor (const curUser of Users.users.values()) {\r\n\t\t\t\tif (results.length > 100 && !isAll) continue;\r\n\t\t\t\tif (!curUser.ips.some(ip => checker(ip))) continue;\r\n\t\t\t\tif (targetRoom && !curUser.inRooms.has(targetRoom.roomid)) continue;\r\n\t\t\t\tresults.push(`${curUser.connected ? ONLINE_SYMBOL : OFFLINE_SYMBOL} ${curUser.name}`);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new Chat.ErrorMessage(`${ipOrHost} is not a valid IP, IP range, or host.`);\r\n\t\t}\r\n\r\n\t\tif (!results.length) {\r\n\t\t\treturn this.sendReply(`No users found.`);\r\n\t\t}\r\n\t\tthis.sendReply(results.slice(0, 100).join('; '));\r\n\t\tif (results.length > 100 && !isAll) {\r\n\t\t\tthis.sendReply(`More than 100 users found. Use /ipsearchall for the full list.`);\r\n\t\t}\r\n\t},\r\n\tipsearchhelp: [`/ipsearch [ip|range|host], (room) - Find all users with specified IP, IP range, or host. If a room is provided only users in the room will be shown. Requires: ~`],\r\n\r\n\tcheckchallenges(target, room, user) {\r\n\t\troom = this.requireRoom();\r\n\t\tif (!user.can('addhtml', null, room)) this.checkCan('ban', null, room);\r\n\t\tif (!this.runBroadcast(true)) return;\r\n\t\tif (!this.broadcasting) {\r\n\t\t\tthis.errorReply(`This command must be broadcast:`);\r\n\t\t\treturn this.parse(`/help checkchallenges`);\r\n\t\t}\r\n\t\tif (!target?.includes(',')) return this.parse(`/help checkchallenges`);\r\n\t\tconst { targetUser: user1, rest } = this.requireUser(target);\r\n\t\tconst { targetUser: user2, rest: rest2 } = this.requireUser(rest);\r\n\t\tif (user1 === user2 || rest2) return this.parse(`/help checkchallenges`);\r\n\t\tif (!(user1.id in room.users) || !(user2.id in room.users)) {\r\n\t\t\tthrow new Chat.ErrorMessage(`Both users must be in this room.`);\r\n\t\t}\r\n\t\tconst chall = Ladders.challenges.search(user1.id, user2.id);\r\n\r\n\t\tif (!chall) {\r\n\t\t\treturn this.sendReplyBox(Utils.html`${user1.name} and ${user2.name} are not challenging each other.`);\r\n\t\t}\r\n\t\tconst [from, to] = user1.id === chall.from ? [user1, user2] : [user2, user1];\r\n\t\tthis.sendReplyBox(Utils.html`${from.name} is challenging ${to.name} in ${Dex.formats.get(chall.format).name}.`);\r\n\t},\r\n\tcheckchallengeshelp: [`!checkchallenges [user1], [user2] - Check if the specified users are challenging each other. Requires: * @ # ~`],\r\n\r\n\t/*********************************************************\r\n\t * Client fallback\r\n\t *********************************************************/\r\n\r\n\tunignore: 'ignore',\r\n\tignore(target, room, user) {\r\n\t\tif (!room) {\r\n\t\t\tthis.errorReply(`In PMs, this command can only be used by itself to ignore the person you're talking to: \"/${this.cmd}\", not \"/${this.cmd} ${target}\"`);\r\n\t\t}\r\n\t\tthis.errorReply(`You're using a custom client that doesn't support the ignore command.`);\r\n\t},\r\n\tignorehelp: [`/ignore [user] - Ignore the given [user].`],\r\n\r\n\t/*********************************************************\r\n\t * Data Search Dex\r\n\t *********************************************************/\r\n\r\n\tpstats: 'data',\r\n\tstats: 'data',\r\n\tdex: 'data',\r\n\tpokedex: 'data',\r\n\tdata(target, room, user, connection, cmd) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\ttarget = target.trim();\r\n\t\tconst gen = parseInt(cmd.substr(-1));\r\n\t\tif (gen) target += `, gen${gen}`;\r\n\r\n\t\tconst { dex, format, targets } = this.splitFormat(target, true, true);\r\n\r\n\t\tlet buffer = '';\r\n\t\ttarget = targets.join(',');\r\n\t\tconst targetId = toID(target);\r\n\t\tif (!targetId) return this.parse('/help data');\r\n\t\tconst targetNum = parseInt(target);\r\n\t\tif (!isNaN(targetNum) && `${targetNum}` === target) {\r\n\t\t\tfor (const pokemon of Dex.species.all()) {\r\n\t\t\t\tif (pokemon.num === targetNum) {\r\n\t\t\t\t\ttarget = pokemon.baseSpecies;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst newTargets = dex.dataSearch(target);\r\n\t\tconst showDetails = (cmd.startsWith('dt') || cmd === 'details');\r\n\t\tif (!newTargets?.length) {\r\n\t\t\tthrow new Chat.ErrorMessage(`'${target}' doesn't match any Pok\\u00e9mon, item, move, ability or nature${Dex.gen > dex.gen ? ` in Gen ${dex.gen}` : \"\"}. (Check your spelling?)`);\r\n\t\t}\r\n\t\tif (newTargets.length > 2) {\r\n\t\t\tthrow new Chat.ErrorMessage(`'${target}' has no exact match. Too many approximate matches: ${newTargets.map(t => t.name).join(', ')}`);\r\n\t\t}\r\n\r\n\t\tfor (const [i, newTarget] of newTargets.entries()) {\r\n\t\t\tif (newTarget.isInexact && !i) {\r\n\t\t\t\tbuffer = `'${target}' has no exact match${Dex.gen > dex.gen ? ` in Gen ${dex.gen}` : \"\"}. Approximate match${newTargets.length === 1 ? '' : 'es'}:\\n`;\r\n\t\t\t}\r\n\t\t\tlet details: { [k: string]: string } = {};\r\n\t\t\tswitch (newTarget.searchType) {\r\n\t\t\tcase 'nature':\r\n\t\t\t\tconst nature = Dex.natures.get(newTarget.name);\r\n\t\t\t\tbuffer += `${nature.name} nature: `;\r\n\t\t\t\tif (nature.plus) {\r\n\t\t\t\t\tbuffer += `+10% ${Dex.stats.names[nature.plus]}, -10% ${Dex.stats.names[nature.minus!]}.`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbuffer += `No effect.`;\r\n\t\t\t\t}\r\n\t\t\t\treturn this.sendReply(buffer);\r\n\t\t\tcase 'pokemon':\r\n\t\t\t\tlet pokemon = dex.species.get(newTarget.name);\r\n\t\t\t\tif (format?.onModifySpecies) {\r\n\t\t\t\t\tpokemon = format.onModifySpecies.call({ dex, clampIntRange: Utils.clampIntRange, toID } as Battle, pokemon) || pokemon;\r\n\t\t\t\t}\r\n\t\t\t\tlet tierDisplay = room?.settings.dataCommandTierDisplay;\r\n\t\t\t\tif (!tierDisplay && room?.battle) {\r\n\t\t\t\t\tif (room.battle.format.includes('doubles') || room.battle.format.includes('vgc')) {\r\n\t\t\t\t\t\ttierDisplay = 'doubles tiers';\r\n\t\t\t\t\t} else if (room.battle.format.includes('nationaldex')) {\r\n\t\t\t\t\t\ttierDisplay = 'National Dex tiers';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!tierDisplay) tierDisplay = 'tiers';\r\n\t\t\t\tconst displayedTier = tierDisplay === 'tiers' ? pokemon.tier :\r\n\t\t\t\t\ttierDisplay === 'doubles tiers' ? pokemon.doublesTier :\r\n\t\t\t\t\ttierDisplay === 'National Dex tiers' ? pokemon.natDexTier :\r\n\t\t\t\t\tpokemon.num >= 0 ? String(pokemon.num) : pokemon.tier;\r\n\t\t\t\tbuffer += `|raw|${Chat.getDataPokemonHTML(pokemon, dex.gen, displayedTier)}\\n`;\r\n\t\t\t\tif (showDetails) {\r\n\t\t\t\t\tlet weighthit = 20;\r\n\t\t\t\t\tif (pokemon.weighthg >= 2000) {\r\n\t\t\t\t\t\tweighthit = 120;\r\n\t\t\t\t\t} else if (pokemon.weighthg >= 1000) {\r\n\t\t\t\t\t\tweighthit = 100;\r\n\t\t\t\t\t} else if (pokemon.weighthg >= 500) {\r\n\t\t\t\t\t\tweighthit = 80;\r\n\t\t\t\t\t} else if (pokemon.weighthg >= 250) {\r\n\t\t\t\t\t\tweighthit = 60;\r\n\t\t\t\t\t} else if (pokemon.weighthg >= 100) {\r\n\t\t\t\t\t\tweighthit = 40;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdetails = {\r\n\t\t\t\t\t\t\"Dex#\": String(pokemon.num),\r\n\t\t\t\t\t\tGen: String(pokemon.gen) || 'CAP',\r\n\t\t\t\t\t\tHeight: `${pokemon.heightm} m`,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tdetails[\"Weight\"] = `${pokemon.weighthg / 10} kg <em>(${weighthit} BP)</em>`;\r\n\t\t\t\t\tconst gmaxMove = pokemon.canGigantamax || dex.species.get(pokemon.changesFrom).canGigantamax;\r\n\t\t\t\t\tif (gmaxMove && dex.gen === 8) details[\"G-Max Move\"] = gmaxMove;\r\n\t\t\t\t\tif (dex.gen === 1) details[\"Crit Rate\"] = `${((pokemon.baseStats.spe * 100) / 512).toFixed(2)}%`;\r\n\t\t\t\t\tif (pokemon.color && dex.gen >= 5) details[\"Dex Colour\"] = pokemon.color;\r\n\t\t\t\t\tif (pokemon.eggGroups && dex.gen >= 2) details[\"Egg Group(s)\"] = pokemon.eggGroups.join(\", \");\r\n\t\t\t\t\tconst evos: string[] = [];\r\n\t\t\t\t\tfor (const evoName of pokemon.evos) {\r\n\t\t\t\t\t\tconst evo = dex.species.get(evoName);\r\n\t\t\t\t\t\tif (evo.gen <= dex.gen) {\r\n\t\t\t\t\t\t\tconst condition = evo.evoCondition ? ` ${evo.evoCondition}` : ``;\r\n\t\t\t\t\t\t\tswitch (evo.evoType) {\r\n\t\t\t\t\t\t\tcase 'levelExtra':\r\n\t\t\t\t\t\t\t\tevos.push(`${evo.name} (level-up${condition})`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'levelFriendship':\r\n\t\t\t\t\t\t\t\tevos.push(`${evo.name} (level-up with high Friendship${condition})`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'levelHold':\r\n\t\t\t\t\t\t\t\tevos.push(`${evo.name} (level-up holding ${evo.evoItem}${condition})`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'useItem':\r\n\t\t\t\t\t\t\t\tevos.push(`${evo.name} (${evo.evoItem})`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'levelMove':\r\n\t\t\t\t\t\t\t\tevos.push(`${evo.name} (level-up with ${evo.evoMove}${condition})`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'other':\r\n\t\t\t\t\t\t\t\tevos.push(`${evo.name} (${evo.evoCondition})`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'trade':\r\n\t\t\t\t\t\t\t\tevos.push(`${evo.name} (trade${evo.evoItem ? ` holding ${evo.evoItem}` : condition})`);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tevos.push(`${evo.name} (${evo.evoLevel}${condition})`);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pokemon.prevo) {\r\n\t\t\t\t\t\tdetails[\"Pre-Evolution\"] = pokemon.prevo;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!evos.length) {\r\n\t\t\t\t\t\tdetails[`<font color=\"#686868\">Does Not Evolve</font>`] = \"\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdetails[\"Evolution\"] = evos.join(\", \");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'item':\r\n\t\t\t\tconst item = dex.items.get(newTarget.name);\r\n\t\t\t\tbuffer += `|raw|${Chat.getDataItemHTML(item)}\\n`;\r\n\t\t\t\tif (showDetails) {\r\n\t\t\t\t\tdetails = {\r\n\t\t\t\t\t\tGen: String(item.gen),\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif (dex.gen >= 4) {\r\n\t\t\t\t\t\tif (item.fling) {\r\n\t\t\t\t\t\t\tdetails[\"Fling Base Power\"] = String(item.fling.basePower);\r\n\t\t\t\t\t\t\tif (item.fling.status) details[\"Fling Effect\"] = item.fling.status;\r\n\t\t\t\t\t\t\tif (item.fling.volatileStatus) details[\"Fling Effect\"] = item.fling.volatileStatus;\r\n\t\t\t\t\t\t\tif (item.isBerry) details[\"Fling Effect\"] = \"Activates the Berry's effect on the target.\";\r\n\t\t\t\t\t\t\tif (item.id === 'whiteherb') details[\"Fling Effect\"] = \"Restores the target's negative stat stages to 0.\";\r\n\t\t\t\t\t\t\tif (item.id === 'mentalherb') {\r\n\t\t\t\t\t\t\t\tconst flingEffect = \"Removes the effects of Attract, Disable, Encore, Heal Block, Taunt, and Torment from the target.\";\r\n\t\t\t\t\t\t\t\tdetails[\"Fling Effect\"] = flingEffect;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdetails[\"Fling\"] = \"This item cannot be used with Fling.\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (item.naturalGift && dex.gen >= 3) {\r\n\t\t\t\t\t\tdetails[\"Natural Gift Type\"] = item.naturalGift.type;\r\n\t\t\t\t\t\tdetails[\"Natural Gift Base Power\"] = String(item.naturalGift.basePower);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (item.isNonstandard) {\r\n\t\t\t\t\t\tdetails[`Unobtainable in Gen ${dex.gen}`] = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'move':\r\n\t\t\t\tconst move = dex.moves.get(newTarget.name);\r\n\t\t\t\tbuffer += `|raw|${Chat.getDataMoveHTML(move)}\\n`;\r\n\t\t\t\tif (showDetails) {\r\n\t\t\t\t\tdetails = {\r\n\t\t\t\t\t\tPriority: String(move.priority),\r\n\t\t\t\t\t\tGen: String(move.gen) || 'CAP',\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tconst pastGensOnly = (move.isNonstandard === \"Past\" && dex.gen >= 8) ||\r\n\t\t\t\t\t\t(move.isNonstandard === \"Gigantamax\" && dex.gen !== 8);\r\n\t\t\t\t\tif (pastGensOnly) details[\"&#10007; Past Gens Only\"] = \"\";\r\n\t\t\t\t\tif (move.secondary || move.secondaries || move.hasSheerForce) details[\"&#10003; Boosted by Sheer Force\"] = \"\";\r\n\t\t\t\t\tif (move.flags['contact'] && dex.gen >= 3) details[\"&#10003; Contact\"] = \"\";\r\n\t\t\t\t\tif (move.flags['sound'] && dex.gen >= 3) details[\"&#10003; Sound\"] = \"\";\r\n\t\t\t\t\tif (move.flags['bullet'] && dex.gen >= 4) details[\"&#10003; Bullet\"] = \"\";\r\n\t\t\t\t\tif (move.flags['pulse'] && dex.gen >= 4) details[\"&#10003; Pulse\"] = \"\";\r\n\t\t\t\t\tif (!move.flags['protect'] && move.target !== 'self') details[\"&#10003; Bypasses Protect\"] = \"\";\r\n\t\t\t\t\tif (move.flags['bypasssub']) details[\"&#10003; Bypasses Substitutes\"] = \"\";\r\n\t\t\t\t\tif (move.flags['defrost']) details[\"&#10003; Thaws user\"] = \"\";\r\n\t\t\t\t\tif (move.flags['bite'] && dex.gen >= 4) details[\"&#10003; Bite\"] = \"\";\r\n\t\t\t\t\tif (move.flags['punch'] && dex.gen >= 4) details[\"&#10003; Punch\"] = \"\";\r\n\t\t\t\t\tif (move.flags['powder'] && dex.gen >= 4) details[\"&#10003; Powder\"] = \"\";\r\n\t\t\t\t\tif (move.flags['reflectable'] && dex.gen >= 3) details[\"&#10003; Bounceable\"] = \"\";\r\n\t\t\t\t\tif (move.flags['charge']) details[\"&#10003; Two-turn move\"] = \"\";\r\n\t\t\t\t\tif (move.flags['recharge']) details[\"&#10003; Has recharge turn\"] = \"\";\r\n\t\t\t\t\tif (move.flags['gravity'] && dex.gen >= 4) details[\"&#10007; Suppressed by Gravity\"] = \"\";\r\n\t\t\t\t\tif (move.flags['dance'] && dex.gen >= 7) details[\"&#10003; Dance move\"] = \"\";\r\n\t\t\t\t\tif (move.flags['slicing'] && dex.gen >= 4) details[\"&#10003; Slicing move\"] = \"\";\r\n\t\t\t\t\tif (move.flags['wind'] && dex.gen >= 9) details[\"&#10003; Wind move\"] = \"\";\r\n\r\n\t\t\t\t\tif (dex.gen >= 7) {\r\n\t\t\t\t\t\tif (move.gen >= 8 && move.isMax) {\r\n\t\t\t\t\t\t\t// Don't display Z-Power for Max/G-Max moves\r\n\t\t\t\t\t\t} else if (move.zMove?.basePower) {\r\n\t\t\t\t\t\t\tdetails[\"Z-Power\"] = String(move.zMove.basePower);\r\n\t\t\t\t\t\t} else if (move.zMove?.effect) {\r\n\t\t\t\t\t\t\tconst zEffects: { [k: string]: string } = {\r\n\t\t\t\t\t\t\t\tclearnegativeboost: \"Restores negative stat stages to 0\",\r\n\t\t\t\t\t\t\t\tcrit2: \"Crit ratio +2\",\r\n\t\t\t\t\t\t\t\theal: \"Restores HP 100%\",\r\n\t\t\t\t\t\t\t\tcurse: \"Restores HP 100% if user is Ghost type, otherwise Attack +1\",\r\n\t\t\t\t\t\t\t\tredirect: \"Redirects opposing attacks to user\",\r\n\t\t\t\t\t\t\t\thealreplacement: \"Restores replacement's HP 100%\",\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tdetails[\"Z-Effect\"] = zEffects[move.zMove.effect];\r\n\t\t\t\t\t\t} else if (move.zMove?.boost) {\r\n\t\t\t\t\t\t\tdetails[\"Z-Effect\"] = \"\";\r\n\t\t\t\t\t\t\tconst boost = move.zMove.boost;\r\n\t\t\t\t\t\t\tconst stats: { [k in BoostID]: string } = {\r\n\t\t\t\t\t\t\t\tatk: 'Attack', def: 'Defense', spa: 'Sp. Atk', spd: 'Sp. Def', spe: 'Speed', accuracy: 'Accuracy', evasion: 'Evasiveness',\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tlet h: BoostID;\r\n\t\t\t\t\t\t\tfor (h in boost) {\r\n\t\t\t\t\t\t\t\tdetails[\"Z-Effect\"] += ` ${stats[h]} +${boost[h]}`;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (move.isZ && typeof move.isZ === 'string') {\r\n\t\t\t\t\t\t\tdetails[\"&#10003; Z-Move\"] = \"\";\r\n\t\t\t\t\t\t\tconst zCrystal = dex.items.get(move.isZ);\r\n\t\t\t\t\t\t\tdetails[\"Z-Crystal\"] = zCrystal.name;\r\n\t\t\t\t\t\t\tif (zCrystal.itemUser) {\r\n\t\t\t\t\t\t\t\tdetails[\"User\"] = zCrystal.itemUser.join(\", \");\r\n\t\t\t\t\t\t\t\tdetails[\"Required Move\"] = dex.items.get(move.isZ).zMoveFrom!;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdetails[\"Z-Effect\"] = \"None\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (move.isMax) {\r\n\t\t\t\t\t\tdetails[\"&#10003; Max Move\"] = \"\";\r\n\t\t\t\t\t\tif (typeof move.isMax === \"string\") details[\"User\"] = `${move.isMax}`;\r\n\t\t\t\t\t} else if (dex.gen === 8 && move.maxMove?.basePower) {\r\n\t\t\t\t\t\tdetails[\"Dynamax Power\"] = String(move.maxMove.basePower);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst targetTypes: { [k: string]: string } = {\r\n\t\t\t\t\t\tnormal: \"One Adjacent Pok\\u00e9mon\",\r\n\t\t\t\t\t\tself: \"User\",\r\n\t\t\t\t\t\tadjacentAlly: \"One Ally\",\r\n\t\t\t\t\t\tadjacentAllyOrSelf: \"User or Ally\",\r\n\t\t\t\t\t\tadjacentFoe: \"One Adjacent Opposing Pok\\u00e9mon\",\r\n\t\t\t\t\t\tallAdjacentFoes: \"All Adjacent Opponents\",\r\n\t\t\t\t\t\tfoeSide: \"Opposing Side\",\r\n\t\t\t\t\t\tallySide: \"User's Side\",\r\n\t\t\t\t\t\tallyTeam: \"User's Team\",\r\n\t\t\t\t\t\tallAdjacent: \"All Adjacent Pok\\u00e9mon\",\r\n\t\t\t\t\t\tany: \"Any Pok\\u00e9mon\",\r\n\t\t\t\t\t\tall: \"All Pok\\u00e9mon\",\r\n\t\t\t\t\t\tscripted: \"Chosen Automatically\",\r\n\t\t\t\t\t\trandomNormal: \"Random Adjacent Opposing Pok\\u00e9mon\",\r\n\t\t\t\t\t\tallies: \"User and Allies\",\r\n\t\t\t\t\t};\r\n\t\t\t\t\tdetails[\"Target\"] = targetTypes[move.target] || \"Unknown\";\r\n\r\n\t\t\t\t\tif (move.id === 'snatch' && dex.gen >= 3) {\r\n\t\t\t\t\t\tdetails[`<a href=\"https://${Config.routes.dex}/tags/nonsnatchable\">Non-Snatchable Moves</a>`] = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (move.id === 'mirrormove') {\r\n\t\t\t\t\t\tdetails[`<a href=\"https://${Config.routes.dex}/tags/nonmirror\">Non-Mirrorable Moves</a>`] = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (move.isNonstandard === 'Unobtainable') {\r\n\t\t\t\t\t\tdetails[`Unobtainable in Gen ${dex.gen}`] = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'ability':\r\n\t\t\t\tconst ability = dex.abilities.get(newTarget.name);\r\n\t\t\t\tbuffer += `|raw|${Chat.getDataAbilityHTML(ability)}\\n`;\r\n\t\t\t\tif (showDetails) {\r\n\t\t\t\t\tdetails = {\r\n\t\t\t\t\t\tGen: String(ability.gen) || 'CAP',\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (ability.flags['cantsuppress']) details[\"&#10003; Not affected by Gastro Acid\"] = \"\";\r\n\t\t\t\t\tif (ability.flags['breakable']) details[\"&#10003; Ignored by Mold Breaker\"] = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Unrecognized searchType`);\r\n\t\t\t}\r\n\r\n\t\t\tif (showDetails) {\r\n\t\t\t\tbuffer += `|raw|<font size=\"1\">${Object.entries(details).map(([detail, value]) => (\r\n\t\t\t\t\tvalue === '' ? detail : `<font color=\"#686868\">${detail}:</font> ${value}`\r\n\t\t\t\t)).join(\"&nbsp;|&ThickSpace;\")}</font>\\n`;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.sendReply(buffer);\r\n\t},\r\n\tdatahelp: [\r\n\t\t`/data [pokemon/item/move/ability/nature] - Get details on this pokemon/item/move/ability/nature.`,\r\n\t\t`/data [pokemon/item/move/ability/nature], Gen [generation number/format name] - Get details on this pokemon/item/move/ability/nature for that generation/format.`,\r\n\t\t`!data [pokemon/item/move/ability/nature] - Show everyone these details. Requires: + % @ # ~`,\r\n\t],\r\n\r\n\tdt: 'details',\r\n\tdt1: 'details',\r\n\tdt2: 'details',\r\n\tdt3: 'details',\r\n\tdt4: 'details',\r\n\tdt5: 'details',\r\n\tdt6: 'details',\r\n\tdt7: 'details',\r\n\tdt8: 'details',\r\n\tdt9: 'details',\r\n\tdetails(target) {\r\n\t\tif (!target) return this.parse('/help details');\r\n\t\tthis.run('data');\r\n\t},\r\n\tdetailshelp() {\r\n\t\tthis.sendReplyBox(\r\n\t\t\t`<code>/details [Pok\\u00e9mon/item/move/ability/nature]</code>: get additional details on this Pok\\u00e9mon/item/move/ability/nature.<br />` +\r\n\t\t\t`<code>/details [Pok\\u00e9mon/item/move/ability/nature], Gen [generation number]</code>: get details on this Pok\\u00e9mon/item/move/ability/nature in that generation.<br />` +\r\n\t\t\t`You can also append the generation number to <code>/dt</code>; for example, <code>/dt1 Mewtwo</code> gets details on Mewtwo in Gen 1.<br />` +\r\n\t\t\t`<code>/details [Pok\\u00e9mon/item/move/ability/nature], [format]</code>: get details on this Pok\\u00e9mon/item/move/ability/nature in that format.<br />` +\r\n\t\t\t`<code>!details [Pok\\u00e9mon/item/move/ability/nature]</code>: show everyone these details. Requires: + % @ # ~`\r\n\t\t);\r\n\t},\r\n\r\n\tweaknesses: 'weakness',\r\n\tweak: 'weakness',\r\n\tresist: 'weakness',\r\n\tweakness(target, room, user) {\r\n\t\tif (!target) return this.parse('/help weakness');\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tconst { format, dex, targets } = this.splitFormat(target.split(/[,/]/).map(toID));\r\n\r\n\t\tlet isInverse = false;\r\n\t\tif (format && Dex.formats.getRuleTable(format).has('inversemod')) {\r\n\t\t\tisInverse = true;\r\n\t\t} else if (targets[targets.length - 1] === 'inverse') {\r\n\t\t\tisInverse = true;\r\n\t\t\ttargets.pop();\r\n\t\t}\r\n\r\n\t\tconst originalSearch = target;\r\n\t\tlet imperfectMatch = false;\r\n\t\tlet isMatch = false;\r\n\t\tlet species = dex.species.get(targets[0]);\r\n\t\tlet type1 = dex.types.get(targets[0]);\r\n\t\tlet type2 = dex.types.get(targets[1]);\r\n\t\tlet type3 = dex.types.get(targets[2]);\r\n\t\tif (species.name !== \"\" && !species.exists && type1.name !== \"\" && !type1.exists) {\r\n\t\t\tconst typeSearchResults = dex.dataSearch(targets[0], ['TypeChart']);\r\n\t\t\tconst speciesSearchResults = dex.dataSearch(targets[0], ['Pokedex']);\r\n\t\t\tif (typeSearchResults && typeSearchResults[0].name !== \"\") {\r\n\t\t\t\ttype1 = dex.types.get(typeSearchResults[0].name);\r\n\t\t\t\timperfectMatch = true;\r\n\t\t\t} else if (speciesSearchResults && speciesSearchResults[0].name !== \"\") {\r\n\t\t\t\tspecies = dex.species.get(speciesSearchResults[0].name);\r\n\t\t\t\timperfectMatch = true;\r\n\t\t\t} else {\r\n\t\t\t\treturn this.sendReplyBox(Utils.html`${originalSearch} isn't a recognized type or Pokemon${Dex.gen > dex.gen ? ` in Gen ${dex.gen}` : \"\"}.`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (type2.name !== \"\" && !type2.exists) {\r\n\t\t\tconst searchResults = dex.dataSearch(targets[1], ['TypeChart']);\r\n\t\t\tif (searchResults && searchResults[0].name !== \"\") {\r\n\t\t\t\ttype2 = dex.types.get(searchResults[0].name);\r\n\t\t\t\timperfectMatch = true;\r\n\t\t\t} else {\r\n\t\t\t\treturn this.sendReplyBox(Utils.html`${originalSearch} isn't a recognized type or Pokemon${Dex.gen > dex.gen ? ` in Gen ${dex.gen}` : \"\"}.`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (type3.name !== \"\" && !type3.exists) {\r\n\t\t\tconst searchResults = dex.dataSearch(targets[2], ['TypeChart']);\r\n\t\t\tif (searchResults && searchResults[0].name !== \"\") {\r\n\t\t\t\ttype3 = dex.types.get(searchResults[0].name);\r\n\t\t\t\timperfectMatch = true;\r\n\t\t\t} else {\r\n\t\t\t\treturn this.sendReplyBox(Utils.html`${originalSearch} isn't a recognized type or Pokemon${Dex.gen > dex.gen ? ` in Gen ${dex.gen}` : \"\"}.`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst types = [];\r\n\t\tif (species.exists) {\r\n\t\t\tfor (const type of species.types) {\r\n\t\t\t\ttypes.push(type);\r\n\t\t\t}\r\n\t\t\ttarget = species.name;\r\n\t\t\tisMatch = true;\r\n\t\t} else if (type1.exists) {\r\n\t\t\ttypes.push(type1.name);\r\n\t\t\ttarget = type1.name;\r\n\t\t\tisMatch = true;\r\n\t\t}\r\n\r\n\t\tlet alreadyFoundType2 = false;\r\n\t\tlet alreadyFoundType3 = false;\r\n\t\tif (types.toString().toLowerCase().includes(type2.name.toLowerCase())) {\r\n\t\t\talreadyFoundType2 = true;\r\n\t\t}\r\n\t\tif (types.toString().toLowerCase().includes(type3.name.toLowerCase())) {\r\n\t\t\talreadyFoundType3 = true;\r\n\t\t}\r\n\r\n\t\tif (isMatch) {\r\n\t\t\tconst searchTarget = [];\r\n\t\t\tsearchTarget.push(target);\r\n\t\t\tif (type2.exists && !alreadyFoundType2) {\r\n\t\t\t\ttypes.push(type2.name);\r\n\t\t\t\tsearchTarget.push(type2.name);\r\n\t\t\t}\r\n\t\t\tif (type3.exists && !alreadyFoundType3) {\r\n\t\t\t\ttypes.push(type3.name);\r\n\t\t\t\tsearchTarget.push(type3.name);\r\n\t\t\t}\r\n\t\t\ttarget = searchTarget.join(\"/\");\r\n\t\t}\r\n\r\n\t\tif (imperfectMatch) {\r\n\t\t\tthis.sendReply(`No Pok\\u00e9mon or type named '${originalSearch}' was found${Dex.gen > dex.gen ? ` in Gen ${dex.gen}` : \"\"}. Searching for '${target}' instead.`);\r\n\t\t}\r\n\t\tconst weaknesses = [];\r\n\t\tconst resistances = [];\r\n\t\tconst immunities = [];\r\n\t\tfor (const type of dex.types.names()) {\r\n\t\t\tconst notImmune = dex.getImmunity(type, types);\r\n\t\t\tif (notImmune || isInverse) {\r\n\t\t\t\tlet typeMod = !notImmune && isInverse ? 1 : 0;\r\n\t\t\t\ttypeMod += (isInverse ? -1 : 1) * dex.getEffectiveness(type, types);\r\n\t\t\t\tswitch (typeMod) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tweaknesses.push(type);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tweaknesses.push(`<b>${type}</b>`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tweaknesses.push(`<b><i>${type}</i></b>`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase -1:\r\n\t\t\t\t\tresistances.push(type);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase -2:\r\n\t\t\t\t\tresistances.push(`<b>${type}</b>`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase -3:\r\n\t\t\t\t\tresistances.push(`<b><i>${type}</i></b>`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\timmunities.push(type);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst statuses: { [k: string]: string } = {\r\n\t\t\tbrn: \"Burn\",\r\n\t\t\tfrz: \"Frozen\",\r\n\t\t\thail: \"Hail damage\",\r\n\t\t\tpar: \"Paralysis\",\r\n\t\t\tpowder: \"Powder moves\",\r\n\t\t\tprankster: \"Prankster\",\r\n\t\t\tsandstorm: \"Sandstorm damage\",\r\n\t\t\ttox: \"Toxic\",\r\n\t\t\ttrapped: \"Trapping\",\r\n\t\t};\r\n\t\tfor (const status in statuses) {\r\n\t\t\tif (!dex.getImmunity(status, types)) {\r\n\t\t\t\timmunities.push(statuses[status]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst buffer = [];\r\n\t\tbuffer.push(`${species.exists ? `${target} (ignoring abilities):` : `${target}:`}`);\r\n\t\tbuffer.push(`<span class=\"message-effect-weak\">Weaknesses</span>: ${weaknesses.join(', ') || '<span class=\"gray\">None</span>'}`);\r\n\t\tbuffer.push(`<span class=\"message-effect-resist\">Resistances</span>: ${resistances.join(', ') || '<span class=\"gray\">None</span>'}`);\r\n\t\tbuffer.push(`<span class=\"message-effect-immune\">Immunities</span>: ${immunities.join(', ') || '<span class=\"gray\">None</span>'}`);\r\n\t\tthis.sendReplyBox(buffer.join('<br />'));\r\n\t},\r\n\tweaknesshelp: [\r\n\t\t`/weakness [pokemon] - Provides a Pok\\u00e9mon's resistances, weaknesses, and immunities, ignoring abilities.`,\r\n\t\t`/weakness [type 1], [type 2] - Provides a type or type combination's resistances, weaknesses, and immunities, ignoring abilities.`,\r\n\t\t`/weakness [pokemon], [type 1], [type 2] - Provides a Pok\\u00e9mon's type and type combination's resistances, weaknesses, and immunities, ignoring abilities.`,\r\n\t\t`!weakness [pokemon] - Shows everyone a Pok\\u00e9mon's resistances, weaknesses, and immunities, ignoring abilities. Requires: + % @ # &`,\r\n\t\t`!weakness [type 1], [type 2] - Shows everyone a type or type combination's resistances, weaknesses, and immunities, ignoring abilities. Requires: + % @ # &`,\r\n\t\t`!weakness [pokemon], [type 1], [type 2] - Shows everyone a Pok\\u00e9mon's type and type combination's resistances, weaknesses, and immunities, ignoring abilities. Requires: + % @ # &`,\r\n\t],\r\n\r\n\teff: 'effectiveness',\r\n\ttype: 'effectiveness',\r\n\tmatchup: 'effectiveness',\r\n\teffectiveness(target, room, user) {\r\n\t\tconst { dex, targets } = this.splitFormat(target.split(/[,/]/));\r\n\t\tif (targets.length !== 2) throw new Chat.ErrorMessage(\"Attacker and defender must be separated with a comma.\");\r\n\r\n\t\tlet searchMethods = ['types', 'moves', 'species'];\r\n\t\tconst sourceMethods = ['types', 'moves'];\r\n\t\tconst targetMethods = ['types', 'species'];\r\n\t\tlet source;\r\n\t\tlet defender;\r\n\t\tlet foundData;\r\n\t\tlet atkName;\r\n\t\tlet defName;\r\n\r\n\t\tfor (let i = 0; i < 2; ++i) {\r\n\t\t\tlet method!: string;\r\n\t\t\tfor (const m of searchMethods) {\r\n\t\t\t\tfoundData = (dex as any)[m].get(targets[i]);\r\n\t\t\t\tif (foundData.exists) {\r\n\t\t\t\t\tmethod = m;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!foundData.exists) return this.parse('/help effectiveness');\r\n\t\t\tif (!source && sourceMethods.includes(method)) {\r\n\t\t\t\tif (foundData.type) {\r\n\t\t\t\t\tsource = foundData;\r\n\t\t\t\t\tatkName = foundData.name;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsource = foundData.name;\r\n\t\t\t\t\tatkName = foundData.name;\r\n\t\t\t\t}\r\n\t\t\t\tsearchMethods = targetMethods;\r\n\t\t\t} else if (!defender && targetMethods.includes(method)) {\r\n\t\t\t\tif (foundData.types) {\r\n\t\t\t\t\tdefender = foundData;\r\n\t\t\t\t\tdefName = `${foundData.name} (not counting abilities)`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdefender = { types: [foundData.name] };\r\n\t\t\t\t\tdefName = foundData.name;\r\n\t\t\t\t}\r\n\t\t\t\tsearchMethods = sourceMethods;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this.runBroadcast()) return;\r\n\r\n\t\tlet factor = 0;\r\n\t\tif (dex.getImmunity(source, defender) ||\r\n\t\t\tsource.ignoreImmunity && (source.ignoreImmunity === true || source.ignoreImmunity[source.type])) {\r\n\t\t\tlet totalTypeMod = 0;\r\n\t\t\tif (source.effectType !== 'Move' || source.category !== 'Status' && (source.basePower || source.basePowerCallback)) {\r\n\t\t\t\tfor (const type of defender.types) {\r\n\t\t\t\t\tconst baseMod = dex.getEffectiveness(source, type);\r\n\t\t\t\t\tconst moveMod = source.onEffectiveness?.call({ dex: Dex } as Battle, baseMod, null, type, source);\r\n\t\t\t\t\ttotalTypeMod += typeof moveMod === 'number' ? moveMod : baseMod;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfactor = 2 ** totalTypeMod;\r\n\t\t}\r\n\r\n\t\tconst hasThousandArrows = source.id === 'thousandarrows' && defender.types.includes('Flying');\r\n\t\tconst additionalInfo = hasThousandArrows ? \"<br />However, Thousand Arrows will be 1x effective on the first hit.\" : \"\";\r\n\r\n\t\tthis.sendReplyBox(`${atkName} is ${factor}x effective against ${defName}.${additionalInfo}`);\r\n\t},\r\n\teffectivenesshelp: [\r\n\t\t`/effectiveness [attack], [defender] - Provides the effectiveness of a move or type on another type or a Pok\\u00e9mon.`,\r\n\t\t`!effectiveness [attack], [defender] - Shows everyone the effectiveness of a move or type on another type or a Pok\\u00e9mon.`,\r\n\t],\r\n\r\n\tcover: 'coverage',\r\n\tcoverage(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tif (!target) return this.parse(\"/help coverage\");\r\n\r\n\t\tconst { dex, targets } = this.splitFormat(target.split(/[,+/]/));\r\n\t\tconst sources: (string | Move)[] = [];\r\n\t\tlet dispTable = false;\r\n\t\tconst bestCoverage: { [k: string]: number } = {};\r\n\t\tlet hasThousandArrows = false;\r\n\r\n\t\tfor (const type of dex.types.names()) {\r\n\t\t\t// This command uses -5 to designate immunity\r\n\t\t\tbestCoverage[type] = -5;\r\n\t\t}\r\n\r\n\t\tfor (let arg of targets) {\r\n\t\t\targ = toID(arg);\r\n\r\n\t\t\t// arg is the gen?\r\n\t\t\tif (arg === dex.currentMod) continue;\r\n\r\n\t\t\t// arg is 'table' or 'all'?\r\n\t\t\tif (arg === 'table' || arg === 'all') {\r\n\t\t\t\tif (this.broadcasting) return this.sendReplyBox(\"The full table cannot be broadcast.\");\r\n\t\t\t\tdispTable = true;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// arg is a type?\r\n\t\t\tconst argType = arg.charAt(0).toUpperCase() + arg.slice(1);\r\n\t\t\tlet eff;\r\n\t\t\tif (dex.types.isName(argType)) {\r\n\t\t\t\tsources.push(argType);\r\n\t\t\t\tfor (const type in bestCoverage) {\r\n\t\t\t\t\tif (!dex.getImmunity(argType, type)) continue;\r\n\t\t\t\t\teff = dex.getEffectiveness(argType, type);\r\n\t\t\t\t\tif (eff > bestCoverage[type]) bestCoverage[type] = eff;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// arg is a move?\r\n\t\t\tconst move = dex.moves.get(arg);\r\n\t\t\tif (!move.exists) {\r\n\t\t\t\tthrow new Chat.ErrorMessage(`Type or move '${arg}' not found.`);\r\n\t\t\t} else if (move.gen > dex.gen) {\r\n\t\t\t\tthrow new Chat.ErrorMessage(`Move '${arg}' is not available in Gen ${dex.gen}.`);\r\n\t\t\t}\r\n\r\n\t\t\tif (!move.basePower && !move.basePowerCallback) continue;\r\n\t\t\tif (move.id === 'thousandarrows') hasThousandArrows = true;\r\n\t\t\tsources.push(move);\r\n\t\t\tfor (const type in bestCoverage) {\r\n\t\t\t\tif (move.id === \"struggle\") {\r\n\t\t\t\t\teff = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!dex.getImmunity(move.type, type) && !move.ignoreImmunity) continue;\r\n\t\t\t\t\tconst baseMod = dex.getEffectiveness(move, type);\r\n\t\t\t\t\tconst moveMod = move.onEffectiveness?.call({ dex } as Battle, baseMod, null, type, move as ActiveMove);\r\n\t\t\t\t\teff = typeof moveMod === 'number' ? moveMod : baseMod;\r\n\t\t\t\t}\r\n\t\t\t\tif (eff > bestCoverage[type]) bestCoverage[type] = eff;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (sources.length === 0) {\r\n\t\t\tthrow new Chat.ErrorMessage(\"No moves using a type table for determining damage were specified.\");\r\n\t\t}\r\n\t\tif (sources.length > 4) throw new Chat.ErrorMessage(\"Specify a maximum of 4 moves or types.\");\r\n\r\n\t\t// converts to fractional effectiveness, 0 for immune\r\n\t\tfor (const type in bestCoverage) {\r\n\t\t\tif (bestCoverage[type] === -5) {\r\n\t\t\t\tbestCoverage[type] = 0;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tbestCoverage[type] = 2 ** bestCoverage[type];\r\n\t\t}\r\n\r\n\t\tif (!dispTable) {\r\n\t\t\tconst buffer: string[] = [];\r\n\t\t\tconst superEff: string[] = [];\r\n\t\t\tconst neutral: string[] = [];\r\n\t\t\tconst resists: string[] = [];\r\n\t\t\tconst immune: string[] = [];\r\n\r\n\t\t\tfor (const type in bestCoverage) {\r\n\t\t\t\tif (bestCoverage[type] === 0) {\r\n\t\t\t\t\timmune.push(type);\r\n\t\t\t\t} else if (bestCoverage[type] < 1) {\r\n\t\t\t\t\tresists.push(type);\r\n\t\t\t\t} else if (bestCoverage[type] > 1) {\r\n\t\t\t\t\tsuperEff.push(type);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tneutral.push(type);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbuffer.push(`Coverage for ${sources.join(' + ')}:`);\r\n\t\t\tbuffer.push(`<b><font color=#559955>Super Effective</font></b>: ${superEff.join(', ') || '<span class=\"gray\">None</span>'}`);\r\n\t\t\tbuffer.push(`<span class=\"message-effect-resist\">Neutral</span>: ${neutral.join(', ') || '<span class=\"gray\">None</span>'}`);\r\n\t\t\tbuffer.push(`<span class=\"message-effect-weak\">Resists</span>: ${resists.join(', ') || '<span class=\"gray\">None</span>'}`);\r\n\t\t\tbuffer.push(`<span class=\"message-effect-immune\">Immunities</span>: ${immune.join(', ') || '<span class=\"gray\">None</span>'}`);\r\n\t\t\treturn this.sendReplyBox(buffer.join('<br />'));\r\n\t\t} else {\r\n\t\t\tlet buffer = '<div class=\"scrollable\"><table cellpadding=\"1\" width=\"100%\"><tr><th></th>';\r\n\t\t\tconst icon: { [k: string]: string } = {};\r\n\t\t\tfor (const type of dex.types.names()) {\r\n\t\t\t\ticon[type] = `<img src=\"https://${Config.routes.client}/sprites/types/${type}.png\" width=\"32\" height=\"14\">`;\r\n\t\t\t\t// row of icons at top\r\n\t\t\t\tbuffer += `<th>${icon[type]}</th>`;\r\n\t\t\t}\r\n\t\t\tbuffer += '</tr>';\r\n\t\t\tfor (const type1 of dex.types.names()) {\r\n\t\t\t\t// assembles the rest of the rows\r\n\t\t\t\tbuffer += `<tr><th>${icon[type1]}</th>`;\r\n\t\t\t\tfor (const type2 of dex.types.names()) {\r\n\t\t\t\t\tlet typing: string;\r\n\t\t\t\t\tlet cell = '<th ';\r\n\t\t\t\t\tlet bestEff = -5;\r\n\t\t\t\t\tif (type1 === type2) {\r\n\t\t\t\t\t\t// when types are the same it's considered pure type\r\n\t\t\t\t\t\ttyping = type1;\r\n\t\t\t\t\t\tbestEff = bestCoverage[type1];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttyping = `${type1}/${type2}`;\r\n\t\t\t\t\t\tfor (const move of sources) {\r\n\t\t\t\t\t\t\tlet curEff = 0;\r\n\t\t\t\t\t\t\tif (typeof move === 'string') {\r\n\t\t\t\t\t\t\t\tif (!dex.getImmunity(move, type1) || !dex.getImmunity(move, type2)) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlet baseMod = dex.getEffectiveness(move, type1);\r\n\t\t\t\t\t\t\t\tcurEff += baseMod;\r\n\t\t\t\t\t\t\t\tbaseMod = dex.getEffectiveness(move, type2);\r\n\t\t\t\t\t\t\t\tcurEff += baseMod;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif ((!dex.getImmunity(move.type, type1) || !dex.getImmunity(move.type, type2)) && !move.ignoreImmunity) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlet baseMod = dex.getEffectiveness(move.type, type1);\r\n\t\t\t\t\t\t\t\tlet moveMod = move.onEffectiveness?.call({ dex } as Battle, baseMod, null, type1, move as ActiveMove);\r\n\t\t\t\t\t\t\t\tcurEff += typeof moveMod === 'number' ? moveMod : baseMod;\r\n\t\t\t\t\t\t\t\tbaseMod = dex.getEffectiveness(move.type, type2);\r\n\t\t\t\t\t\t\t\tmoveMod = move.onEffectiveness?.call({ dex } as Battle, baseMod, null, type2, move as ActiveMove);\r\n\t\t\t\t\t\t\t\tcurEff += typeof moveMod === 'number' ? moveMod : baseMod;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (curEff > bestEff) bestEff = curEff;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (bestEff === -5) {\r\n\t\t\t\t\t\t\tbestEff = 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbestEff = 2 ** bestEff;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (bestEff === 0) {\r\n\t\t\t\t\t\tcell += `bgcolor=#666666 title=\"${typing}\"><font color=#000000>${bestEff}</font>`;\r\n\t\t\t\t\t} else if (bestEff < 1) {\r\n\t\t\t\t\t\tcell += `bgcolor=#AA5544 title=\"${typing}\"><font color=#660000>${bestEff}</font>`;\r\n\t\t\t\t\t} else if (bestEff > 1) {\r\n\t\t\t\t\t\tcell += `bgcolor=#559955 title=\"${typing}\"><font color=#003300>${bestEff}</font>`;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcell += `bgcolor=#6688AA title=\"${typing}\"><font color=#000066>${bestEff}</font>`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcell += '</th>';\r\n\t\t\t\t\tbuffer += cell;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbuffer += '</table></div>';\r\n\r\n\t\t\tif (hasThousandArrows) {\r\n\t\t\t\tbuffer += \"<br /><b>Thousand Arrows has neutral type effectiveness on Flying-type Pok\\u00e9mon if not already smacked down.\";\r\n\t\t\t}\r\n\r\n\t\t\tthis.sendReplyBox(`Coverage for ${sources.join(' + ')}:<br />${buffer}`);\r\n\t\t}\r\n\t},\r\n\tcoveragehelp: [\r\n\t\t`/coverage [move 1], [move 2] ... - Provides the best effectiveness match-up against all defending types for given moves or attacking types`,\r\n\t\t`!coverage [move 1], [move 2] ... - Shows this information to everyone.`,\r\n\t\t`Adding the parameter 'all' or 'table' will display the information with a table of all type combinations.`,\r\n\t],\r\n\r\n\tstatcalc(target, room, user) {\r\n\t\tif (!target) return this.parse(\"/help statcalc\");\r\n\t\tif (!this.runBroadcast()) return;\r\n\r\n\t\tconst targets = target.split(' ');\r\n\r\n\t\tlet lvlSet = false;\r\n\t\tlet natureSet = false;\r\n\t\tlet ivSet = false;\r\n\t\tlet evSet = false;\r\n\t\tlet baseSet = false;\r\n\t\tlet modSet = false;\r\n\t\tlet realSet = false;\r\n\r\n\t\tlet pokemon: StatsTable | undefined;\r\n\t\tlet useStat: StatID | '' = '';\r\n\r\n\t\tlet level = 100;\r\n\t\tlet calcHP = false;\r\n\t\tlet nature = 1.0;\r\n\t\tlet iv = 31;\r\n\t\tlet ev = 252;\r\n\t\tlet baseStat = -1;\r\n\t\tlet modifier = 0;\r\n\t\tlet positiveMod = true;\r\n\t\tlet realStat = 0;\r\n\r\n\t\tfor (const arg of targets) {\r\n\t\t\tconst lowercase = arg.toLowerCase();\r\n\r\n\t\t\tif (!lvlSet) {\r\n\t\t\t\tif (lowercase === 'lc') {\r\n\t\t\t\t\tlevel = 5;\r\n\t\t\t\t\tlvlSet = true;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (lowercase === 'vgc') {\r\n\t\t\t\t\tlevel = 50;\r\n\t\t\t\t\tlvlSet = true;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (lowercase.startsWith('lv') || lowercase.startsWith('level')) {\r\n\t\t\t\t\tlevel = parseInt(arg.replace(/\\D/g, ''));\r\n\t\t\t\t\tlvlSet = true;\r\n\t\t\t\t\tif (isNaN(level)) {\r\n\t\t\t\t\t\treturn this.sendReplyBox('Invalid value for level: ' + Utils.escapeHTML(arg));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (level < 1 || level > 9999) {\r\n\t\t\t\t\t\treturn this.sendReplyBox('Level should be between 1 and 9999.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!useStat) {\r\n\t\t\t\tswitch (lowercase) {\r\n\t\t\t\tcase 'hp':\r\n\t\t\t\tcase 'hitpoints':\r\n\t\t\t\t\tcalcHP = true;\r\n\t\t\t\t\tuseStat = 'hp';\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tcase 'atk':\r\n\t\t\t\tcase 'attack':\r\n\t\t\t\t\tuseStat = 'atk';\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tcase 'def':\r\n\t\t\t\tcase 'defense':\r\n\t\t\t\t\tuseStat = 'def';\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tcase 'spa':\r\n\t\t\t\t\tuseStat = 'spa';\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tcase 'spd':\r\n\t\t\t\tcase 'sdef':\r\n\t\t\t\t\tuseStat = 'spd';\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tcase 'spe':\r\n\t\t\t\tcase 'speed':\r\n\t\t\t\t\tuseStat = 'spe';\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!natureSet) {\r\n\t\t\t\tif (lowercase === 'boosting' || lowercase === 'positive') {\r\n\t\t\t\t\tnature = 1.1;\r\n\t\t\t\t\tnatureSet = true;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (lowercase === 'negative' || lowercase === 'inhibiting') {\r\n\t\t\t\t\tnature = 0.9;\r\n\t\t\t\t\tnatureSet = true;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (lowercase === 'neutral') {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!pokemon) {\r\n\t\t\t\tconst testPoke = Dex.species.get(arg);\r\n\t\t\t\tif (testPoke.exists) {\r\n\t\t\t\t\tpokemon = testPoke.baseStats;\r\n\t\t\t\t\tbaseSet = true;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!ivSet) {\r\n\t\t\t\tif (lowercase.endsWith('iv') || lowercase.endsWith('ivs')) {\r\n\t\t\t\t\tiv = parseInt(arg);\r\n\t\t\t\t\tivSet = true;\r\n\r\n\t\t\t\t\tif (isNaN(iv)) {\r\n\t\t\t\t\t\treturn this.sendReplyBox('Invalid value for IVs: ' + Utils.escapeHTML(arg));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!evSet) {\r\n\t\t\t\tif (lowercase === 'invested' || lowercase === 'max') {\r\n\t\t\t\t\tevSet = true;\r\n\t\t\t\t\tif (lowercase === 'max' && !natureSet) {\r\n\t\t\t\t\t\tnature = 1.1;\r\n\t\t\t\t\t\tnatureSet = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (lowercase === 'uninvested') {\r\n\t\t\t\t\tev = 0;\r\n\t\t\t\t\tevSet = true;\r\n\t\t\t\t} else if (lowercase.endsWith('ev') || lowercase.endsWith('evs') ||\r\n\t\t\t\t\tlowercase.endsWith('+') || lowercase.endsWith('-')) {\r\n\t\t\t\t\tev = parseInt(arg);\r\n\t\t\t\t\tevSet = true;\r\n\r\n\t\t\t\t\tif (isNaN(ev)) {\r\n\t\t\t\t\t\treturn this.sendReplyBox('Invalid value for EVs: ' + Utils.escapeHTML(arg));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (ev > 255 || ev < 0) {\r\n\t\t\t\t\t\treturn this.sendReplyBox('The amount of EVs should be between 0 and 255.');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!natureSet) {\r\n\t\t\t\t\t\tif (arg.includes('+')) {\r\n\t\t\t\t\t\t\tnature = 1.1;\r\n\t\t\t\t\t\t\tnatureSet = true;\r\n\t\t\t\t\t\t} else if (arg.includes('-')) {\r\n\t\t\t\t\t\t\tnature = 0.9;\r\n\t\t\t\t\t\t\tnatureSet = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!modSet) {\r\n\t\t\t\tif (['band', 'scarf', 'specs'].includes(arg)) {\r\n\t\t\t\t\tmodifier = 1;\r\n\t\t\t\t\tmodSet = true;\r\n\t\t\t\t} else if (arg.startsWith('+')) {\r\n\t\t\t\t\tmodifier = parseInt(arg.charAt(1));\r\n\t\t\t\t\tmodSet = true;\r\n\t\t\t\t} else if (arg.startsWith('-')) {\r\n\t\t\t\t\tpositiveMod = false;\r\n\t\t\t\t\tmodifier = parseInt(arg.charAt(1));\r\n\t\t\t\t\tmodSet = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (isNaN(modifier)) {\r\n\t\t\t\t\treturn this.sendReplyBox('Invalid value for modifier: ' + Utils.escapeHTML(String(modifier)));\r\n\t\t\t\t}\r\n\t\t\t\tif (modifier > 6) {\r\n\t\t\t\t\treturn this.sendReplyBox('Modifier should be a number between -6 and +6');\r\n\t\t\t\t}\r\n\t\t\t\tif (modSet) continue;\r\n\t\t\t}\r\n\r\n\t\t\tconst tempStat = parseInt(arg);\r\n\r\n\t\t\tif (!realSet) {\r\n\t\t\t\tif (lowercase.endsWith('real')) {\r\n\t\t\t\t\trealStat = tempStat;\r\n\t\t\t\t\trealSet = true;\r\n\r\n\t\t\t\t\tif (isNaN(realStat)) {\r\n\t\t\t\t\t\treturn this.sendReplyBox('Invalid value for target real stat: ' + Utils.escapeHTML(arg));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (realStat < 0) {\r\n\t\t\t\t\t\treturn this.sendReplyBox('The target real stat must be greater than 0.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!isNaN(tempStat) && !baseSet && tempStat > 0 && tempStat < 256) {\r\n\t\t\t\tbaseStat = tempStat;\r\n\t\t\t\tbaseSet = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (pokemon) {\r\n\t\t\tif (useStat) {\r\n\t\t\t\tbaseStat = pokemon[useStat];\r\n\t\t\t} else {\r\n\t\t\t\treturn this.sendReplyBox('No stat found.');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (realSet) {\r\n\t\t\tif (!baseSet) {\r\n\t\t\t\tif (calcHP) {\r\n\t\t\t\t\tbaseStat = Math.ceil((100 * realStat - 10 - level * (Math.floor(ev / 4) + iv + 100)) / (2 * level));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!positiveMod) {\r\n\t\t\t\t\t\trealStat *= (2 + modifier) / 2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trealStat *= 2 / (2 + modifier);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbaseStat = Math.ceil(\r\n\t\t\t\t\t\t(100 * Math.ceil(realStat) - nature * (level * (Math.floor(ev / 4) + iv) + 500)) /\r\n\t\t\t\t\t\t(2 * level * nature)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (baseStat < 0) {\r\n\t\t\t\t\treturn this.sendReplyBox('No valid value for base stat possible with given parameters.');\r\n\t\t\t\t}\r\n\t\t\t} else if (!evSet) {\r\n\t\t\t\tif (calcHP) {\r\n\t\t\t\t\tev = Math.ceil(100 * (realStat - 10) / level - 2 * (baseStat + 50));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!positiveMod) {\r\n\t\t\t\t\t\trealStat *= (2 + modifier) / 2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trealStat *= 2 / (2 + modifier);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tev = Math.ceil(-1 * (2 * (nature * (baseStat * level + 250) - 50 * Math.ceil(realStat))) / (level * nature));\r\n\t\t\t\t}\r\n\t\t\t\tev -= 31;\r\n\t\t\t\tif (ev < 0) iv += ev;\r\n\t\t\t\tev *= 4;\r\n\t\t\t\tif (iv < 0 || ev > 255) {\r\n\t\t\t\t\treturn this.sendReplyBox(`No valid EV/IV combination possible with given parameters. Maybe try a different nature?${ev}`);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn this.sendReplyBox('Too many parameters given; nothing to calculate.');\r\n\t\t\t}\r\n\t\t} else if (baseStat < 0) {\r\n\t\t\treturn this.sendReplyBox('No valid value for base stat found.');\r\n\t\t}\r\n\r\n\t\tlet output: number;\r\n\r\n\t\tif (calcHP) {\r\n\t\t\toutput = (((iv + (2 * baseStat) + Math.floor(ev / 4) + 100) * level) / 100) + 10;\r\n\t\t} else {\r\n\t\t\toutput = Math.floor(nature * Math.floor((((iv + (2 * baseStat) + Math.floor(ev / 4)) * level) / 100) + 5));\r\n\t\t\tif (positiveMod) {\r\n\t\t\t\toutput *= (2 + modifier) / 2;\r\n\t\t\t} else {\r\n\t\t\t\toutput *= 2 / (2 + modifier);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.sendReplyBox(`Base ${baseStat} ${calcHP ? ' HP ' : ' '}at level ${level} with ${iv} IVs, ${ev}${nature === 1.1 ? '+' : nature === 0.9 ? '-' : ''} EVs${modifier > 0 && !calcHP ? ` at ${positiveMod ? '+' : '-'}${modifier}` : ''}: <b>${Math.floor(output)}</b>.`);\r\n\t},\r\n\tstatcalchelp: [\r\n\t\t`/statcalc [level] [base stat] [IVs] [nature] [EVs] [modifier] (only base stat is required) - Calculates what the actual stat of a Pok\u00E9mon is with the given parameters. For example, '/statcalc lv50 100 30iv positive 252ev scarf' calculates the speed of a base 100 scarfer with HP Ice in Battle Spot, and '/statcalc uninvested 90 neutral' calculates the attack of an uninvested Crobat.`,\r\n\t\t`!statcalc [level] [base stat] [IVs] [nature] [EVs] [modifier] (only base stat is required) - Shows this information to everyone.`,\r\n\t\t`Inputting 'hp' as an argument makes it use the formula for HP. Instead of giving nature, '+' and '-' can be appended to the EV amount (e.g. 252+ev) to signify a boosting or inhibiting nature.`,\r\n\t\t`An actual stat can be given in place of a base stat or EVs. In this case, the minumum base stat or EVs necessary to have that real stat with the given parameters will be determined. For example, '/statcalc 502real 252+ +1' calculates the minimum base speed necessary for a positive natured fully invested scarfer to outspeed`,\r\n\t],\r\n\r\n\t/*********************************************************\r\n\t * Informational commands\r\n\t *********************************************************/\r\n\r\n\tuptime(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tconst uptime = process.uptime();\r\n\t\tlet uptimeText;\r\n\t\tif (uptime > 24 * 60 * 60) {\r\n\t\t\tconst uptimeDays = Math.floor(uptime / (24 * 60 * 60));\r\n\t\t\tuptimeText = `${uptimeDays} ${uptimeDays === 1 ? \"day\" : \"days\"}`;\r\n\t\t\tconst uptimeHours = Math.floor(uptime / (60 * 60)) - uptimeDays * 24;\r\n\t\t\tif (uptimeHours) uptimeText += `, ${uptimeHours} ${uptimeHours === 1 ? \"hour\" : \"hours\"}`;\r\n\t\t} else {\r\n\t\t\tuptimeText = Chat.toDurationString(uptime * 1000);\r\n\t\t}\r\n\t\tthis.sendReplyBox(`Uptime: <b>${uptimeText}</b>`);\r\n\t},\r\n\tuptimehelp: [`/uptime - Shows how long the server has been online for.`],\r\n\r\n\tst: 'servertime',\r\n\tservertime(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tconst servertime = new Date();\r\n\t\tthis.sendReplyBox(`Server time: <b>${servertime.toLocaleString()}</b>`);\r\n\t},\r\n\tservertimehelp: [`/servertime - Shows the current time where the server is.`],\r\n\r\n\tgroups(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\ttarget = toID(target);\r\n\t\tconst showRoom = (target !== 'global');\r\n\t\tconst showGlobal = (target !== 'room' && target !== 'rooms');\r\n\r\n\t\tconst roomRanks = [\r\n\t\t\t`<strong>Room ranks</strong>`,\r\n\t\t\t`^ <strong>Prize Winner</strong> - They don't have any powers beyond a symbol.`,\r\n\t\t\t`+ <strong>Voice</strong> - They can use ! commands like !groups`,\r\n\t\t\t`% <strong>Driver</strong> - The above, and they can mute and warn`,\r\n\t\t\t`@ <strong>Moderator</strong> - The above, and they can room ban users`,\r\n\t\t\t`* <strong>Bot</strong> - An automated account that can mute, warn, and use HTML`,\r\n\t\t\t`# <strong>Room Owner</strong> - They are leaders of the room and can almost totally control it`,\r\n\t\t];\r\n\r\n\t\tconst globalRanks = [\r\n\t\t\t`<strong>Global ranks</strong>`,\r\n\t\t\t`+ <strong>Global Voice</strong> - They can use ! commands like !groups`,\r\n\t\t\t`% <strong>Global Driver</strong> - Like Voice, and they can lock users and check for alts`,\r\n\t\t\t`@ <strong>Global Moderator</strong> - The above, and they can globally ban users`,\r\n\t\t\t`* <strong>Global Bot</strong> - An automated account that can use HTML anywhere`,\r\n\t\t\t`~ <strong>Global Administrator</strong> - They can do anything, like change what this message says and promote users globally`,\r\n\t\t];\r\n\r\n\t\tthis.sendReplyBox(\r\n\t\t\t(showRoom ? roomRanks.map(str => this.tr(str)).join('<br />') : ``) +\r\n\t\t\t(showRoom && showGlobal ? `<br /><br />` : ``) +\r\n\t\t\t(showGlobal ? globalRanks.map(str => this.tr(str)).join('<br />') : ``)\r\n\t\t);\r\n\t},\r\n\tgroupshelp: [\r\n\t\t`/groups - Explains what the symbols (like % and @) before people's names mean.`,\r\n\t\t`/groups [global|room] - Explains only global or room symbols.`,\r\n\t\t`!groups - Shows everyone that information. Requires: + % @ # ~`,\r\n\t],\r\n\r\n\tpunishments(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\ttarget = toID(target);\r\n\t\tconst showRoom = (target !== 'global');\r\n\t\tconst showGlobal = (target !== 'room' && target !== 'rooms');\r\n\r\n\t\tconst roomPunishments = [\r\n\t\t\t`<strong>Room punishments</strong>:`,\r\n\t\t\t`<strong>warn</strong> - Displays a popup with the rules.`,\r\n\t\t\t`<strong>mute</strong> - Mutes a user (makes them unable to talk) for 7 minutes.`,\r\n\t\t\t`<strong>hourmute</strong> - Mutes a user for 60 minutes.`,\r\n\t\t\t`<strong>ban</strong> - Bans a user (makes them unable to join the room) for 2 days.`,\r\n\t\t\t`<strong>weekban</strong> - Bans a user from the room for a week.`,\r\n\t\t\t`<strong>blacklist</strong> - Bans a user for a year.`,\r\n\t\t];\r\n\r\n\t\tconst globalPunishments = [\r\n\t\t\t`<strong>Global punishments</strong>:`,\r\n\t\t\t`<strong>lock</strong> - Locks a user (makes them unable to talk in any rooms or PM non-staff) for 2 days.`,\r\n\t\t\t`<strong>weeklock</strong> - Locks a user for a week.`,\r\n\t\t\t`<strong>namelock</strong> - Locks a user and prevents them from having a username for 2 days.`,\r\n\t\t\t`<strong>globalban</strong> - Globally bans (makes them unable to connect and play games) for a week.`,\r\n\t\t];\r\n\r\n\t\tconst indefinitePunishments = [\r\n\t\t\tthis.tr`<strong>Indefinite global punishments</strong>:`,\r\n\t\t\tthis.tr`<strong>permalock</strong> - Issued for repeated instances of bad behavior and is rarely the result of a single action. ` +\r\n\t\t\tthis.tr`These can be appealed in the <a href=\"https://www.smogon.com/forums/threads/discipline-appeal-rules.3583479/\">Discipline Appeal</a>` +\r\n\t\t\tthis.tr` forum after at least 3 months without incident.`,\r\n\t\t\tthis.tr`<strong>permaban</strong> - Unappealable global ban typically issued for the most severe cases of offensive/inappropriate behavior.`,\r\n\t\t];\r\n\r\n\t\tthis.sendReplyBox(\r\n\t\t\t(showRoom ? roomPunishments.map(str => this.tr(str)).join('<br />') : ``) +\r\n\t\t\t(showRoom && showGlobal ? `<br /><br />` : ``) +\r\n\t\t\t(showGlobal ? globalPunishments.map(str => this.tr(str)).join('<br />') : ``) +\r\n\t\t\t(showGlobal ? `<br /><br />${indefinitePunishments.join('<br />')}` : ``)\r\n\t\t);\r\n\t},\r\n\tpunishmentshelp: [\r\n\t\t`/punishments - Explains punishments.`,\r\n\t\t`!punishments - Show everyone that information. Requires: + % @ # ~`,\r\n\t],\r\n\r\n\trepo: 'opensource',\r\n\trepository: 'opensource',\r\n\tgit: 'opensource',\r\n\topensource(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tthis.sendReplyBox(\r\n\t\t\t`Pok&eacute;mon Showdown is open source:<br />` +\r\n\t\t\t`- Language: mostly TypeScript, a little PHP<br />` +\r\n\t\t\t`- <a href=\"https://github.com/smogon/pokemon-showdown/commits/master\">What's new?</a><br />` +\r\n\t\t\t`- <a href=\"https://github.com/smogon/pokemon-showdown\">Server source code</a><br />` +\r\n\t\t\t`- <a href=\"https://github.com/smogon/pokemon-showdown-client\">Client source code</a><br />` +\r\n\t\t\t`- <a href=\"https://github.com/Zarel/Pokemon-Showdown-Dex\">Dex source code</a><br />` +\r\n\t\t\t`- <a href=\"https://github.com/smogon/pokemon-showdown-loginserver\">Login server source code</a>`\r\n\t\t);\r\n\t},\r\n\topensourcehelp: [\r\n\t\t`/opensource - Links to PS's source code repository.`,\r\n\t\t`!opensource - Show everyone that information. Requires: + % @ # ~`,\r\n\t],\r\n\r\n\tstaff(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tthis.sendReplyBox(`<a href=\"https://www.smogon.com/sim/staff_list\">Pok&eacute;mon Showdown Staff List</a>`);\r\n\t},\r\n\tstaffhelp: [`/staff - View the staff list.`],\r\n\r\n\tforums(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tthis.sendReplyBox(`<a href=\"https://www.smogon.com/forums/forums/209/\">Pok&eacute;mon Showdown Forums</a>`);\r\n\t},\r\n\tforumshelp: [`/forums - Links to the PS forums.`],\r\n\r\n\tprivacypolicy(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tthis.sendReplyBox([\r\n\t\t\tthis.tr`- We log PMs so you can report them - staff can't look at them without permission unless there's a law enforcement reason.`,\r\n\t\t\tthis.tr`- We log IPs to enforce bans and mutes.`,\r\n\t\t\tthis.tr`- We use cookies to save your login info and teams, and for Google Analytics and AdSense.`,\r\n\t\t\tthis.tr`- For more information, you can read our <a href=\"https://${Config.routes.root}/privacy\">full privacy policy.</a>`,\r\n\t\t].join(`<br />`));\r\n\t},\r\n\tprivacypolicyhelp: [`/privacypolicy - Displays PS's privacy policy.`],\r\n\r\n\tsuggest: 'suggestions',\r\n\tsuggestion: 'suggestions',\r\n\tsuggestions(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tthis.sendReplyBox(`<a href=\"https://play.pokemonshowdown.com/suggestions\">Make a suggestion for Pok&eacute;mon Showdown</a>`);\r\n\t},\r\n\tsuggestionshelp: [`/suggestions - Links to the place to make suggestions for Pokemon Showdown.`],\r\n\r\n\tbugreport: 'bugs',\r\n\tbugreports: 'bugs',\r\n\tbugs(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tif (room?.battle) {\r\n\t\t\tthis.sendReplyBox(`<center><button name=\"saveReplay\"><i class=\"fa fa-upload\"></i> Save Replay</button> &mdash; <a href=\"https://www.smogon.com/forums/threads/3520646/\">Questions</a> &mdash; <a href=\"https://play.pokemonshowdown.com/bugs\">Bug Reports</a></center>`);\r\n\t\t} else {\r\n\t\t\tthis.sendReplyBox(\r\n\t\t\t\t`Have a replay showcasing a bug on Pok&eacute;mon Showdown?<br />` +\r\n\t\t\t\t`- <a href=\"https://www.smogon.com/forums/threads/3520646/\">Questions</a><br />` +\r\n\t\t\t\t`- <a href=\"https://play.pokemonshowdown.com/bugs\">Bug Reports</a> (ask in <a href=\"/help\">Help</a> before posting if you're unsure)`\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\tbugshelp: [`/bugs - Links to the various bug reporting services.`],\r\n\r\n\toptionbutton: 'optionsbutton',\r\n\toptionsbutton(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tthis.sendReplyBox(`<button name=\"openOptions\" class=\"button\"><i style=\"font-size: 16px; vertical-align: -1px\" class=\"fa fa-cog\"></i> Options</button> (The Sound and Options buttons are at the top right, next to your username)`);\r\n\t},\r\n\toptionsbuttonhelp: [`/optionsbutton - Provides a button to the Options menu.`],\r\n\r\n\tsoundsbutton: 'soundbutton',\r\n\tvolumebutton: 'soundbutton',\r\n\tsoundbutton(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tthis.sendReplyBox(`<button name=\"openSounds\" class=\"button\"><i style=\"font-size: 16px; vertical-align: -1px\" class=\"fa fa-volume-up\"></i> Sound</button> (The Sound and Options buttons are at the top right, next to your username)`);\r\n\t},\r\n\tsoundbuttonhelp: [`/soundbutton - Provides a button to the Sounds menu.`],\r\n\r\n\tintroduction: 'intro',\r\n\tintro(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tthis.sendReplyBox(\r\n\t\t\t`New to competitive Pok&eacute;mon?<br />` +\r\n\t\t\t`- <a href=\"https://www.smogon.com/forums/threads/3676132/\">Beginner's Guide to Pok&eacute;mon Showdown</a><br />` +\r\n\t\t\t`- <a href=\"https://www.smogon.com/dp/articles/intro_comp_pokemon\">An introduction to competitive Pok&eacute;mon</a><br />` +\r\n\t\t\t`- <a href=\"https://www.smogon.com/sm/articles/sm_tiers\">What do 'OU', 'UU', etc mean?</a><br />` +\r\n\t\t\t`- <a href=\"https://www.smogon.com/dex/ss/formats/\">What are the rules for each format?</a><br />` +\r\n\t\t\t`- <a href=\"https://www.smogon.com/ss/articles/clauses\">What is 'Sleep Clause' and other clauses?</a><br />` +\r\n\t\t\t`- <a href=\"https://www.smogon.com/articles/getting-started\">Next Steps for Competitive Battling</a>`\r\n\t\t);\r\n\t},\r\n\tintrohelp: [\r\n\t\t`/intro - Provides an introduction to competitive Pok\\u00e9mon.`,\r\n\t\t`!intro - Show everyone that information. Requires: + % @ # ~`,\r\n\t],\r\n\r\n\tmentoring: 'smogintro',\r\n\tsmogonintro: 'smogintro',\r\n\tsmogintro(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tthis.sendReplyBox(\r\n\t\t\t`Welcome to Smogon's official simulator! The <a href=\"https://www.smogon.com/forums/forums/intro_hub\">Information & Resources forum</a> can help you get integrated into the community.<br />` +\r\n\t\t\t`- <a href=\"https://www.smogon.com/forums/threads/3710821/\">Introduction to Smogon</a><br />` +\r\n\t\t\t`- <a href=\"https://www.smogon.com/forums/threads/3652546/\">Smogon Discord Directory</a><br />`\r\n\t\t);\r\n\t},\r\n\tsmogintrohelp: [`/smogintro - Provides an introduction to Smogon.`],\r\n\r\n\tbsscalc: 'calc',\r\n\tcalculator: 'calc',\r\n\tcantsaycalc: 'calc',\r\n\tdamagecalculator: 'calc',\r\n\tdamagecalc: 'calc',\r\n\thonkalculator: 'calc',\r\n\thonkocalc: 'calc',\r\n\trandomscalc: 'calc',\r\n\trandbatscalc: 'calc',\r\n\trcalc: 'calc',\r\n\tcalc(target, room, user, connection, cmd) {\r\n\t\tif (cmd === 'calc' && target) return this.run('calculate');\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tconst DEFAULT_CALC_COMMANDS = ['honkalculator', 'honkocalc'];\r\n\t\tconst RANDOMS_CALC_COMMANDS = ['randomscalc', 'randbatscalc', 'rcalc'];\r\n\t\tconst BATTLESPOT_CALC_COMMANDS = ['bsscalc', 'cantsaycalc'];\r\n\t\tconst SUPPORTED_BATTLESPOT_FORMATS = [\r\n\t\t\t'gen5gbusingles', 'gen5gbudoubles', 'gen6battlespotsingles', 'gen6battlespotdoubles', 'gen6battlespottriples', 'gen7battlespotsingles', 'gen7battlespotdoubles', 'gen7bssfactory',\r\n\t\t];\r\n\t\tconst isRandomBattle = (room?.battle && (room.battle.format.endsWith('randombattle') ||\r\n\t\t\troom.battle.format.endsWith('randomdoublesbattle')));\r\n\t\tconst isBattleSpotBattle = (room?.battle && (SUPPORTED_BATTLESPOT_FORMATS.includes(room.battle.format) ||\r\n\t\t\troom.battle.format.includes(\"battlespotspecial\")));\r\n\t\tconst { dex } = this.extractFormat(room?.battle?.format);\r\n\r\n\t\tif (RANDOMS_CALC_COMMANDS.includes(cmd) ||\r\n\t\t\t(isRandomBattle && !DEFAULT_CALC_COMMANDS.includes(cmd) && !BATTLESPOT_CALC_COMMANDS.includes(cmd))) {\r\n\t\t\treturn this.sendReplyBox(\r\n\t\t\t\t`Random Battles damage calculator. (Courtesy of dhelmise &amp; jetou)<br />` +\r\n\t\t\t\t`- <a href=\"https://calc.pokemonshowdown.com/randoms.html?gen=${dex.gen}\">Random Battles Damage Calculator</a>`\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (BATTLESPOT_CALC_COMMANDS.includes(cmd) || (isBattleSpotBattle && !DEFAULT_CALC_COMMANDS.includes(cmd))) {\r\n\t\t\treturn this.sendReplyBox(\r\n\t\t\t\t`Battle Spot damage calculator. (Courtesy of cant say &amp; LegoFigure11)<br />` +\r\n\t\t\t\t`- <a href=\"https://cantsay.github.io/\">Battle Spot Damage Calculator</a>`\r\n\t\t\t);\r\n\t\t}\r\n\t\tthis.sendReplyBox(\r\n\t\t\t`Pok&eacute;mon Showdown! damage calculator. (Courtesy of Honko, Austin, dhelmise, &amp; jetou)<br />` +\r\n\t\t\t`- <a href=\"https://calc.pokemonshowdown.com/index.html?gen=${dex.gen}\">Damage Calculator</a>`\r\n\t\t);\r\n\t},\r\n\tcalchelp: [\r\n\t\t`/calc - Provides a link to a damage calculator`,\r\n\t\t`/rcalc - Provides a link to the random battles damage calculator`,\r\n\t\t`/bsscalc - Provides a link to the Battle Spot damage calculator`,\r\n\t\t`!calc - Shows everyone a link to a damage calculator. Requires: + % @ # ~`,\r\n\t],\r\n\r\n\tcapintro: 'cap',\r\n\tcap(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tthis.sendReplyBox(\r\n\t\t\t`An introduction to the Create-A-Pok&eacute;mon project:<br />` +\r\n\t\t\t`- <a href=\"https://www.smogon.com/cap/\">CAP project website and description</a><br />` +\r\n\t\t\t`- <a href=\"https://www.smogon.com/forums/forums/66/\">CAP project discussion forum</a><br />` +\r\n\t\t\t`- <a href=\"https://www.smogon.com/forums/threads/48782/\">What Pok&eacute;mon have been made?</a><br />` +\r\n\t\t\t`- <a href=\"https://www.smogon.com/forums/forums/477\">Talk about the metagame here</a><br />` +\r\n\t\t\t`- <a href=\"https://www.smogon.com/forums/threads/3718107/\">Sample SV CAP teams</a>`\r\n\t\t);\r\n\t},\r\n\tcaphelp: [\r\n\t\t`/cap - Provides an introduction to the Create-A-Pok\\u00e9mon project.`,\r\n\t\t`!cap - Show everyone that information. Requires: + % @ # ~`,\r\n\t],\r\n\r\n\tbattlerules(target, room, user) {\r\n\t\treturn this.parse(`/join view-battlerules`);\r\n\t},\r\n\tbattleruleshelp: [\r\n\t\t`/battlerules - Provides information on the rules that can be added to tournament and challenge battles.`,\r\n\t],\r\n\r\n\tbanlists: 'formathelp',\r\n\ttier: 'formathelp',\r\n\ttiers: 'formathelp',\r\n\tformats: 'formathelp',\r\n\ttiershelp: 'formathelp',\r\n\tformatshelp: 'formathelp',\r\n\tviewbanlist: 'formathelp',\r\n\tasync formathelp(target, room, user, connection, cmd) {\r\n\t\tif (!target && this.runBroadcast()) {\r\n\t\t\treturn this.sendReplyBox(\r\n\t\t\t\t`- <a href=\"https://www.smogon.com/forums/forums/smogon-metagames.725/\">Smogon Metagames</a><br />` +\r\n\t\t\t\t`- <a href=\"https://www.smogon.com/forums/threads/3628026/\">Tiering Framework</a><br />` +\r\n\t\t\t\t`- <a href=\"https://www.smogon.com/forums/threads/3644714/\">Tiering FAQ</a><br />` +\r\n\t\t\t\t\"<br /><em>Type /tier <strong>[tier name]</strong> to get details, banlists, and helpful resources like sample teams for any tier!</em>\"\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst isOMSearch = (cmd === 'om' || cmd === 'othermetas');\r\n\r\n\t\tlet targetId = toID(target);\r\n\t\tif (targetId === 'ladder') targetId = 'search' as ID;\r\n\t\tif (targetId === 'all') targetId = '';\r\n\t\tconst { totalMatches, sections } = findFormats(targetId, isOMSearch);\r\n\r\n\t\tif (!totalMatches) return this.errorReply(\"No matched formats found.\");\r\n\r\n\t\tconst format = totalMatches === 1 ? Dex.formats.get(Object.values(sections)[0].formats[0]) : null;\r\n\r\n\t\tif (!this.runBroadcast(`!formathelp ${format ? format.id : target}`)) return;\r\n\r\n\t\tif (format) {\r\n\t\t\tconst rules: string[] = [];\r\n\t\t\tlet rulesetHtml = '';\r\n\t\t\tif (['Format', 'Rule', 'ValidatorRule'].includes(format.effectType)) {\r\n\t\t\t\tif (format.ruleset?.length) {\r\n\t\t\t\t\trules.push(`<b>Ruleset</b> - ${Utils.escapeHTML(format.ruleset.join(\", \"))}`);\r\n\t\t\t\t}\r\n\t\t\t\tif (format.banlist?.length) {\r\n\t\t\t\t\trules.push(`<b>Bans</b> - ${Utils.escapeHTML(format.banlist.join(\", \"))}`);\r\n\t\t\t\t}\r\n\t\t\t\tif (format.unbanlist?.length) {\r\n\t\t\t\t\trules.push(`<b>Unbans</b> - ${Utils.escapeHTML(format.unbanlist.join(\", \"))}`);\r\n\t\t\t\t}\r\n\t\t\t\tif (format.restricted?.length) {\r\n\t\t\t\t\trules.push(`<b>Restricted</b> - ${Utils.escapeHTML(format.restricted.join(\", \"))}`);\r\n\t\t\t\t}\r\n\t\t\t\tif (rules.length > 0) {\r\n\t\t\t\t\trulesetHtml = `<details class=\"details\"><summary>Banlist/Ruleset</summary>${rules.join(\"<br />\")}</details>`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\trulesetHtml = `No ruleset found for ${format.name}`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst formatDesc = format.desc || '';\r\n\t\t\tconst descHtml: string[] = [];\r\n\t\t\tconst data = await getFormatResources(format.id);\r\n\t\t\tif (data) {\r\n\t\t\t\tfor (const { resource_name, url } of data.resources) {\r\n\t\t\t\t\tlet rn = resource_name;\r\n\t\t\t\t\trn = rn.replace(/ thread$/gi, '');\r\n\t\t\t\t\trn = rn.replace(/Pokemon Showdown/gi, 'PS');\r\n\t\t\t\t\trn = rn.split(' ').map((x: string) => x[0].toUpperCase() + x.substr(1)).join(' ');\r\n\t\t\t\t\tdescHtml.push(`&bullet; <a href=\"${url}\">${rn}</a>`);\r\n\t\t\t\t}\r\n\t\t\t} else if (format.threads?.length) {\r\n\t\t\t\tdescHtml.push(...format.threads);\r\n\t\t\t} else {\r\n\t\t\t\tconst genID = ['rb', 'gs', 'rs', 'dp', 'bw', 'xy', 'sm', 'ss', 'sv'];\r\n\t\t\t\tconst gen = Dex.forFormat(format).gen;\r\n\t\t\t\tdescHtml.push(`This format has no resources linked on its <a href=\"https://www.smogon.com/dex/${genID[gen - 1] || 'sv'}/formats/\">Smogon Dex page</a>. ` +\r\n\t\t\t\t\t`Please contact a <a href=\"https://www.smogon.com/forums/forums/757/\">C&amp;C Leader</a> to resolve this. ` +\r\n\t\t\t\t\t`Alternatively, if this format can't have a page on the Smogon Dex, message <username>dhelmise</username>.<br />`);\r\n\t\t\t}\r\n\t\t\treturn this.sendReplyBox(`<h2>${format.name}</h2><hr />${formatDesc ? formatDesc + '<hr />' : ''}${descHtml.join(\"<br />\")}${rulesetHtml ? `<br />${rulesetHtml}` : ''}`);\r\n\t\t}\r\n\r\n\t\tlet tableStyle = `border:1px solid gray; border-collapse:collapse`;\r\n\r\n\t\tif (this.broadcasting) {\r\n\t\t\ttableStyle += `; display:inline-block; max-height:240px;\" class=\"scrollable`;\r\n\t\t}\r\n\r\n\t\t// Build tables\r\n\t\tconst buf = [`<table style=\"${tableStyle}\" cellspacing=\"0\" cellpadding=\"5\">`];\r\n\t\tfor (const sectionId in sections) {\r\n\t\t\tbuf.push(Utils.html`<th style=\"border:1px solid gray\" colspan=\"2\">${sections[sectionId].name}</th>`);\r\n\t\t\tfor (const section of sections[sectionId].formats) {\r\n\t\t\t\tconst subformat = Dex.formats.get(section);\r\n\t\t\t\tconst nameHTML = Utils.escapeHTML(subformat.name);\r\n\t\t\t\tconst desc = subformat.desc ? [subformat.desc] : [];\r\n\t\t\t\tconst data = await getFormatResources(subformat.id);\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tfor (const { resource_name, url } of data.resources) {\r\n\t\t\t\t\t\tdesc.push(`&bullet; <a href=\"${url}\">${resource_name}</a>`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconst descHTML = desc.length ? desc.join(\"<br />\") : \"&mdash;\";\r\n\t\t\t\tbuf.push(`<tr><td style=\"border:1px solid gray\">${nameHTML}</td><td style=\"border: 1px solid gray; margin-left:10px\">${descHTML}</td></tr>`);\r\n\t\t\t}\r\n\t\t}\r\n\t\tbuf.push(`</table>`);\r\n\t\treturn this.sendReply(`|raw|${buf.join(\"\")}`);\r\n\t},\r\n\tformathelphelp: [\r\n\t\t`/formathelp [format] - Provides information on the given [format].`,\r\n\t\t`If no format is given, provides information on how tiers work.`,\r\n\t],\r\n\r\n\troomhelp(target, room, user) {\r\n\t\troom = this.requireRoom();\r\n\t\tthis.checkBroadcast(false, '!htmlbox');\r\n\t\tif (this.broadcastMessage) this.checkCan('declare', null, room);\r\n\r\n\t\tif (!this.runBroadcast(false, '!htmlbox')) return;\r\n\r\n\t\tconst strings = [\r\n\t\t\t[\r\n\t\t\t\t`<strong>Room drivers (%)</strong> can use:`,\r\n\t\t\t\t`- /warn OR /k <em>username</em>: warn a user and show the Pok&eacute;mon Showdown rules`,\r\n\t\t\t\t`- /mute OR /m <em>username</em>: 7 minute mute`,\r\n\t\t\t\t`- /hourmute OR /hm <em>username</em>: 60 minute mute`,\r\n\t\t\t\t`- /unmute <em>username</em>: unmute`,\r\n\t\t\t\t`- /hidetext <em>username</em>: hide a user's messages from the room`,\r\n\t\t\t\t`- /announce OR /wall <em>message</em>: make an announcement`,\r\n\t\t\t\t`- /modlog <em>username</em>: search the moderator log of the room`,\r\n\t\t\t\t`- /modnote <em>note</em>: add a moderator note that can be read through modlog`,\r\n\t\t\t\t`- !show [image or youtube link]: display given media in chat.`,\r\n\t\t\t],\r\n\t\t\t[\r\n\t\t\t\t`<strong>Room moderators (@)</strong> can also use:`,\r\n\t\t\t\t`- /roomban OR /rb <em>username</em>: ban user from the room`,\r\n\t\t\t\t`- /roomunban <em>username</em>: unban user from the room`,\r\n\t\t\t\t`- /roomvoice <em>username</em>: appoint a room voice`,\r\n\t\t\t\t`- /roomdevoice <em>username</em>: remove a room voice`,\r\n\t\t\t\t`- /staffintro <em>intro</em>: set the staff introduction that will be displayed for all staff joining the room`,\r\n\t\t\t\t`- /roomsettings: change a variety of room settings, namely modchat`,\r\n\t\t\t],\r\n\t\t\t[\r\n\t\t\t\t`<strong>Room owners (#)</strong> can also use:`,\r\n\t\t\t\t`- /roomintro <em>intro</em>: set the room introduction that will be displayed for all users joining the room`,\r\n\t\t\t\t`- /rules <em>rules link</em>: set the room rules link seen when using /rules`,\r\n\t\t\t\t`- /roommod, /roomdriver <em>username</em>: appoint a room moderator/driver`,\r\n\t\t\t\t`- /roomdemod, /roomdedriver <em>username</em>: remove a room moderator/driver`,\r\n\t\t\t\t`- /roomdeauth <em>username</em>: remove all room auth from a user`,\r\n\t\t\t\t`- /declare <em>message</em>: make a large blue declaration to the room`,\r\n\t\t\t\t`- !htmlbox <em>HTML code</em>: broadcast a box of HTML code to the room`,\r\n\t\t\t\t`- /roomsettings: change a variety of room settings, including modchat, capsfilter, etc`,\r\n\t\t\t],\r\n\t\t\t[\r\n\t\t\t\t`More detailed help can be found in the <a href=\"https://www.smogon.com/forums/posts/6774654/\">roomauth guide</a>`,\r\n\t\t\t],\r\n\t\t\t[\r\n\t\t\t\t`Tournament Help:`,\r\n\t\t\t\t`- /tour create <em>format</em>, elimination: create a new single elimination tournament in the current room.`,\r\n\t\t\t\t`- /tour create <em>format</em>, roundrobin: create a new round robin tournament in the current room.`,\r\n\t\t\t\t`- /tour end: forcibly end the tournament in the current room`,\r\n\t\t\t\t`- /tour start: start the tournament in the current room`,\r\n\t\t\t\t`- /tour banlist [pokemon], [talent], [...]: ban moves, abilities, Pok\u00E9mon or items from being used in a tournament (it must be created first)`,\r\n\t\t\t],\r\n\t\t\t[\r\n\t\t\t\t`More detailed help can be found in the <a href=\"https://www.smogon.com/forums/posts/6777489/\">tournaments guide</a>`,\r\n\t\t\t],\r\n\t\t];\r\n\r\n\t\tthis.sendReplyBox(\r\n\t\t\tstrings.map(par => par.map(string => this.tr(string)).join('<br />')).join('<br /><br />')\r\n\t\t);\r\n\t},\r\n\r\n\trestarthelp(target, room, user) {\r\n\t\tif (!Rooms.global.lockdown) this.checkCan('lockdown');\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tthis.sendReplyBox(\r\n\t\t\t`The server is restarting. Things to know:<br />` +\r\n\t\t\t`- We wait a few minutes before restarting so people can finish up their battles<br />` +\r\n\t\t\t`- The restart itself will take around 0.6 seconds<br />` +\r\n\t\t\t`- Your ladder ranking and teams will not change<br />` +\r\n\t\t\t`- We are restarting to update Pok&eacute;mon Showdown to a newer version`\r\n\t\t);\r\n\t},\r\n\r\n\trule: 'rules',\r\n\troomrules: \"rules\",\r\n\trules(target, room, user, connection, cmd) {\r\n\t\tif (!target) {\r\n\t\t\tif (!this.runBroadcast()) return;\r\n\t\t\tthis.sendReplyBox(\r\n\t\t\t\t`${room ? this.tr`Please follow the rules:` + '<br />' : ``}` +\r\n\t\t\t\t`${room?.settings.rulesLink ? Utils.html`- <a href=\"${room.settings.rulesLink}\">${this.tr`${room.title} room rules`}</a><br />` : ``}` +\r\n\t\t\t\t`- <a href=\"https://${Config.routes.root}${this.tr`/rules`}\">${this.tr`Global Rules`}</a>`\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!room) {\r\n\t\t\tthrow new Chat.ErrorMessage(`This is not a room you can set the rules of.`);\r\n\t\t}\r\n\t\tconst possibleRoom = Rooms.search(toID(target));\r\n\t\tconst { totalMatches: formatMatches } = findFormats(toID(target));\r\n\t\tif (formatMatches && possibleRoom && cmd !== 'roomrules') {\r\n\t\t\tthrow new Chat.ErrorMessage([\r\n\t\t\t\t`'${target}' is both a room and a tier.`,\r\n\t\t\t\t`If you were looking for rules of that room, use /roomrules [room].`,\r\n\t\t\t\t`Otherwise, use /tier [tiername].`,\r\n\t\t\t]);\r\n\t\t}\r\n\r\n\t\tif (possibleRoom) {\r\n\t\t\tconst rulesLink = possibleRoom.settings.rulesLink;\r\n\t\t\treturn this.sendReplyBox(\r\n\t\t\t\t`${possibleRoom.title}'s rules:<br />` +\r\n\t\t\t\t`${rulesLink ? Utils.html`- <a href=\"${rulesLink}\">${this.tr`${possibleRoom.title} room rules`}</a><br />` : `None set.`}`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (formatMatches > 0 && cmd !== 'roomrules') {\r\n\t\t\treturn this.parse(`/tier ${target}`);\r\n\t\t}\r\n\t\tthis.checkCan('editroom', null, room);\r\n\t\tif (target.length > 150) {\r\n\t\t\tthrow new Chat.ErrorMessage(`Error: Room rules link is too long (must be under 150 characters). You can use a URL shortener to shorten the link.`);\r\n\t\t}\r\n\r\n\t\ttarget = target.trim();\r\n\r\n\t\tif (target === 'delete' || target === 'remove') {\r\n\t\t\tif (!room.settings.rulesLink) throw new Chat.ErrorMessage(`This room does not have rules set to remove.`);\r\n\t\t\tdelete room.settings.rulesLink;\r\n\t\t\tthis.privateModAction(`${user.name} has removed the room rules link.`);\r\n\t\t\tthis.modlog('RULES', null, `removed room rules link`);\r\n\t\t} else {\r\n\t\t\troom.settings.rulesLink = target;\r\n\t\t\tthis.privateModAction(`${user.name} changed the room rules link to: ${target}`);\r\n\t\t\tthis.modlog('RULES', null, `changed link to: ${target}`);\r\n\t\t}\r\n\r\n\t\troom.saveSettings();\r\n\t},\r\n\truleshelp: [\r\n\t\t`/rules - Show links to room rules and global rules.`,\r\n\t\t`!rules - Show everyone links to room rules and global rules. Requires: + % @ # ~`,\r\n\t\t`/rules [url] - Change the room rules URL. Requires: # ~`,\r\n\t\t`/rules remove - Removes a room rules URL. Requires: # ~`,\r\n\t],\r\n\r\n\tfaq(target, room, user) {\r\n\t\ttarget = toID(target);\r\n\t\tconst showAll = target === 'all';\r\n\t\tif (showAll && this.shouldBroadcast()) {\r\n\t\t\tthrow new Chat.ErrorMessage(this.tr`You cannot broadcast all FAQs at once.`);\r\n\t\t}\r\n\t\tconst buffer = [];\r\n\t\tif (showAll || target === 'staff') {\r\n\t\t\tbuffer.push(`<a href=\"https://pokemonshowdown.com/${this.tr`pages/staff`}\">${this.tr`Staff FAQ`}</a>`);\r\n\t\t}\r\n\t\tif (showAll || target === 'autoconfirmed' || target === 'ac') {\r\n\t\t\tbuffer.push(this.tr`A user is autoconfirmed when they have won at least one rated battle and have been registered for one week or longer. In order to prevent spamming and trolling, most chatrooms only allow autoconfirmed users to chat. If you are not autoconfirmed, you can politely PM a staff member (staff have %, @, or # in front of their username) in the room you would like to chat and ask them to disable modchat. However, staff are not obligated to disable modchat.`);\r\n\t\t\tif (!this.shouldBroadcast()) void this.parse(`/regtime`);\r\n\t\t}\r\n\t\tif (showAll || target === 'ladder' || target === 'ladderhelp' || target === 'decay') {\r\n\t\t\tbuffer.push(`<a href=\"https://${Config.routes.root}/${this.tr`pages/ladderhelp`}\">${this.tr`How the ladder works`}</a>`);\r\n\t\t}\r\n\t\tif (showAll || target === 'tiering' || target === 'tiers' || target === 'tier') {\r\n\t\t\tbuffer.push(`<a href=\"https://www.smogon.com/ingame/battle/tiering-faq\">${this.tr`Tiering FAQ`}</a>`);\r\n\t\t}\r\n\t\tif (showAll || ['badge', 'badges', 'badgeholders'].includes(target)) {\r\n\t\t\tbuffer.push(`<a href=\"https://www.smogon.com/forums/threads/60351/\">${this.tr`Badge FAQ`}</a>`);\r\n\t\t}\r\n\t\tif (showAll || target === 'rng') {\r\n\t\t\tbuffer.push(`<a href=\"https://${Config.routes.root}/${this.tr`pages/rng`}\">${this.tr`Common misconceptions about our RNG`}</a>`);\r\n\t\t}\r\n\t\tif (showAll || ['tournaments', 'tournament', 'tours', 'tour'].includes(target)) {\r\n\t\t\tbuffer.push(this.tr`To join a room tournament, click the <strong>Join!</strong> button or type the command <code>/tour join</code> in the room's chat. You can check if your team is legal for the tournament by clicking the <strong>Validate</strong> button once you've joined and selected a team. To battle your opponent in the tournament, click the <strong>Ready!</strong> button when it appears. There are two different types of room tournaments: elimination (if a user loses more than a certain number of times, they are eliminated) and round robin (all users play against each other, and the user with the most wins is the winner).`);\r\n\t\t}\r\n\t\tif (showAll || ['vpn', 'proxy'].includes(target)) {\r\n\t\t\tbuffer.push(`<a href=\"https://pokemonshowdown.com/${this.tr`pages/proxyhelp`}\">${this.tr`Proxy lock help`}</a>`);\r\n\t\t}\r\n\t\tif (showAll || ['ca', 'customavatar', 'customavatars'].includes(target)) {\r\n\t\t\tbuffer.push(this.tr`Custom avatars are given to Global Staff members, contributors (coders and spriters) to Pokemon Showdown, and Smogon badgeholders at the discretion of the PS! Administrators. They are also sometimes given out as rewards for major events such as PSPL (Pokemon Showdown Premier League). If you're curious, you can view the entire list of <a href=\"https://www.smogon.com/smeargle/customs/\">custom avatars</a>.`);\r\n\t\t}\r\n\t\tif (showAll || ['privacy', 'private'].includes(target)) {\r\n\t\t\tbuffer.push(`<a href=\"https://pokemonshowdown.com/${this.tr`pages/privacy`}\">${this.tr`Pok\u00E9mon Showdown privacy policy`}</a>`);\r\n\t\t}\r\n\t\tif (showAll || ['lostpassword', 'password', 'lostpass'].includes(target)) {\r\n\t\t\tbuffer.push(`Until an email server for Pokemon Showdown is set up, <b>it is no longer possible to reset the password for your account</b>`);\r\n\t\t}\r\n\t\tif (!buffer.length && target) {\r\n\t\t\tthis.errorReply(`'${target}' is an invalid FAQ.`);\r\n\t\t\treturn this.parse(`/help faq`);\r\n\t\t}\r\n\t\tif (!target || showAll) {\r\n\t\t\tbuffer.unshift(`<a href=\"https://pokemonshowdown.com/${this.tr`pages/faq`}\">${this.tr`Frequently Asked Questions`}</a>`);\r\n\t\t}\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tthis.sendReplyBox(buffer.join(`<br />`));\r\n\t},\r\n\tfaqhelp: [\r\n\t\t`/faq [topic] - Provides a link that answers the FAQ topic. List of FAQ topics: autoconfirmed, badges, customavatar, decay, ladder, lostpassword, privacy, proxy, rng, staff, tiers, tournaments.`,\r\n\t\t`!faq [topic] - Shows to other users a link that answers the FAQ topic. List of FAQ topics: autoconfirmed, badges, customavatar, decay, ladder, lostpassword, privacy, proxy, rng, staff, tiers, tournaments. Requires: + % @ # ~`,\r\n\t],\r\n\r\n\tanalysis: 'smogdex',\r\n\tstrategy: 'smogdex',\r\n\tsmogdex(target, room, user) {\r\n\t\tif (!target) return this.parse('/help smogdex');\r\n\t\tif (!this.runBroadcast()) return;\r\n\r\n\t\tconst targets = target.split(',');\r\n\t\tlet pokemon = Dex.species.get(targets[0]);\r\n\t\tconst item = Dex.items.get(targets[0]);\r\n\t\tconst move = Dex.moves.get(targets[0]);\r\n\t\tconst ability = Dex.abilities.get(targets[0]);\r\n\t\tconst format = Dex.formats.get(targets[0]);\r\n\t\tlet atLeastOne = false;\r\n\t\tlet generation = (targets[1] || 'sv').trim().toLowerCase();\r\n\t\tlet genNumber = 9;\r\n\t\tconst extraFormat = Dex.formats.get(targets[2]);\r\n\r\n\t\tif (['9', 'gen9', 'nine', 'sv'].includes(generation)) {\r\n\t\t\tgeneration = 'sv';\r\n\t\t} else if (['8', 'gen8', 'eight', 'ss', 'swsh'].includes(generation)) {\r\n\t\t\tgeneration = 'ss';\r\n\t\t\tgenNumber = 8;\r\n\t\t} else if (['7', 'gen7', 'seven', 'sm', 'sumo', 'usm', 'usum'].includes(generation)) {\r\n\t\t\tgeneration = 'sm';\r\n\t\t\tgenNumber = 7;\r\n\t\t} else if (['6', 'gen6', 'oras', 'six', 'xy'].includes(generation)) {\r\n\t\t\tgeneration = 'xy';\r\n\t\t\tgenNumber = 6;\r\n\t\t} else if (['5', 'b2w2', 'bw', 'bw2', 'five', 'gen5'].includes(generation)) {\r\n\t\t\tgeneration = 'bw';\r\n\t\t\tgenNumber = 5;\r\n\t\t} else if (['4', 'dp', 'dpp', 'four', 'gen4', 'hgss'].includes(generation)) {\r\n\t\t\tgeneration = 'dp';\r\n\t\t\tgenNumber = 4;\r\n\t\t} else if (['3', 'adv', 'frlg', 'gen3', 'rs', 'rse', 'three'].includes(generation)) {\r\n\t\t\tgeneration = 'rs';\r\n\t\t\tgenNumber = 3;\r\n\t\t} else if (['2', 'gen2', 'gs', 'gsc', 'two'].includes(generation)) {\r\n\t\t\tgeneration = 'gs';\r\n\t\t\tgenNumber = 2;\r\n\t\t} else if (['1', 'gen1', 'one', 'rb', 'rby', 'rgy'].includes(generation)) {\r\n\t\t\tgeneration = 'rb';\r\n\t\t\tgenNumber = 1;\r\n\t\t} else {\r\n\t\t\tgeneration = 'sv';\r\n\t\t}\r\n\r\n\t\t// Pokemon\r\n\t\tif (pokemon.exists) {\r\n\t\t\tatLeastOne = true;\r\n\t\t\tif (genNumber < pokemon.gen) {\r\n\t\t\t\treturn this.sendReplyBox(`${pokemon.name} did not exist in ${generation.toUpperCase()}!`);\r\n\t\t\t}\r\n\r\n\t\t\tif ((pokemon.battleOnly && pokemon.baseSpecies !== 'Greninja') ||\r\n\t\t\t\t['Keldeo', 'Genesect'].includes(pokemon.baseSpecies)) {\r\n\t\t\t\tpokemon = Dex.species.get(pokemon.changesFrom || pokemon.baseSpecies);\r\n\t\t\t}\r\n\r\n\t\t\tlet formatName = extraFormat.name;\r\n\t\t\tlet formatId: string = extraFormat.id;\r\n\t\t\tif (formatName.startsWith('[Gen ') && formatName.slice(6, 8) === '] ') {\r\n\t\t\t\tformatName = formatName.slice(8);\r\n\t\t\t\tformatId = toID(formatName);\r\n\t\t\t}\r\n\t\t\tif (formatId === 'anythinggoes') {\r\n\t\t\t\tformatId = 'ag';\r\n\t\t\t} else if (formatId === 'battlespotdoubles') {\r\n\t\t\t\tformatId = 'battle_spot_doubles';\r\n\t\t\t} else if (formatId === 'battlespottriples') {\r\n\t\t\t\tformatId = 'battle_spot_triples';\r\n\t\t\t\tif (genNumber > 6) {\r\n\t\t\t\t\treturn this.sendReplyBox(`Triples formats are not an available format in Pok&eacute;mon generation ${generation.toUpperCase()}.`);\r\n\t\t\t\t}\r\n\t\t\t} else if (formatId === 'doublesou') {\r\n\t\t\t\tformatId = 'doubles';\r\n\t\t\t} else if (formatId === 'balancedhackmons') {\r\n\t\t\t\tformatId = 'bh';\r\n\t\t\t} else if (formatId === 'battlespotsingles') {\r\n\t\t\t\tformatId = 'battle_spot_singles';\r\n\t\t\t} else if (formatId === 'ubers') {\r\n\t\t\t\tformatId = 'uber';\r\n\t\t\t} else if (formatId.includes('vgc')) {\r\n\t\t\t\tformatId = 'vgc' + formatId.slice(-2);\r\n\t\t\t\tformatName = 'VGC 20' + formatId.slice(-2);\r\n\t\t\t} else if (extraFormat.effectType !== 'Format') {\r\n\t\t\t\tformatName = formatId = '';\r\n\t\t\t}\r\n\t\t\tconst supportedLanguages: { [k: string]: string } = {\r\n\t\t\t\tspanish: 'es',\r\n\t\t\t\tfrench: 'fr',\r\n\t\t\t\titalian: 'it',\r\n\t\t\t\tgerman: 'de',\r\n\t\t\t\tportuguese: 'pt',\r\n\t\t\t};\r\n\t\t\tlet id = pokemon.name.toLowerCase();\r\n\t\t\tif (id === 'meowstic') id = 'meowstic-m';\r\n\t\t\tif (id === 'zygarde-10%') id = 'zygarde-10';\r\n\t\t\tif (['ou', 'uu'].includes(formatId) && generation === 'sm' &&\r\n\t\t\t\troom?.settings.language && room.settings.language in supportedLanguages) {\r\n\t\t\t\t// Limited support for translated analysis\r\n\t\t\t\t// Translated analysis do not support automatic redirects from a id to the proper page\r\n\t\t\t\tthis.sendReplyBox(\r\n\t\t\t\t\tUtils.html`<a href=\"https://www.smogon.com/dex/${generation}/pokemon/${id}/${formatId}/?lang=${supportedLanguages[room.settings.language]}\">${generation.toUpperCase()} ${formatName} ${pokemon.name} analysis</a>, brought to you by <a href=\"https://www.smogon.com\">Smogon University</a>`\r\n\t\t\t\t);\r\n\t\t\t} else if (['ou', 'uu'].includes(formatId) && generation === 'sm') {\r\n\t\t\t\tthis.sendReplyBox(\r\n\t\t\t\t\tUtils.html`<a href=\"https://www.smogon.com/dex/${generation}/pokemon/${id}/${formatId}\">${generation.toUpperCase()} ${formatName} ${pokemon.name} analysis</a>, brought to you by <a href=\"https://www.smogon.com\">Smogon University</a><br />` +\r\n\t\t\t\t\t`Other languages: <a href=\"https://www.smogon.com/dex/${generation}/pokemon/${id}/${formatId}/?lang=es\">Espa\u00F1ol</a>, <a href=\"https://www.smogon.com/dex/${generation}/pokemon/${id}/${formatId}/?lang=fr\">Fran\u00E7ais</a>, <a href=\"https://www.smogon.com/dex/${generation}/pokemon/${id}/${formatId}/?lang=it\">Italiano</a>, ` +\r\n\t\t\t\t\t`<a href=\"https://www.smogon.com/dex/${generation}/pokemon/${id}/${formatId}/?lang=de\">Deutsch</a>, <a href=\"https://www.smogon.com/dex/${generation}/pokemon/${id}/${formatId}/?lang=pt\">Portugu\u00EAs</a>`\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tthis.sendReplyBox(Utils.html`<a href=\"https://www.smogon.com/dex/${generation}/pokemon/${id}${(formatId ? '/' + formatId : '')}\">${generation.toUpperCase()} ${formatName} ${pokemon.name} analysis</a>, brought to you by <a href=\"https://www.smogon.com\">Smogon University</a>`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Item\r\n\t\tif (item.exists && genNumber > 1 && item.gen <= genNumber) {\r\n\t\t\tatLeastOne = true;\r\n\t\t\tthis.sendReplyBox(`<a href=\"https://www.smogon.com/dex/${generation}/items/${item.id}\">${generation.toUpperCase()} ${item.name} item analysis</a>, brought to you by <a href=\"https://www.smogon.com\">Smogon University</a>`);\r\n\t\t}\r\n\r\n\t\t// Ability\r\n\t\tif (ability.exists && genNumber > 2 && ability.gen <= genNumber) {\r\n\t\t\tatLeastOne = true;\r\n\t\t\tthis.sendReplyBox(`<a href=\"https://www.smogon.com/dex/${generation}/abilities/${ability.id}\">${generation.toUpperCase()} ${ability.name} ability analysis</a>, brought to you by <a href=\"https://www.smogon.com\">Smogon University</a>`);\r\n\t\t}\r\n\r\n\t\t// Move\r\n\t\tif (move.exists && move.gen <= genNumber) {\r\n\t\t\tatLeastOne = true;\r\n\t\t\tthis.sendReplyBox(`<a href=\"https://www.smogon.com/dex/${generation}/moves/${toID(move.name)}\">${generation.toUpperCase()} ${move.name} move analysis</a>, brought to you by <a href=\"https://www.smogon.com\">Smogon University</a>`);\r\n\t\t}\r\n\r\n\t\t// Format\r\n\t\tif (format.id) {\r\n\t\t\tlet formatName = format.name;\r\n\t\t\tlet formatId: string = format.id;\r\n\t\t\tif (formatName.startsWith('[Gen ') && formatName.slice(6, 8) === '] ') {\r\n\t\t\t\tformatName = formatName.slice(8);\r\n\t\t\t\tformatId = toID(formatName);\r\n\t\t\t}\r\n\t\t\tif (formatId === 'anythinggoes') {\r\n\t\t\t\tformatId = 'ag';\r\n\t\t\t} else if (formatId === 'battlespotdoubles') {\r\n\t\t\t\tformatId = 'battle_spot_doubles';\r\n\t\t\t} else if (formatId === 'battlespottriples') {\r\n\t\t\t\tformatId = 'battle_spot_triples';\r\n\t\t\t\tif (genNumber > 6) {\r\n\t\t\t\t\treturn this.sendReplyBox(`Triples formats are not an available format in Pok&eacute;mon generation ${generation.toUpperCase()}.`);\r\n\t\t\t\t}\r\n\t\t\t} else if (formatId === 'doublesou') {\r\n\t\t\t\tformatId = 'doubles';\r\n\t\t\t} else if (formatId === 'balancedhackmons') {\r\n\t\t\t\tformatId = 'bh';\r\n\t\t\t} else if (formatId === 'battlespotsingles') {\r\n\t\t\t\tformatId = 'battle_spot_singles';\r\n\t\t\t} else if (formatId === 'ubers') {\r\n\t\t\t\tformatId = 'uber';\r\n\t\t\t} else if (formatId.includes('vgc')) {\r\n\t\t\t\tformatId = `vgc${formatId.slice(-2)}`;\r\n\t\t\t\tformatName = `VGC 20${formatId.slice(-2)}`;\r\n\t\t\t} else if (format.effectType !== 'Format') {\r\n\t\t\t\tformatName = formatId = '';\r\n\t\t\t}\r\n\t\t\tif (formatName) {\r\n\t\t\t\tatLeastOne = true;\r\n\t\t\t\tthis.sendReplyBox(Utils.html`<a href=\"https://www.smogon.com/dex/${generation}/formats/${formatId}\">${generation.toUpperCase()} ${formatName} format analysis</a>, brought to you by <a href=\"https://www.smogon.com\">Smogon University</a>`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!atLeastOne) {\r\n\t\t\treturn this.sendReplyBox(`Pok&eacute;mon, item, move, ability, or format not found for generation ${generation.toUpperCase()}.`);\r\n\t\t}\r\n\t},\r\n\tsmogdexhelp: [\r\n\t\t`/analysis [pokemon], [generation], [format] - Links to the Smogon University analysis for this Pok\\u00e9mon in the given generation.`,\r\n\t\t`!analysis [pokemon], [generation], [format] - Shows everyone this link. Requires: + % @ # ~`,\r\n\t],\r\n\r\n\tbulbapedia(target, broadcast, user) {\r\n\t\tif (!target) return this.parse('/help bulbapedia');\r\n\t\tif (!this.runBroadcast()) return;\r\n\r\n\t\tconst baseLink = 'https://bulbapedia.bulbagarden.net/wiki/';\r\n\r\n\t\tconst pokemon = Dex.species.get(target);\r\n\t\tconst item = Dex.items.get(target);\r\n\t\tconst move = Dex.moves.get(target);\r\n\t\tconst ability = Dex.abilities.get(target);\r\n\t\tconst nature = Dex.natures.get(target);\r\n\t\tlet atLeastOne = false;\r\n\r\n\t\t// Pokemon\r\n\t\tif (pokemon.exists) {\r\n\t\t\tatLeastOne = true;\r\n\t\t\tif (pokemon.isNonstandard && pokemon.isNonstandard !== 'Past') {\r\n\t\t\t\tthrow new Chat.ErrorMessage(`${pokemon.name} is not a real Pok\\u00e9mon.`);\r\n\t\t\t}\r\n\t\t\tlet baseSpecies = pokemon.baseSpecies;\r\n\t\t\tif (pokemon.id.startsWith('flabebe')) baseSpecies = 'Flab\u00E9b\u00E9';\r\n\t\t\tconst link = `${baseLink}${encodeURIComponent(baseSpecies)}_(Pok\u00E9mon)`;\r\n\r\n\t\t\tthis.sendReplyBox(Utils.html`<a href=\"${link}\">${pokemon.name} in-game information</a>, provided by Bulbapedia`);\r\n\t\t}\r\n\r\n\t\t// Item\r\n\t\tif (item.exists) {\r\n\t\t\tatLeastOne = true;\r\n\t\t\tif (item.isNonstandard && item.isNonstandard !== 'Past') {\r\n\t\t\t\tthrow new Chat.ErrorMessage(`${item.name} is not a real item.`);\r\n\t\t\t}\r\n\t\t\tlet link = `${baseLink}${encodeURIComponent(item.name)}`;\r\n\t\t\tif (Dex.moves.get(item.name).exists) link += '_(item)';\r\n\t\t\tthis.sendReplyBox(Utils.html`<a href=\"${link}\">${item.name} item description</a>, provided by Bulbapedia`);\r\n\t\t}\r\n\r\n\t\t// Ability\r\n\t\tif (ability.exists) {\r\n\t\t\tatLeastOne = true;\r\n\t\t\tif (ability.isNonstandard && ability.isNonstandard !== 'Past') {\r\n\t\t\t\tthrow new Chat.ErrorMessage(`${ability.name} is not a real ability.`);\r\n\t\t\t}\r\n\t\t\tconst link = `${baseLink}${encodeURIComponent(ability.name)}_(Ability)`;\r\n\t\t\tthis.sendReplyBox(`<a href=\"${link}\">${ability.name} ability description</a>, provided by Bulbapedia`);\r\n\t\t}\r\n\r\n\t\t// Move\r\n\t\tif (move.exists) {\r\n\t\t\tatLeastOne = true;\r\n\t\t\tif (move.isNonstandard && move.isNonstandard !== 'Past') {\r\n\t\t\t\tthrow new Chat.ErrorMessage(`${move.name} is not a real move.`);\r\n\t\t\t}\r\n\t\t\tconst link = `${baseLink}${encodeURIComponent(move.name)}_(move)`;\r\n\t\t\tthis.sendReplyBox(`<a href=\"${link}\">${move.name} move description</a>, provided by Bulbapedia`);\r\n\t\t}\r\n\r\n\t\t// Nature\r\n\t\tif (nature.exists) {\r\n\t\t\tatLeastOne = true;\r\n\t\t\tconst link = `${baseLink}Nature`;\r\n\t\t\tthis.sendReplyBox(`<a href=\"${link}\">Nature descriptions</a>, provided by Bulbapedia`);\r\n\t\t}\r\n\r\n\t\tif (!atLeastOne) {\r\n\t\t\treturn this.sendReplyBox(`Pok&eacute;mon, item, move, ability, or nature not found.`);\r\n\t\t}\r\n\t},\r\n\tbulbapediahelp: [\r\n\t\t`/bulbapedia [pokemon/item/move/ability/nature] - Links to Bulbapedia wiki page for this pokemon/item/move/ability/nature.`,\r\n\t\t`!bulbapedia [pokemon/item/move/ability/nature] - Shows everyone this link. Requires: + % @ # ~`,\r\n\t],\r\n\r\n\tregister() {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tthis.sendReplyBox(`You will be prompted to register upon winning a rated battle. Alternatively, there is a register button in the <button name=\"openOptions\"><i class=\"fa fa-cog\"></i> Options</button> menu in the upper right.`);\r\n\t},\r\n\tregisterhelp: [`/register - Provides information on how to register.`],\r\n\r\n\t/*********************************************************\r\n\t * Miscellaneous commands\r\n\t *********************************************************/\r\n\r\n\troll: 'dice',\r\n\tdice(target, room, user) {\r\n\t\tif (!target || /[^\\d\\sdHL+-]/i.test(target)) return this.parse('/help dice');\r\n\t\tif (!this.runBroadcast(true)) return;\r\n\r\n\t\t// ~30 is widely regarded as the sample size required for sum to be a Gaussian distribution.\r\n\t\t// This also sets a computation time constraint for safety.\r\n\t\tconst maxDice = 40;\r\n\r\n\t\tlet diceQuantity = 1;\r\n\t\tconst diceDataStart = target.indexOf('d');\r\n\t\tif (diceDataStart >= 0) {\r\n\t\t\tif (diceDataStart) diceQuantity = Number(target.slice(0, diceDataStart));\r\n\t\t\ttarget = target.slice(diceDataStart + 1);\r\n\t\t\tif (!Number.isInteger(diceQuantity) || diceQuantity <= 0 || diceQuantity > maxDice) {\r\n\t\t\t\treturn this.sendReply(`The amount of dice rolled should be a natural number up to ${maxDice}.`);\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet offset = 0;\r\n\t\tlet removeOutlier = 0;\r\n\r\n\t\tconst modifierData = /[+-]/.exec(target);\r\n\t\tif (modifierData) {\r\n\t\t\tswitch (target.slice(modifierData.index).trim().toLowerCase()) {\r\n\t\t\tcase '-l':\r\n\t\t\t\tremoveOutlier = -1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '-h':\r\n\t\t\t\tremoveOutlier = +1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\toffset = Number(target.slice(modifierData.index));\r\n\t\t\t\tif (isNaN(offset)) return this.parse('/help dice');\r\n\t\t\t\tif (!Number.isSafeInteger(offset)) {\r\n\t\t\t\t\tthrow new Chat.ErrorMessage(`The specified offset must be an integer up to ${Number.MAX_SAFE_INTEGER}.`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (removeOutlier && diceQuantity <= 1) {\r\n\t\t\t\tthrow new Chat.ErrorMessage(`More than one dice should be rolled before removing outliers.`);\r\n\t\t\t}\r\n\t\t\ttarget = target.slice(0, modifierData.index);\r\n\t\t}\r\n\r\n\t\tlet diceFaces = 6;\r\n\t\tif (target.length) {\r\n\t\t\tdiceFaces = Number(target);\r\n\t\t\tif (!Number.isSafeInteger(diceFaces) || diceFaces <= 0) {\r\n\t\t\t\tthrow new Chat.ErrorMessage(`Rolled dice must have a natural amount of faces up to ${Number.MAX_SAFE_INTEGER}.`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (diceQuantity > 1) {\r\n\t\t\t// Make sure that we can deal with high rolls\r\n\t\t\tif (!Number.isSafeInteger(offset < 0 ? diceQuantity * diceFaces : diceQuantity * diceFaces + offset)) {\r\n\t\t\t\tthrow new Chat.ErrorMessage(`The maximum sum of rolled dice must be lower or equal than ${Number.MAX_SAFE_INTEGER}.`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet maxRoll = 0;\r\n\t\tlet minRoll = Number.MAX_SAFE_INTEGER;\r\n\r\n\t\tconst trackRolls = diceQuantity * (`${diceFaces}`.length + 1) <= 60;\r\n\t\tconst rolls = [];\r\n\t\tlet rollSum = 0;\r\n\r\n\t\tfor (let i = 0; i < diceQuantity; ++i) {\r\n\t\t\tconst curRoll = Math.floor(Math.random() * diceFaces) + 1;\r\n\t\t\trollSum += curRoll;\r\n\t\t\tif (curRoll > maxRoll) maxRoll = curRoll;\r\n\t\t\tif (curRoll < minRoll) minRoll = curRoll;\r\n\t\t\tif (trackRolls) rolls.push(curRoll);\r\n\t\t}\r\n\r\n\t\t// Apply modifiers\r\n\r\n\t\tif (removeOutlier > 0) {\r\n\t\t\trollSum -= maxRoll;\r\n\t\t} else if (removeOutlier < 0) {\r\n\t\t\trollSum -= minRoll;\r\n\t\t}\r\n\t\tif (offset) rollSum += offset;\r\n\r\n\t\t// Reply with relevant information\r\n\r\n\t\tlet offsetFragment = \"\";\r\n\t\tif (offset) offsetFragment += `${offset > 0 ? ` + ${offset}` : offset}`;\r\n\r\n\t\tif (diceQuantity === 1) return this.sendReplyBox(`Rolling (1 to ${diceFaces})${offsetFragment}: ${rollSum}`);\r\n\r\n\t\tconst outlierFragment = removeOutlier ? ` except ${removeOutlier > 0 ? \"highest\" : \"lowest\"}` : ``;\r\n\t\tconst rollsFragment = trackRolls ? \": \" + rolls.join(\", \") : \"\";\r\n\t\treturn this.sendReplyBox(\r\n\t\t\t`${diceQuantity} rolls (1 to ${diceFaces})${rollsFragment}<br />` +\r\n\t\t\t`Sum${offsetFragment}${outlierFragment}: ${rollSum}`\r\n\t\t);\r\n\t},\r\n\tdicehelp: [\r\n\t\t`/dice [max number] - Randomly picks a number between 1 and the number you choose.`,\r\n\t\t`/dice [number of dice]d[number of sides] - Simulates rolling a number of dice, e.g., /dice 2d4 simulates rolling two 4-sided dice.`,\r\n\t\t`/dice [number of dice]d[number of sides][+/-][offset] - Simulates rolling a number of dice and adding an offset to the sum, e.g., /dice 2d6+10: two standard dice are rolled; the result lies between 12 and 22.`,\r\n\t\t`/dice [number of dice]d[number of sides]-[H/L] - Simulates rolling a number of dice with removal of extreme values, e.g., /dice 3d8-L: rolls three 8-sided dice; the result ignores the lowest value.`,\r\n\t],\r\n\r\n\tpr: 'pickrandom',\r\n\tpick: 'pickrandom',\r\n\tpickrandom(target, room, user) {\r\n\t\tif (!target?.includes(',')) return this.parse('/help pick');\r\n\t\tif (!this.runBroadcast(true)) return false;\r\n\t\tif (this.broadcasting) {\r\n\t\t\t[, target] = Utils.splitFirst(this.message, ' ');\r\n\t\t}\r\n\t\tconst options = target.split(',');\r\n\t\tconst pickedOption = options[Math.floor(Math.random() * options.length)].trim();\r\n\t\treturn this.sendReplyBox(Utils.html`<em>We randomly picked:</em> ${pickedOption}`);\r\n\t},\r\n\tpickrandomhelp: [`/pick [option], [option], ... - Randomly selects an item from a list containing 2 or more elements.`],\r\n\r\n\tshuffle(target, room, user) {\r\n\t\tif (!target?.includes(',')) return this.parse('/help shuffle');\r\n\t\tconst args = target.split(',');\r\n\t\tif (!this.runBroadcast(true)) return false;\r\n\t\tconst results = Utils.shuffle(args.map(arg => arg.trim()));\r\n\t\treturn this.sendReplyBox(Utils.html`<em>Shuffled:</em><br> ${results.join(', ')}`);\r\n\t},\r\n\tshufflehelp: [\r\n\t\t`/shuffle [option], [option], [option], ... - Randomly shuffles a list of 2 or more elements.`,\r\n\t],\r\n\r\n\tshowimage(target, room, user) {\r\n\t\tthrow new Chat.ErrorMessage(`/showimage has been deprecated - use /show instead.`);\r\n\t},\r\n\r\n\tasync requestshow(target, room, user) {\r\n\t\troom = this.requireRoom();\r\n\t\tthis.checkChat();\r\n\t\tif (!room.settings.requestShowEnabled) {\r\n\t\t\tthrow new Chat.ErrorMessage(`Media approvals are disabled in this room.`);\r\n\t\t}\r\n\t\tif (user.can('showmedia', null, room, 'show')) throw new Chat.ErrorMessage(`Use !show instead.`);\r\n\t\tif (room.pendingApprovals?.has(user.id)) throw new Chat.ErrorMessage('You have a request pending already.');\r\n\t\tif (!toID(target)) return this.parse(`/help requestshow`);\r\n\r\n\t\tlet [link, comment] = this.splitOne(target);\r\n\t\tif (!/^https?:\\/\\//.test(link)) link = `https://${link}`;\r\n\t\tlink = encodeURI(link);\r\n\t\tlet dimensions;\r\n\t\tif (!/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.be)(\\/|$)/i.test(link)) {\r\n\t\t\tif (link.includes('data:image/png;base64')) {\r\n\t\t\t\tthrow new Chat.ErrorMessage('Please provide an actual link (you probably copied the URL wrong?).');\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tdimensions = await Chat.fitImage(link);\r\n\t\t\t} catch {\r\n\t\t\t\tthrow new Chat.ErrorMessage('Invalid link.');\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (comment && this.checkChat(comment) !== comment) {\r\n\t\t\tthrow new Chat.ErrorMessage(`You cannot use filtered words in comments.`);\r\n\t\t}\r\n\t\tif (!room.pendingApprovals) room.pendingApprovals = new Map();\r\n\t\troom.pendingApprovals.set(user.id, {\r\n\t\t\tname: user.name,\r\n\t\t\tlink,\r\n\t\t\tcomment,\r\n\t\t\tdimensions,\r\n\t\t});\r\n\t\tthis.sendReply(`You have requested to show the link: ${link}${comment ? ` (with the comment ${comment})` : ''}.`);\r\n\t\tconst message = `|tempnotify|pendingapprovals|Pending media request!` +\r\n\t\t\t`|${user.name} has requested to show media in ${room.title}.|new media request`;\r\n\t\troom.sendRankedUsers(message, '%');\r\n\t\troom.sendMods(\r\n\t\t\tUtils.html`|uhtml|request-${user.id}|<div class=\"infobox\">${user.name} wants to show <a href=\"${link}\">${link}</a><br>` +\r\n\t\t\t(comment ? Utils.html`Comment: ${comment}<br>` : '') +\r\n\t\t\t`<button class=\"button\" name=\"send\" value=\"/approveshow ${user.id}\">Approve</button><br>` +\r\n\t\t\t`<button class=\"button\" name=\"send\" value=\"/denyshow ${user.id}\">Deny</button></div>`\r\n\t\t);\r\n\t},\r\n\trequestshowhelp: [`/requestshow [link], [comment] - Requests permission to show media in the room.`],\r\n\r\n\tasync approveshow(target, room, user) {\r\n\t\troom = this.requireRoom();\r\n\t\tthis.checkCan('mute', null, room);\r\n\t\tif (!room.settings.requestShowEnabled) {\r\n\t\t\tthrow new Chat.ErrorMessage(`Media approvals are disabled in this room.`);\r\n\t\t}\r\n\t\tconst userid = toID(target);\r\n\t\tif (!userid) return this.parse(`/help approveshow`);\r\n\t\tconst request = room.pendingApprovals?.get(userid);\r\n\t\tif (!request) throw new Chat.ErrorMessage(`${userid} has no pending request.`);\r\n\t\tif (userid === user.id) {\r\n\t\t\tthrow new Chat.ErrorMessage(`You can't approve your own /show request.`);\r\n\t\t}\r\n\t\troom.pendingApprovals!.delete(userid);\r\n\t\troom.sendMods(`|uhtmlchange|request-${target}|`);\r\n\t\troom.sendRankedUsers(`|tempnotifyoff|pendingapprovals`, '%');\r\n\r\n\t\tlet buf;\r\n\t\tif (request.dimensions) { // image\r\n\t\t\tconst [width, height, resized] = request.dimensions;\r\n\t\t\tbuf = Utils.html`<img src=\"${request.link}\" width=\"${width}\" height=\"${height}\" />`;\r\n\t\t\tif (resized) buf += Utils.html`<br /><a href=\"${request.link}\" target=\"_blank\">full-size image</a>`;\r\n\t\t} else {\r\n\t\t\tbuf = await YouTube.generateVideoDisplay(request.link, false);\r\n\t\t\tif (!buf) throw new Chat.ErrorMessage('Could not get YouTube video');\r\n\t\t}\r\n\t\tbuf += Utils.html`<br /><div class=\"infobox\"><small>(Requested by ${request.name})</small>`;\r\n\t\tif (request.comment) {\r\n\t\t\tbuf += Utils.html`<br />${request.comment}</small></div>`;\r\n\t\t} else {\r\n\t\t\tbuf += `</small></div>`;\r\n\t\t}\r\n\t\troom.add(`|c| ${request.name}|/raw ${buf}`);\r\n\t\tthis.privateModAction(`${user.name} approved showing media from ${request.name}.`);\r\n\t},\r\n\tapproveshowhelp: [`/approveshow [user] - Approves the media display request of [user]. Requires: % @ # ~`],\r\n\r\n\tdenyshow(target, room, user) {\r\n\t\troom = this.requireRoom();\r\n\t\tthis.checkCan('mute', null, room);\r\n\t\tif (!room.settings.requestShowEnabled) {\r\n\t\t\tthrow new Chat.ErrorMessage(`Media approvals are disabled in this room.`);\r\n\t\t}\r\n\t\ttarget = toID(target);\r\n\t\tif (!target) return this.parse(`/help denyshow`);\r\n\r\n\t\tconst entry = room.pendingApprovals?.get(target);\r\n\t\tif (!entry) throw new Chat.ErrorMessage(`${target} has no pending request.`);\r\n\r\n\t\troom.pendingApprovals!.delete(target);\r\n\t\troom.sendMods(`|uhtmlchange|request-${target}|`);\r\n\t\troom.sendRankedUsers(`|tempnotifyoff|pendingapprovals`, '%');\r\n\t\tthis.privateModAction(`${user.name} denied ${target}'s request to display ${entry.link}.`);\r\n\r\n\t\tconst targetUser = Users.get(target);\r\n\t\tif (!targetUser) return;\r\n\t\troom.sendUser(targetUser, `|raw|<div class=\"broadcast-red\">Your media request was denied.</div>`);\r\n\t\troom.sendUser(targetUser, `|notify|Media request denied`);\r\n\t},\r\n\tdenyshowhelp: [`/denyshow [user] - Denies the media display request of [user]. Requires: % @ # ~`],\r\n\r\n\tapprovallog(target, room, user) {\r\n\t\troom = this.requireRoom();\r\n\t\treturn this.parse(`/sl approved showing media from, ${room.roomid}`);\r\n\t},\r\n\tapprovalloghelp: [`/approvallog - View a log of past media approvals in the current room. Requires: ~`],\r\n\r\n\tviewapprovals(target, room, user) {\r\n\t\troom = this.requireRoom();\r\n\t\treturn this.parse(`/join view-approvals-${room.roomid}`);\r\n\t},\r\n\tviewapprovalshelp: [\r\n\t\t`/viewapprovals - View a list of users who have requested to show media in the current room.`,\r\n\t\t`Requires: % @ # ~`,\r\n\t],\r\n\r\n\tasync show(target, room, user, connection) {\r\n\t\tif (!room?.persist && !this.pmTarget && !room?.roomid.startsWith('help-')) {\r\n\t\t\tthrow new Chat.ErrorMessage(`/show cannot be used in temporary rooms.`);\r\n\t\t}\r\n\t\tif (!toID(target).trim()) return this.parse(`/help show`);\r\n\t\tif (Monitor.countNetRequests(connection.ip)) {\r\n\t\t\tthrow new Chat.ErrorMessage(`You are using this command too quickly. Wait a bit and try again.`);\r\n\t\t}\r\n\r\n\t\tconst [link, comment] = Utils.splitFirst(target, ',').map(f => f.trim());\r\n\t\tthis.checkBroadcast();\r\n\t\tif (this.broadcastMessage) {\r\n\t\t\tif (room) {\r\n\t\t\t\tthis.checkCan('show', null, room);\r\n\t\t\t} else {\r\n\t\t\t\tthis.checkCan('altsself');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.runBroadcast();\r\n\t\tlet buf;\r\n\t\tif (YouTube.linkRegex.test(link)) {\r\n\t\t\tbuf = await YouTube.generateVideoDisplay(link, false);\r\n\t\t\tthis.message = this.message.replace(/&ab_channel=(.*)(&|)/ig, '').replace(/https:\\/\\/www\\./ig, '');\r\n\t\t} else if (Twitch.linkRegex.test(link)) {\r\n\t\t\tconst channelId = Twitch.linkRegex.exec(link)?.[2]?.trim();\r\n\t\t\tif (!channelId) throw new Chat.ErrorMessage(`Specify a Twitch channel.`);\r\n\t\t\tbuf = Utils.html`Watching <b><a class=\"subtle\" href=\"https://twitch.tv/${toID(channelId)}\">${channelId}</a></b>...<br />`;\r\n\t\t\tbuf += Utils.html`<twitch src=\"${link}\" />`;\r\n\t\t} else {\r\n\t\t\tif (Chat.linkRegex.test(link)) {\r\n\t\t\t\tif (/^https?:\\/\\/(.*)\\.(mp4|mov)\\b(\\?|$)/i.test(link)) { // video\r\n\t\t\t\t\t// can't fitImage video, so we're just gonna have to guess to keep it small\r\n\t\t\t\t\tbuf = Utils.html`<video src=\"${link}\" controls=\"\" width=\"300px\" height=\"300px\"></video>`;\r\n\t\t\t\t} else if (/^https?:\\/\\/(.*)\\.(mp3|wav)\\b(\\?|$)/i.test(link)) { // audio\r\n\t\t\t\t\tbuf = Utils.html`<audio src=\"${link}\" controls=\"\"></audio>`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (link.includes('data:image/png;base64')) {\r\n\t\t\t\tthrow new Chat.ErrorMessage('Please provide an actual link (you probably copied it wrong?).');\r\n\t\t\t}\r\n\t\t\tif (!buf) { // fall back on image\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst [width, height, resized] = await Chat.fitImage(link);\r\n\t\t\t\t\tbuf = Utils.html`<img src=\"${link}\" width=\"${width}\" height=\"${height}\" />`;\r\n\t\t\t\t\tif (resized) buf += Utils.html`<br /><a href=\"${link}\" target=\"_blank\">full-size image</a>`;\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tthrow new Chat.ErrorMessage('Invalid image, audio, or video URL.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (comment) {\r\n\t\t\tif (this.checkChat(comment) !== comment) {\r\n\t\t\t\tthrow new Chat.ErrorMessage(`You cannot use filtered words in comments.`);\r\n\t\t\t}\r\n\t\t\tbuf += Utils.html`<br />(${comment})</div>`;\r\n\t\t}\r\n\r\n\t\tthis.sendReplyBox(buf);\r\n\t},\r\n\tshowhelp: [\r\n\t\t`/show [url] - Shows you an image, audio clip, video file, or YouTube video.`,\r\n\t\t`!show [url] - Shows an image, audio clip, video file, or YouTube video to everyone in a chatroom. Requires: whitelist % @ # ~`,\r\n\t],\r\n\r\n\trebroadcast(target, room, user, connection) {\r\n\t\tif (!target || !target.startsWith('!') || !this.shouldBroadcast()) {\r\n\t\t\treturn this.parse('/help rebroadcast');\r\n\t\t}\r\n\t\troom = this.requireRoom();\r\n\t\troom.lastBroadcast = '';\r\n\t\tthis.parse(target, { broadcastPrefix: \"!rebroadcast \" });\r\n\t},\r\n\trebroadcasthelp: [\r\n\t\t`!rebroadcast ![command] - Bypasses the broadcast cooldown to broadcast a command.`,\r\n\t],\r\n\r\n\tregdate: 'registertime',\r\n\tregtime: 'registertime',\r\n\tasync registertime(target, room, user, connection) {\r\n\t\tthis.runBroadcast();\r\n\t\tif (Monitor.countNetRequests(connection.ip)) {\r\n\t\t\tthrow new Chat.ErrorMessage(`You are using this command too quickly. Wait a bit and try again.`);\r\n\t\t}\r\n\t\tif (!user.autoconfirmed) throw new Chat.ErrorMessage(`Only autoconfirmed users can use this command.`);\r\n\t\ttarget = toID(target);\r\n\t\tif (!target) target = user.id;\r\n\t\tlet rawResult;\r\n\t\ttry {\r\n\t\t\trawResult = await Net(`https://${Config.routes.root}/users/${target}.json`).get();\r\n\t\t} catch (e: any) {\r\n\t\t\tif (e.message.includes('Not found')) throw new Chat.ErrorMessage(`User '${target}' is unregistered.`);\r\n\t\t\tthrow new Chat.ErrorMessage(e.message);\r\n\t\t}\r\n\t\t// not in a try-catch block because if this doesn't work, this is a problem that should be known\r\n\t\tconst result = JSON.parse(rawResult);\r\n\t\tconst date = new Date(result.registertime * 1000);\r\n\t\tconst duration = Date.now() - date.getTime();\r\n\t\t// hardcode, since the loginserver doesn't store exact times, and\r\n\t\t// so this can look quite inaccurate if it was within the last day\r\n\t\tconst regTimeAgo = duration > 24 * 60 * 60 * 1000 ?\r\n\t\t\tChat.toDurationString(duration, { precision: 1 }) :\r\n\t\t\t'less than a day';\r\n\t\tthis.sendReplyBox(Utils.html`The user '${target}' registered ${regTimeAgo} ago, on the date ${date.toDateString()}.`);\r\n\t},\r\n\tregistertimehelp: [`/registertime OR /regtime [user] - Find out when [user] registered.`],\r\n\r\n\tpi(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return false;\r\n\t\treturn this.sendReplyBox(\r\n\t\t\t'Did you mean: 1. 3.1415926535897932384626... (Decimal)<br />' +\r\n\t\t\t'2. 3.184809493B91866... (Duodecimal)<br />' +\r\n\t\t\t'3. 3.243F6A8885A308D... (Hexadecimal)<br /><br />' +\r\n\t\t\t'How many digits of pi do YOU know? Test it out <a href=\"http://guangcongluo.com/mempi/\">here</a>!'\r\n\t\t);\r\n\t},\r\n\tpihelp: [`/pi - Displays the first several digits of pi in several notation types.`],\r\n\r\n\tcode(target, room, user, connection) {\r\n\t\t// target is trimmed by Chat#splitMessage, but leading spaces can be\r\n\t\t// important to code block indentation.\r\n\t\ttarget = this.message.substr(this.cmdToken.length + this.cmd.length + (this.message.includes(' ') ? 1 : 0)).trimRight();\r\n\t\tif (!target) return this.parse('/help code');\r\n\t\tif (target.length >= 8192) throw new Chat.ErrorMessage(\"Your code must be under 8192 characters long!\");\r\n\t\tif (target.length < 80 && !target.includes('\\n') && !target.includes('```') && this.shouldBroadcast()) {\r\n\t\t\treturn this.checkChat(`\\`\\`\\`${target}\\`\\`\\``);\r\n\t\t}\r\n\r\n\t\tif (this.room?.settings.isPersonal !== false && this.shouldBroadcast()) {\r\n\t\t\ttarget = this.filter(target)!;\r\n\t\t\tif (!target) throw new Chat.ErrorMessage(`Invalid code.`);\r\n\t\t}\r\n\r\n\t\tthis.checkBroadcast(true, '!code');\r\n\t\tthis.runBroadcast(true);\r\n\r\n\t\tif (this.broadcasting) {\r\n\t\t\treturn `/raw <div class=\"infobox\">${Chat.getReadmoreCodeBlock(target)}</div>`;\r\n\t\t} else {\r\n\t\t\tthis.sendReplyBox(Chat.getReadmoreCodeBlock(target));\r\n\t\t}\r\n\t},\r\n\tcodehelp: [\r\n\t\t`!code [code] - Broadcasts code to a room. Accepts multi-line arguments. Requires: + % @ ~ #`,\r\n\t\t`/code [code] - Shows you code. Accepts multi-line arguments.`,\r\n\t],\r\n\r\n\tbuildformat(target, room, user) {\r\n\t\ttarget = toID(target);\r\n\t\tif (target && this.connection.openPages?.has('buildformat')) {\r\n\t\t\tthis.closePage('buildformat');\r\n\t\t}\r\n\t\treturn this.parse(`/j view-buildformat${target ? `-${target}` : \"\"}`);\r\n\t},\r\n\r\n\tmakecustomchallenge(target, room, user) {\r\n\t\ttarget = target.trim();\r\n\t\tif (!target.length) {\r\n\t\t\treturn this.popupReply(`No parameters given.`);\r\n\t\t}\r\n\t\tconst args = Chat.parseArguments(target, ' | ', {\r\n\t\t\tallowEmpty: true, useIDs: false,\r\n\t\t});\r\n\t\tif (!args.format?.[0]) {\r\n\t\t\treturn this.popupReply(`No format specified.`);\r\n\t\t}\r\n\t\tconst format = Dex.formats.get(toID(args.format[0]));\r\n\t\tif (format.effectType !== 'Format') {\r\n\t\t\treturn this.popupReply(`The format '${format}' does not exist.`);\r\n\t\t}\r\n\t\tdelete args.format;\r\n\t\tconst targetUserID = toID(args.user?.[0] || '');\r\n\t\tif (targetUserID) {\r\n\t\t\tthis.checkChat();\r\n\t\t\tif (!Users.get(targetUserID)) {\r\n\t\t\t\treturn this.popupReply(`User '${targetUserID}' not found.`);\r\n\t\t\t}\r\n\t\t}\r\n\t\tdelete args.user;\r\n\t\tconst challengeBuf = [];\r\n\t\tif (args.bans?.[0]) {\r\n\t\t\tconst bans = args.bans[0].split(',').map(f => f.trim());\r\n\t\t\tchallengeBuf.push(...bans);\r\n\t\t}\r\n\t\tdelete args.bans;\r\n\r\n\t\tfor (const k in args) {\r\n\t\t\tif (k.endsWith('-enabled')) continue;\r\n\t\t\tlet name = k;\r\n\t\t\tif (name.endsWith('-val')) {\r\n\t\t\t\tname = name.slice(0, -4);\r\n\t\t\t}\r\n\t\t\tconst rule = Dex.data.Rulesets[name];\r\n\t\t\tif (!rule || rule.effectType === 'Format') {\r\n\t\t\t\treturn this.popupReply(`Invalid rule or modifier: ${name}`);\r\n\t\t\t}\r\n\t\t\tconst id = rule.id || toID(rule.name);\r\n\t\t\tlet val = args[k][0];\r\n\t\t\t// BUG: when there are numbers in the form elem/param name,\r\n\t\t\t// the `{name}` specifier doesn't get removed from the string\r\n\t\t\tif (val.startsWith('{')) {\r\n\t\t\t\tval = '';\r\n\t\t\t}\r\n\r\n\t\t\tconst ruleTable = Dex.formats.getRuleTable(format);\r\n\t\t\tif (rule.hasValue) {\r\n\t\t\t\tconst enabled = args[`${id}-enabled`][0] || \"\";\r\n\t\t\t\tval = args[`${id}-val`][0] || \"\";\r\n\t\t\t\tif (enabled) {\r\n\t\t\t\t\tconst current = ruleTable.valueRules.get(id);\r\n\t\t\t\t\tif (typeof current !== 'undefined') {\r\n\t\t\t\t\t\tif (current !== val) {\r\n\t\t\t\t\t\t\tchallengeBuf.push(`!! ${rule.name} = ${val}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchallengeBuf.push(`${rule.name} = ${val}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (ruleTable.valueRules.has(id)) {\r\n\t\t\t\t\t\tchallengeBuf.push(`!${rule.name}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// adding one that's already there\r\n\t\t\t\tif (val && ruleTable.has(id)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (!val && !ruleTable.has(id)) {\r\n\t\t\t\t\t// removing a rule that isn't there\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tchallengeBuf.push(`${!val ? '!' : \"\"}${rule.name}`);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst fullFormat = `${format.id}@@@${challengeBuf.join(',')}`;\r\n\t\ttry {\r\n\t\t\tDex.formats.validate(fullFormat);\r\n\t\t} catch (e: any) {\r\n\t\t\tthis.refreshPage(`buildformat-${format.id}`);\r\n\t\t\treturn this.popupReply(e.message);\r\n\t\t}\r\n\t\tif (targetUserID) {\r\n\t\t\tthis.closePage(`buildformat`);\r\n\t\t\treturn this.parse(`/challenge ${targetUserID},${fullFormat}`);\r\n\t\t} else {\r\n\t\t\tthis.connection.send(\r\n\t\t\t\t`>view-buildformat-${format.id}\\n|selectorhtml|#output|` +\r\n\t\t\t\t`Here's the string for your desired rules!<br /><code>${fullFormat}</code><br />` +\r\n\t\t\t\t`Use <code>/challenge [user],${fullFormat}</code> to challenge someone with it!`\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\r\n\tadminhelp(target, room, user) {\r\n\t\tthis.checkCan('rangeban');\r\n\t\tlet cmds = Chat.allCommands();\r\n\t\tconst canExecute = (perm: string) => !(\r\n\t\t\t// gotta make sure no lower group has it\r\n\t\t\tObject.values(Config.groups).slice(1).some(f => (f as any)[perm])\r\n\t\t);\r\n\t\tcmds = cmds.filter(\r\n\t\t\tf => f.requiredPermission && canExecute(f.requiredPermission) && f.fullCmd !== this.handler?.fullCmd\r\n\t\t);\r\n\t\tcmds = Utils.sortBy(cmds, f => f.fullCmd);\r\n\t\tlet namespaces = new Map<string, string[]>();\r\n\t\tfor (const cmd of cmds) {\r\n\t\t\tconst namespace = cmd.fullCmd.split(' ')[0];\r\n\t\t\tconst list = namespaces.get(namespace) || [];\r\n\t\t\tlist.push(cmd.fullCmd.trim());\r\n\t\t\tnamespaces.set(namespace, list);\r\n\t\t}\r\n\t\tlet buf = `<strong>Admin commands:</strong><br />`;\r\n\t\tnamespaces = new Map(Utils.sortBy([...namespaces], ([, cmdList]) => cmdList.length === 1));\r\n\t\tfor (const [namespace, cmdList] of namespaces) {\r\n\t\t\tif (cmdList.length > 1 || cmdList[0].includes(' ')) {\r\n\t\t\t\tbuf += `<details class=\"readmore\"><summary>${namespace}</summary>`;\r\n\t\t\t\tbuf += cmdList.map(f => `&bull; /${f}`).join('<br />');\r\n\t\t\t\tbuf += `</details>`;\r\n\t\t\t} else {\r\n\t\t\t\tbuf += `&bull; ${cmdList[0]}`;\r\n\t\t\t\tconst help = Chat.commands[namespace + 'help'];\r\n\t\t\t\tif (help) {\r\n\t\t\t\t\tconst text = Array.isArray(help) ?\r\n\t\t\t\t\t\thelp.join(' | ') : typeof help === 'function' ?\r\n\t\t\t\t\t\t\t`<button class=\"button\" name=\"send\" value=\"/${cmdList[0] + 'help'}\">Get help</button>` : '';\r\n\t\t\t\t\tbuf += text ? ` (<code><small>${text}</small></code>)` : ` (no help found)`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbuf += `<br />`;\r\n\t\t}\r\n\t\tthis.sendReplyBox(buf);\r\n\t},\r\n\tadminhelphelp: [`/adminhelp - Programmatically generates a list of all administrator commands. Requires: ~`],\r\n\r\n\taltlog: 'altslog',\r\n\taltslog(target, room, user) {\r\n\t\tthis.checkCan('lock');\r\n\t\ttarget = toID(target);\r\n\t\tif (!target) {\r\n\t\t\treturn this.parse(`/help altslog`);\r\n\t\t}\r\n\t\treturn this.parse(`/join view-altslog-${target}`);\r\n\t},\r\n\taltsloghelp: [\r\n\t\t`/altslog [userid] - View the alternate account history for the given [userid]. Requires: % @ ~`,\r\n\t],\r\n\r\n\trandtopic(target, room, user) {\r\n\t\troom = this.requireRoom();\r\n\t\tif (!room.settings.topics?.length) {\r\n\t\t\tthrow new Chat.ErrorMessage(`This room has no random topics to select from.`);\r\n\t\t}\r\n\t\tthis.runBroadcast();\r\n\t\tthis.sendReply(Utils.html`|html|<div class=\"broadcast-blue\">${Utils.randomElement(room.settings.topics)}</div>`);\r\n\t},\r\n\trandtopichelp: [\r\n\t\t`/randtopic - Randomly selects a topic from the room's discussion topic pool and displays it.`,\r\n\t\t`/addtopic [target] - Adds the [target] to the pool of random discussion topics. Requires: % @ # ~`,\r\n\t\t`/removetopic [index] - Removes the topic from the room's topic pool. Requires: % @ # ~`,\r\n\t\t`/randomtopics - View the discussion topic pool for the current room.`,\r\n\t],\r\n\r\n\taddtopic(target, room, user) {\r\n\t\troom = this.requireRoom();\r\n\t\tthis.checkCan('mute', null, room);\r\n\t\ttarget = target.trim();\r\n\t\tif (!toID(target).length) {\r\n\t\t\treturn this.parse(`/help randtopic`);\r\n\t\t}\r\n\t\tif (!room.settings.topics) room.settings.topics = [];\r\n\t\troom.settings.topics.push(target);\r\n\t\tthis.privateModAction(`${user.name} added the topic \"${target}\" to the random topic pool.`);\r\n\t\tthis.modlog('ADDTOPIC', null, target);\r\n\t\troom.saveSettings();\r\n\t},\r\n\taddtopichelp: [`/addtopic [target] - Adds the [target] to the pool of random discussion topics. Requires: % @ # ~`],\r\n\r\n\tremovetopic(target, room, user) {\r\n\t\troom = this.requireRoom();\r\n\t\tthis.checkCan('mute', null, room);\r\n\t\tif (!toID(target)) {\r\n\t\t\treturn this.parse(`/help randtopic`);\r\n\t\t}\r\n\t\tconst index = Number(toID(target)) - 1;\r\n\t\tif (isNaN(index)) {\r\n\t\t\tthrow new Chat.ErrorMessage(`Invalid topic index: ${target}. Must be a number.`);\r\n\t\t}\r\n\t\tif (!room.settings.topics?.[index]) {\r\n\t\t\tthrow new Chat.ErrorMessage(`Topic ${index + 1} not found.`);\r\n\t\t}\r\n\t\tconst topic = room.settings.topics.splice(index, 1)[0];\r\n\t\troom.saveSettings();\r\n\t\tthis.privateModAction(`${user.name} removed topic ${index + 1} from the random topic pool.`);\r\n\t\tthis.modlog('REMOVETOPIC', null, topic);\r\n\t},\r\n\tremovetopichelp: [`/removetopic [index] - Removes the topic from the room's topic pool. Requires: % @ # ~`],\r\n\r\n\tlisttopics: 'randomtopics',\r\n\trandtopics: 'randomtopics',\r\n\trandomtopics(target, room, user) {\r\n\t\troom = this.requireRoom();\r\n\t\treturn this.parse(`/join view-topics-${room}`);\r\n\t},\r\n};\r\n\r\nexport const handlers: Chat.Handlers = {\r\n\tonRename(user, oldID, newID) {\r\n\t\tif (oldID === newID || !Config.usesqlite || [oldID, newID].some(f => f.startsWith('guest'))) return;\r\n\t\tvoid Chat.database.run(\r\n\t\t\t`REPLACE INTO alts_log (to_id, from_id, ip) VALUES (?, ?, ?)`,\r\n\t\t\t[newID, oldID, user.latestIp]\r\n\t\t);\r\n\t},\r\n};\r\n\r\nexport const pages: Chat.PageTable = {\r\n\tasync altslog(query, user) {\r\n\t\tthis.checkCan('lock');\r\n\t\tthis.title = '[Alts Log]';\r\n\t\tconst target = toID(query.shift());\r\n\t\tif (!target) {\r\n\t\t\tthrow new Chat.ErrorMessage(`Please specify a user to find alternate accounts for.`);\r\n\t\t}\r\n\t\tthis.title += ` ${target}`;\r\n\t\tif (!Config.usesqlite) {\r\n\t\t\tthrow new Chat.ErrorMessage(`The alternate account log is currently disabled.`);\r\n\t\t}\r\n\t\tconst rawLimit = query.shift() || \"100\";\r\n\t\tconst num = parseInt(rawLimit);\r\n\t\tif (num > 3000) {\r\n\t\t\tthrow new Chat.ErrorMessage(`3000 is the maximum number of results from the alternate account log.`);\r\n\t\t}\r\n\t\tif (isNaN(num) || num < 1) {\r\n\t\t\tthrow new Chat.ErrorMessage(`The max results must be a real number that is at least one (received \"${rawLimit}\")`);\r\n\t\t}\r\n\t\tconst showIPs = user.can('globalban');\r\n\t\tconst results = await Chat.database.all(\r\n\t\t\t'SELECT to_id, from_id, ip FROM alts_log WHERE (to_id = ? OR from_id = ?) LIMIT ?',\r\n\t\t\t[target, target, num]\r\n\t\t);\r\n\t\tlet buf = `<div class=\"pad\"><h2>Alternate accounts for ${target}</h2>`;\r\n\t\tbuf += `${results.length} found.<hr />`;\r\n\r\n\t\tconst ipTable = {} as Record<string, number>;\r\n\t\tconst userids = new Set<string>();\r\n\t\tconst useridToIp = new Map<string, string[]>();\r\n\t\tfor (const result of results) {\r\n\t\t\tconst id = result.from_id === target ? result.to_id : result.from_id;\r\n\t\t\tuserids.add(id);\r\n\t\t\tlet prevIps = useridToIp.get(id);\r\n\t\t\tif (!prevIps) {\r\n\t\t\t\tprevIps = [];\r\n\t\t\t}\r\n\t\t\tif (!prevIps.includes(result.ip)) {\r\n\t\t\t\tprevIps.push(result.ip);\r\n\t\t\t}\r\n\t\t\tuseridToIp.set(id, prevIps);\r\n\t\t\tif (!ipTable[result.ip]) ipTable[result.ip] = 0;\r\n\t\t\tipTable[result.ip]++;\r\n\t\t}\r\n\t\tbuf += `<div class=\"ladder pad\"><table><tr><th>Userid</th>${showIPs ? `<th>Latest IP</th>` : \"\"}</tr>`;\r\n\t\tfor (const id of userids) {\r\n\t\t\tconst ips = useridToIp.get(id) || [];\r\n\t\t\tbuf += `<tr><td>`;\r\n\t\t\tbuf += `<a href=\"https://${Config.routes.root}/users/${id}\">${id}</a></td>`;\r\n\t\t\tconst ipStr = ips.map(f => `<a href=\"https://whatismyipaddress.com/ip/${f}\">${f}</a>`).join(', ');\r\n\t\t\tbuf += `${showIPs ? `<td>${ipStr}</td>` : \"\"}</tr>`;\r\n\t\t}\r\n\t\tbuf += `</table></div>`;\r\n\t\tif (showIPs) {\r\n\t\t\tbuf += `<br /><div class=\"ladder pad\"><table><tr><th>IP</th><th>Times Used</th></tr>`;\r\n\t\t\tfor (const ip in ipTable) {\r\n\t\t\t\tbuf += `<tr><td>${ip}</td><td>${ipTable[ip]}</td></tr>`;\r\n\t\t\t}\r\n\t\t\tbuf += `</table></div>`;\r\n\t\t}\r\n\t\treturn buf;\r\n\t},\r\n\ttopics(query, user) {\r\n\t\tconst room = this.requireRoom();\r\n\t\tthis.title = `[Topics] ${room.title}`;\r\n\t\tconst topics = room.settings.topics || [];\r\n\t\tlet buf;\r\n\t\tif (!topics.length) {\r\n\t\t\tbuf = `<div class=\"pad\"><h2>This room has no discussion topics saved.</h2></div>`;\r\n\t\t\treturn buf;\r\n\t\t}\r\n\t\tbuf = `<div class=\"pad\"><h2>Random topics for ${room.title} (${topics.length}):</h2><ul>`;\r\n\t\tfor (const [i, topic] of topics.entries()) {\r\n\t\t\tbuf += Utils.html`<li>${i + 1}: \"${topic}\"</li>`;\r\n\t\t}\r\n\t\tbuf += `</ul></div>`;\r\n\t\treturn buf;\r\n\t},\r\n\tbattlerules(query, user) {\r\n\t\tconst rules = Object.values(Dex.data.Rulesets).filter(rule => rule.effectType !== \"Format\");\r\n\t\tconst tourHelp = `https://www.smogon.com/forums/threads/pok%C3%A9mon-showdown-forum-rules-resources-read-here-first.3570628/#post-6777489`;\r\n\t\tthis.title = \"Custom Rules\";\r\n\t\tlet rulesHTML = `<div class=\"pad\"><h1>Custom Rules in challenges and tournaments</h1>`;\r\n\t\tconst basics = [\r\n\t\t\t`<p>Pok&eacute;mon Showdown! supports custom rules in three ways:</p>`,\r\n\t\t\t`<ul><li>Challenging another user, using the command <code>/challenge USERNAME, FORMAT @@@ RULES</code></li>`,\r\n\t\t\t`<li>Tournaments, using the command <code>/tour rules RULES</code> (see the <a href=\"${tourHelp}\">Tournament command help</a>)</li>`,\r\n\t\t\t`<li>Custom rules on your own server</li></ul>`,\r\n\t\t\t`<h2><u>Bans</u></h2>`,\r\n\t\t\t`<p>Bans are just a <code>-</code> followed by the thing you want to ban.</p>`,\r\n\t\t\t`<h3>Individual bans</h3>`,\r\n\t\t\t`<ul><li><code>- Arceus</code>: Ban a Pok&eacute;mon (including all formes)</li>`,\r\n\t\t\t`<li><code>- Arceus-Flying</code> or <code>- Giratina-Altered</code>: Ban a Pok&eacute;mon forme</li>`,\r\n\t\t\t`<li><code>- Baton Pass</code>: Ban a move/item/ability/etc</li></ul>`,\r\n\t\t\t`<h3>Group bans</h3>`,\r\n\t\t\t`<ul><li><code>- OU</code> or <code>- DUU</code>: Ban a tier</li>`,\r\n\t\t\t`<li><code>- Mega</code> or <code>- CAP</code>: Ban a Pok&eacute;mon category</li></ul>`,\r\n\t\t\t`<h3>Complex bans</h3>`,\r\n\t\t\t`<ul><li><code>- Blaziken + Speed Boost</code>: Ban a combination of things in a single Pokemon (you can have a Blaziken, and you can have Speed Boost on the same team, but the Blaziken can't have Speed Boost)</li>`,\r\n\t\t\t`<li><code>- Drizzle ++ Swift Swim</code>: Ban a combination of things in a team (if any Pok\u00E9mon on your team have Drizzle, no Pok\u00E9mon can have Swift Swim)</li></ul>`,\r\n\t\t\t`<h2><u>Unbans</u></h2>`,\r\n\t\t\t`<p>Using a <code>+</code> instead of a <code>-</code> unbans that category.</p>`,\r\n\t\t\t`<ul><li><code>+ Blaziken</code>: Unban/unrestrict a Pok&eacute;mon.</li></ul>`,\r\n\t\t\t`<p><a class=\"button\" href=\"https://github.com/smogon/pokemon-showdown/blob/master/config/CUSTOM-RULES.md\">More details</a></p>`,\r\n\t\t];\r\n\t\tconst rulesets = [\r\n\t\t\t`<h2><u>Rules, mods, and clauses</u></h2>`,\r\n\t\t\t`<p>The following rules can be added to challenges/tournaments to modify the style of play. Alternatively, already present rules can be removed from formats by preceding the rule name with <code>!</code></p>`,\r\n\t\t\t`<p>However, some rules, like <code>Obtainable</code>, are made of subrules, that can be individually turned on and off.</p>`,\r\n\t\t\t`<div class=\"ladder\"><table><tr><th>Rule Name</th><th>Description</th></tr>`,\r\n\t\t];\r\n\t\tfor (const rule of rules) {\r\n\t\t\tif (rule.hasValue) continue;\r\n\t\t\tconst desc = rule.desc ? rule.desc : \"No description.\";\r\n\t\t\trulesets.push(`<tr><td>${rule.name}</td><td>${desc}</td></tr>`);\r\n\t\t}\r\n\t\trulesets.push(\r\n\t\t\t`</table></div>`,\r\n\t\t\t`<h3>Value rules</h3>`,\r\n\t\t\t`<ul><li>Value rules are formatted like [Name] = [value], e.g. \"Force Monotype = Water\" or \"Min Team Size = 4\"</li>`,\r\n\t\t\t`<li>To remove a value rule, use <code>![rule name]</code>.</li>`,\r\n\t\t\t`<li>To override another value rule, use <code>!! [Name] = [new value]</code>. For example, overriding the Min Source Gen on [Gen 8] VGC 2021 from 8 to 3 would look like <code>!! Min Source Gen = 3</code>.</li></ul>`,\r\n\t\t\t`<div class=\"ladder\"><table><tr><th>Rule Name</th><th>Description</th></tr>`\r\n\t\t);\r\n\t\tfor (const rule of rules) {\r\n\t\t\tif (!rule.hasValue) continue;\r\n\t\t\tconst desc = rule.desc ? rule.desc : \"No description.\";\r\n\t\t\trulesets.push(`<tr><td>${rule.name}</td><td>${desc}</td></tr>`);\r\n\t\t}\r\n\t\trulesets.push(`</table></div>`);\r\n\t\trulesHTML += `${basics.concat(rulesets).join('')}</div>`;\r\n\t\treturn rulesHTML;\r\n\t},\r\n\tbuildformat(query, user) {\r\n\t\tthis.title = '[Format Customizer]';\r\n\t\tconst rules = Object.values(Dex.data.Rulesets).filter(rule => rule.effectType !== \"Format\");\r\n\t\tlet buf = `<div class=\"pad\"><h2>Format customizer</h2>`;\r\n\t\tbuf += `<button class=\"button\" name=\"send\" value=\"/join ${this.pageid}\">`;\r\n\t\tbuf += `<i class=\"fa fa-refresh\"></i> ${this.tr`Refresh`}</button>`;\r\n\t\tbuf += `<hr />`;\r\n\t\tconst formatId = toID(query[0]);\r\n\t\tconst format = Dex.formats.get(formatId);\r\n\t\tif (!formatId || format.effectType !== 'Format') {\r\n\t\t\tif (formatId) {\r\n\t\t\t\tbuf += `<div class=\"message-error\">The format '${formatId}' does not exist.</div><br />`;\r\n\t\t\t}\r\n\t\t\tbuf += `<form data-submitsend=\"/buildformat {format}\">`;\r\n\t\t\tbuf += `Choose your format: <formatselect name=\"format\">[Gen ${Dex.gen}] Random Battle</formatselect><br />`;\r\n\t\t\tbuf += `<button type=\"submit\" class=\"button notifying\">Continue</button>`;\r\n\t\t\tbuf += `</form>`;\r\n\t\t\treturn buf;\r\n\t\t}\r\n\r\n\t\tbuf += `<form data-submitsend=\"{{cmd}}\">`;\r\n\t\tconst ruleTable = Dex.formats.getRuleTable(format);\r\n\t\tconst cmd = [`format=${formatId}`, 'user={user}'];\r\n\t\tbuf += `Format: ${format.name}<br />`;\r\n\t\tbuf += `User to challenge: <input name=\"user\" /> <small>(optional)</small>`;\r\n\t\tbuf += `<br /><br />`;\r\n\t\tbuf += `<u><strong>Bans/Unbans</strong></u><br />`;\r\n\t\tbuf += `<details class=\"readmore\">`;\r\n\t\tbuf += `<summary>Bans are a <code>-</code> followed by the thing you want to ban. `;\r\n\t\tbuf += `Using a <code>+</code> instead unbans Pokemon.</summary><small>`;\r\n\t\tbuf += `<h3>Individual bans</h3>`;\r\n\t\tbuf += `<ul><li><code>- Arceus</code>: Ban a Pok&eacute;mon (including all formes)</li>`;\r\n\t\tbuf += `<li><code>- Arceus-Flying</code> or <code>- Giratina-Altered</code>: Ban a Pok&eacute;mon forme</li>`;\r\n\t\tbuf += `<li><code>- Baton Pass</code>: Ban a move/item/ability/etc</li></ul>`;\r\n\t\tbuf += `<h3>Group bans</h3>`;\r\n\t\tbuf += `<ul><li><code>- OU</code> or <code>- DUU</code>: Ban a tier</li>`;\r\n\t\tbuf += `<li><code>- Mega</code> or <code>- CAP</code>: Ban a Pok&eacute;mon category</li></ul>`;\r\n\t\tbuf += `<h3>Complex bans</h3>`;\r\n\t\tbuf += `<ul><li><code>- Blaziken + Speed Boost</code>: Ban a combination of things in a single Pokemon (you can have a Blaziken, and you can have Speed Boost on the same team, but the Blaziken can't have Speed Boost)</li>`;\r\n\t\tbuf += `<li><code>- Drizzle ++ Swift Swim</code>: Ban a combination of things in a team (if any Pok\u00E9mon on your team have Drizzle, no Pok\u00E9mon can have Swift Swim)</li></ul>`;\r\n\t\tbuf += `<h2><u>Unbans</u></h2>`;\r\n\t\tbuf += `<p>Using a <code>+</code> instead of a <code>-</code> unbans that category.</p>`;\r\n\t\tbuf += `<ul><li><code>+ Blaziken</code>: Unban/unrestrict a Pok&eacute;mon.</li></ul></small></details><br />`;\r\n\t\tcmd.push(`bans={bans}`);\r\n\t\tbuf += `Bans/Unbans: <small>(separated by commas)</small><br /><br />`;\r\n\t\tbuf += `<textarea style=\"width: 100%\" name=\"bans\"></textarea><br />`;\r\n\t\tbuf += `<details class=\"readmore\"><summary><u><strong>Clauses</strong></u></summary>`;\r\n\t\tbuf += `<p>The following rules can be added to challenges/tournaments to modify the style of play. `;\r\n\t\tbuf += `Alternatively, already present rules can be removed from formats by preceding the rule name with <code>!</code>.</p>`;\r\n\t\tbuf += `<p>However, some rules, like <code>Obtainable</code>, are made of subrules, that can be individually turned on and off.</p>`;\r\n\t\tbuf += `<p>Note that if you do not explicitly check a mod to include it, it will not be included in the final output.</p>`;\r\n\t\tbuf += `<div class=\"ladder\"><table><tr><th>Rule Name</th><th>Description</th><th>Toggle</th></tr>`;\r\n\t\tfor (const rule of rules) {\r\n\t\t\tif (rule.hasValue) continue;\r\n\t\t\tconst desc = rule.desc || \"No description.\";\r\n\t\t\tconst id = toID(rule.name);\r\n\t\t\tbuf += `<tr>`;\r\n\t\t\tbuf += `<td>${rule.name}</td><td>${desc}</td>`;\r\n\t\t\tbuf += `<td><input type=\"checkbox\" name=\"${id}\" ${ruleTable.has(id) ? 'checked' : \"\"} value=\"on\" /></td>`;\r\n\t\t\tbuf += `</tr>`;\r\n\t\t\tcmd.push(`${id}={${id}}`);\r\n\t\t}\r\n\t\tbuf += `</table></div></details><br />`;\r\n\t\tbuf += `<details class=\"readmore\"><summary><u><strong>Value Rules</strong></u></summary>`;\r\n\t\tbuf += `Click the \"enabled\" checkbox and fill in a value to enable a rule - uncheck the box to remove the rule.`;\r\n\t\tbuf += `<div class=\"ladder\"><table><tr><th>Rule Name</th><th>Description</th><th>Toggle</th></tr>`;\r\n\t\tfor (const rule of rules) {\r\n\t\t\tif (!rule.hasValue) continue;\r\n\t\t\tconst desc = rule.desc || \"No description.\";\r\n\t\t\tbuf += `<tr>`;\r\n\t\t\tconst id = toID(rule.name);\r\n\t\t\tconst existing = ruleTable.valueRules.get(id);\r\n\t\t\tbuf += `<td>${rule.name}</td><td>${desc}</td>`;\r\n\t\t\tbuf += `<td>Enabled: <input type=\"checkbox\" name=\"${id}enabled\" value=\"on\" ${existing ? \"checked\" : ''}/><br />`;\r\n\t\t\tbuf += `Value: <input name=\"${id}val\" value=\"${existing || \"\"}\"/>`;\r\n\t\t\tcmd.push(`${id}-enabled={${id}enabled}`);\r\n\t\t\tcmd.push(`${id}-val={${id}val}`);\r\n\t\t\tbuf += `</td></tr>`;\r\n\t\t}\r\n\t\tbuf += `</details>`;\r\n\t\tbuf = buf.replace(`{{cmd}}`, `/makecustomchallenge ${cmd.join(' | ')}`);\r\n\t\tbuf += `<br /><br />`;\r\n\t\tbuf += `<button type=\"submit\" class=\"button notifying\">Create!</button></form>`;\r\n\t\tbuf += `<span id=\"output\"></span>`;\r\n\t\treturn buf;\r\n\t},\r\n\tpunishments(query, user) {\r\n\t\tthis.title = 'Punishments';\r\n\t\tconst room = this.requireRoom();\r\n\r\n\t\tlet buf = \"\";\r\n\t\tif (!user.named) return Rooms.RETRY_AFTER_LOGIN;\r\n\t\tif (!room.persist) return;\r\n\t\tthis.checkCan('mute', null, room);\r\n\t\t// Ascending order\r\n\t\tconst sortedPunishments = Utils.sortBy([...Punishments.getPunishments(room.roomid)], ([id, entry]) => (\r\n\t\t\tentry.expireTime\r\n\t\t));\r\n\t\tconst sP = new Map();\r\n\t\tfor (const [id, entry] of sortedPunishments) {\r\n\t\t\tsP.set(id, entry);\r\n\t\t}\r\n\t\tbuf += Punishments.visualizePunishments(sP, user);\r\n\t\treturn buf;\r\n\t},\r\n\tglobalpunishments(query, user) {\r\n\t\tthis.title = 'Global Punishments';\r\n\t\tlet buf = \"\";\r\n\t\tif (!user.named) return Rooms.RETRY_AFTER_LOGIN;\r\n\t\tthis.checkCan('lock');\r\n\t\t// Ascending order\r\n\t\tconst sortedPunishments = Utils.sortBy([...Punishments.getPunishments()], ([id, entry]) => (\r\n\t\t\tentry.expireTime\r\n\t\t));\r\n\t\tconst sP = new Map();\r\n\t\tfor (const punishment of sortedPunishments) {\r\n\t\t\tsP.set(punishment[0], punishment[1]);\r\n\t\t}\r\n\t\tbuf += Punishments.visualizePunishments(sP, user);\r\n\t\treturn buf;\r\n\t},\r\n\tapprovals(args) {\r\n\t\tconst room = Rooms.get(args[0])!;\r\n\t\tthis.checkCan('mute', null, room);\r\n\t\tif (!room.pendingApprovals) room.pendingApprovals = new Map();\r\n\t\tif (room.pendingApprovals.size < 1) return `<h2>No pending approvals on ${room.title}</h2>`;\r\n\t\tlet buf = `<div class=\"pad\"><strong>Pending media requests on ${room.title}</strong><hr />`;\r\n\t\tfor (const [userid, entry] of room.pendingApprovals) {\r\n\t\t\tbuf += `<strong>${entry.name}</strong><div class=\"infobox\">`;\r\n\t\t\tbuf += `<strong>Requester ID:</strong> ${userid}<br />`;\r\n\t\t\tbuf += `<strong>Link:</strong> <a href=\"${entry.link}\">${entry.link}</a><br />`;\r\n\t\t\tbuf += `<strong>Comment:</strong> ${entry.comment}`;\r\n\t\t\tbuf += `<form data-submitsend=\"/msgroom ${args[0]}, /approveshow ${userid}\">`;\r\n\t\t\tbuf += `<button class=\"button\" type=\"submit\">Approve</button>`;\r\n\t\t\tbuf += `</form>`;\r\n\t\t\tbuf += `<form data-submitsend=\"/msgroom ${args[0]}, /denyshow ${userid}\">`;\r\n\t\t\tbuf += `<button class=\"button\" type=\"submit\">Reject</button>`;\r\n\t\t\tbuf += `</form>`;\r\n\t\t\tbuf += `</div><hr />`;\r\n\t\t}\r\n\t\treturn buf;\r\n\t},\r\n};\r\n\r\nprocess.nextTick(() => {\r\n\tDex.includeData();\r\n\tChat.multiLinePattern.register(\r\n\t\t'/htmlbox', '/quote', '/addquote', '!htmlbox', '/addhtmlbox', '/addrankhtmlbox', '/adduhtml',\r\n\t\t'/changeuhtml', '/addrankuhtmlbox', '/changerankuhtmlbox', '/addrankuhtml', '/addhtmlfaq',\r\n\t\t'/sendhtmlpage',\r\n\t);\r\n});\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,UAAqB;AACrB,qBAAgC;AAChC,iBAA2B;AAC3B,2BAA6B;AAb7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA,MAAM,gBAAgB;AACtB,MAAM,iBAAiB;AAOhB,SAAS,iBACf,SAAa,OAAoB,SAAa,OAAoB,YACjE;AACD,QAAM,UAAU,CAAC;AACjB,aAAW,WAAW,MAAM,MAAM,OAAO,GAAG;AAC3C,QAAI,CAAC,QAAQ,OAAQ;AACrB,SACE,OAAO,QAAQ,IAAI,QAAQ,MAAM,KAAK,QAAQ,KAAK,IAAI,OAAO,MAAM,MAAM,mBAC1E,OAAO,QAAQ,IAAI,QAAQ,MAAM,KAAK,QAAQ,KAAK,IAAI,OAAO,MAAM,MAAM,gBAC1E;AACD,UAAI,YAAY;AACf,aAAK,QAAQ,aAAa,WAAW,MAAM,YAAY,eAAe;AAAA,MACvE;AACA,cAAQ,KAAK,QAAQ,MAAM;AAAA,IAC5B;AAAA,EACD;AACA,SAAO;AACR;AAEO,SAAS,YAAY,UAAkB,aAAa,OAAO;AACjE,QAAM,cAAc,IAAI,QAAQ,IAAI,QAAQ;AAE5C,QAAM,aAAa,YAAY,SAAS,CAAC,WAAW,IAAI,IAAI,QAAQ,IAAI;AAGxE,QAAM,WAA6D,CAAC;AACpE,MAAI,eAAe;AACnB,aAAW,UAAU,YAAY;AAChC,UAAM,YAAY,KAAK,OAAO,OAAO;AAErC,UAAM,WAAW,UAAU,KAAK,QAAQ,IAAI,OAAO,KAAK,OAAO,GAAG,MAAM,CAAC;AACzE,QACC,CAAC,YAAY,OAAO,WAAW,MAAsB,KAAK,cAAc,YACxE,SAAS,WAAW,QAAQ,KAAK,YAAY,QAC5C;AACD,UAAI,YAAY;AACf,cAAM,kBAAkB;AAAA,UACvB;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAS;AAAA,UAAM;AAAA,UAAY;AAAA,UAAc;AAAA,UAAqB;AAAA,UAAc;AAAA,QAC3G;AACA,YAAI,OAAO,GAAG,WAAW,KAAK,KAAK,gBAAgB,SAAS,OAAO,GAAG,MAAM,CAAC,CAAC,GAAG;AAChF;AAAA,QACD;AAAA,MACD;AACA;AACA,UAAI,CAAC,SAAS,SAAS,EAAG,UAAS,SAAS,IAAI,EAAE,MAAM,OAAO,SAAU,SAAS,CAAC,EAAE;AACrF,eAAS,SAAS,EAAE,QAAQ,KAAK,OAAO,EAAE;AAAA,IAC3C;AAAA,EACD;AACA,SAAO,EAAE,cAAc,SAAS;AACjC;AAEO,MAAM,mBAAmB,oBAAI,IAAiC;AACrE,eAAsB,mBAAmB,QAAgB;AACxD,QAAM,SAAS,iBAAiB,IAAI,MAAM;AAC1C,MAAI,WAAW,OAAW,QAAO;AACjC,MAAI;AACH,UAAM,MAAM,UAAM,gBAAI,qDAAqD,MAAM,EAAE,EAAE,IAAI;AACzF,UAAM,OAAO,KAAK,MAAM,GAAG;AAC3B,qBAAiB,IAAI,QAAQ,IAAI;AACjC,WAAO;AAAA,EACR,QAAQ;AAGP,qBAAiB,IAAI,QAAQ,IAAI;AACjC,WAAO;AAAA,EACR;AACD;AAGA,MAAM,0BAA0B,YAAY,MAAM,iBAAiB,MAAM,GAAG,KAAK,KAAK,GAAI;AAEnF,SAAS,UAAU;AACzB,gBAAc,uBAAuB;AACtC;AAEO,MAAM,WAA8B;AAAA,EAC1C,IAAI;AAAA,EACJ,OAAO;AAAA,EACP,KAAK;AAAA,EACL,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,eAAe;AAAA,EACf,SAAS;AAAA,EACT,MAAM,QAAQ,MAAM,MAAM,YAAY,KAAK;AAC1C,QAAI,MAAM,WAAW,WAAW,CAAC,KAAK,aAAa,EAAG;AACtD,UAAM,aAAa,KAAK,cAAc,QAAQ,EAAE,WAAW,KAAK,cAAc,IAAI,CAAC;AACnF,UAAM,UAAW,QAAQ,QAAQ,QAAQ,YAAY,QAAQ,SAAS,QAAQ,UAAU,QAAQ;AAChG,UAAM,oBAAoB,WAAY,QAAQ;AAC9C,QAAI,CAAC,YAAY;AAChB,UAAI,QAAS,QAAO,KAAK,MAAM,mBAAmB,MAAM;AACxD,YAAM,IAAI,KAAK,aAAa,QAAQ,MAAM,aAAa;AAAA,IACxD;AACA,QAAI,WAAW,CAAC,KAAK,WAAW,eAAe,MAAM;AACpD,YAAM,IAAI,KAAK,aAAa,IAAI,GAAG,mBAAmB;AAAA,IACvD;AAEA,QAAI,MAAM,iBAAM,4DAA4D,WAAW,SAAS,WAAW,WAAW,IAAI;AAC1H,UAAM,KAAK,WAAW;AACtB,QAAI,MAAM,SAAS;AAClB,aAAO,iCAAiC,WAAW,OAAO,KAAK,KAAK,4BAA4B,EAAE,SAAS;AAAA,IAC5G;AACA,UAAM,UAAU,WAAW;AAC3B,QAAI,WAAW,SAAS;AACvB,aAAO,sCAAsC,WAAW,OAAO,UAAU,KAAK,4BAA4B,OAAO,SAAS;AAAA,IAC3H;AACA,QAAI,CAAC,WAAW,UAAW,QAAO;AAClC,UAAM,WAAW,MAAM,KAAK,UAAU,WAAW,EAAE;AACnD,QAAI,YAAY,OAAO,OAAO,QAAQ,GAAG,MAAM;AAC9C,aAAO,iBAAM,aAAa,OAAO,OAAO,QAAQ,EAAE,IAAI,KAAK,QAAQ;AAAA,IACpE;AACA,QAAI,OAAO,OAAO,WAAW,SAAS,GAAG,MAAM;AAC9C,aAAO,iBAAM,oBAAoB,OAAO,OAAO,WAAW,SAAS,EAAE,IAAI,KAAK,WAAW,SAAS;AAAA,IACnG;AACA,QAAI,MAAM,WAAW,eAAe,IAAI,WAAW,EAAE,GAAG;AACvD,aAAO,iBAAM,6BAA6B,kCAAa,aAAa,MAAM,WAAW,eAAe,IAAI,WAAW,EAAE,CAAE,CAAC;AAAA,IACzH;AACA,QAAI,WAAW,SAAS;AACvB,aAAO;AAAA,IACR;AACA,QAAI,CAAC,WAAW,YAAY;AAC3B,aAAO;AAAA,IACR;AACA,QAAI,cAAc;AAClB,QAAI,cAAc;AAClB,QAAI,eAAe;AACnB,eAAW,UAAU,WAAW,SAAS;AACxC,YAAM,aAAa,MAAM,IAAI,MAAM;AAEnC,YAAM,aAAa,WAAW,KAAK,UAAU,WAAW,EAAE,EAAE,KAAK;AACjE,YAAM,cAAe,WAAW,SAAS,WAAW,WAAW,KAAK,MAAM;AAC1E,YAAM,SAAS,GAAG,UAAU,aAAa,MAAM,IAAI,WAAW,IAAI,MAAM;AACxE,UAAI,WAAW,SAAS,cAAc,MAAM;AAC3C,YAAI,WAAW,SAAS,YAAY,IAAK;AACzC,YAAI,aAAc,iBAAgB;AAClC,wBAAgB;AAAA,MACjB,WAAW,WAAW,SAAS,WAAW;AACzC,YAAI,YAAa,gBAAe;AAChC,uBAAe;AAAA,MAChB,OAAO;AACN,YAAI,YAAa,gBAAe;AAChC,uBAAe;AAAA,MAChB;AAAA,IACD;AACA,WAAO,gBAAgB,eAAe,4BAA4B;AAElE,QAAI,CAAC,SAAS;AACb,aAAO,KAAK,aAAa,GAAG;AAAA,IAC7B;AACA,UAAM,cAAe,SAAS,aAAa,KAAK,IAAI,UAAU,IAAI,KAAK,IAAI,QAAQ,UAAU;AAC7F,UAAM,qBAAqB,eACzB,QAAQ,KAAK,SAAS,cAAc,QAAQ,KAAK,IAAI,QAAQ,YAAY,IAAI,KAAK,WAAW,MAAM,KAAK;AAC1G,UAAM,qBAAqB,SAAS,cAAe,eAAe,WAAW,UAAW,KAAK,IAAI,UAAU;AAC3G,WAAO;AAEP,QAAI,aAAa;AAChB,UAAI,YAAY,WAAW,YAAY,IAAI,YAAU;AACpD,cAAM,cAAc,YAAY,QAAQ,IAAI,MAAM;AAClD,YAAI,CAAC,eAAe,CAAC,KAAK,IAAI,MAAM,EAAG,QAAO;AAC9C,eAAO,YAAY;AAAA,UAClB,gBACC,GAAG,MAAM,GAAG,aAAa,KAAK,YAAY,gBAAgB,IAAI,WAAW,IAAI,GAAG,QAAQ,UAAU,GAC/F,WAAW,OAAO,WAAW,KAAK,OAAO,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE;AAAA,QAE1E,EAAE,KAAK,KAAK;AAAA,MACb,CAAC,EAAE,KAAK,IAAI;AACZ,UAAI,UAAW,QAAO,iBAAM,6BAA6B,SAAS;AAElE,iBAAW,aAAa,WAAW,YAAY,IAAI,GAAG;AACrD,YAAI,CAAC,UAAU,SAAS,CAAC,UAAU,UAAW;AAC9C,YAAI,UAAU,cAAc,OAAO,KAAK,cAAc,IAAK;AAE3D,cAAM,cAAc,YAAY,QAAQ,IAAI,UAAU,EAAE,KAAK,CAAC;AAC9D,cAAM,YAAY,CAAC,KAAK,IAAI,MAAM,IAAI,KAAK,YAAY,IAAI,gBAC1D,KAAK,YAAY,gBAAgB,IAAI,WAAW,IAAI,GAAG,QAAQ,UAAU,GACtE,WAAW,OAAO,UAAU,KAAK,OAAO,WAAW,EAAE,KAAK,EAAE,GAC/D,EAAE,KAAK,KAAK;AACb,eAAO,iBAAM,yCAAyC,UAAU,IAAI,UAAU,SAAS;AACvF,YAAI,CAAC,UAAU,UAAW,QAAO;AACjC,oBAAY,UAAU,YAAY,IAAI,YAAU;AAC/C,gBAAM,IAAI,YAAY,QAAQ,IAAI,MAAM;AACxC,cAAI,CAAC,KAAK,CAAC,KAAK,IAAI,MAAM,EAAG,QAAO;AACpC,iBAAO,EAAE;AAAA,YACR,SAAO,GAAG,MAAM,KAAK,YAAY,gBAAgB,IAAI,IAAI,IAAI,GAAG,QAAQ,UAAU,GAAQ,IAAI,OAAO,UAAU,KAAK,OAAO,IAAI,EAAE,KAAK,EAAE;AAAA,UACzI,EAAE,KAAK,KAAK;AAAA,QACb,CAAC,EAAE,KAAK,IAAI;AACZ,YAAI,UAAW,QAAO,yBAAyB,SAAS;AAAA,MACzD;AAAA,IACD;AACA,QAAI,oBAAoB;AACvB,UAAI,WAAW,YAAY;AAC1B,eAAO,qBAAqB,WAAW,UAAU;AACjD,cAAM,aAAa,YAAY,QAAQ,UAAU,WAAW,QAAS,UAAU;AAC/E,YAAI,YAAY;AACf,gBAAM,YAAY,YAAY,oBAAoB,WAAW,MAAM;AACnE,cAAI,UAAW,QAAO;AACtB,cAAI,WAAW,OAAQ,QAAO,iBAAM,iBAAiB,WAAW,MAAM;AAAA,QACvE;AAAA,MACD,WAAW,WAAW,QAAQ;AAC7B,eAAO,iBAAiB,WAAW,MAAM;AACzC,gBAAQ,WAAW,QAAQ;AAAA,UAC3B,KAAK;AACJ,mBAAO;AACP;AAAA,UACD,KAAK;AACJ,mBAAO;AACP;AAAA,QACD;AACA,cAAM,aAAa,YAAY,QAAQ,UAAU,WAAW,QAAQ,MAAM;AAC1E,YAAI,YAAY;AACf,gBAAM,YAAY,YAAY,oBAAoB,WAAW,MAAM;AACnE,cAAI,UAAW,QAAO;AACtB,cAAI,WAAW,OAAQ,QAAO,iBAAM,iBAAiB,WAAW,MAAM;AAAA,QACvE;AAAA,MACD;AAEA,UAAI,KAAK,IAAI,MAAM,GAAG;AACrB,cAAM,eAAe,YAAY,eAAe,UAAU;AAC1D,YAAI,cAAc;AACjB,iBAAO,uBAAuB,aAAa,EAAE;AAC7C,iBAAO,IAAI,YAAY,0BAA0B,YAAY,CAAC;AAC9D,cAAI,aAAa,OAAQ,QAAO,iBAAM,iBAAiB,aAAa,MAAM;AAAA,QAC3E;AAEA,cAAM,kBAAkB,YAAY,kBAAkB,UAAU;AAChE,YAAI,iBAAiB;AACpB,iBAAO,qCAAqC,gBAAgB,OAAO,WAAW,KAAK,KAAK,gBAAgB,EAAE,KAAK,EAAE;AACjH,iBAAO,IAAI,YAAY,0BAA0B,eAAe,CAAC;AACjE,cAAI,gBAAgB,OAAQ,QAAO,iBAAM,iBAAiB,gBAAgB,MAAM;AAAA,QACjF;AAEA,cAAM,eAAe,YAAY,eAAe,WAAW,EAAE;AAC7D,YAAI,cAAc;AACjB,iBAAO,0CAA0C,aAAa,OAAO,WAAW,KAAK,KAAK,aAAa,EAAE,KAAK,EAAE;AAChH,iBAAO,IAAI,YAAY,0BAA0B,YAAY,CAAC;AAC9D,cAAI,aAAa,OAAQ,QAAO,iBAAM,iBAAiB,aAAa,MAAM;AAAA,QAC3E;AAAA,MACD;AACA,UAAI,WAAW,YAAY;AAC1B,eAAO,qBAAqB,KAAK,IAAI,MAAM,IAAI,WAAW,aAAa,iBAAiB;AAAA,MACzF;AAAA,IACD;AACA,QAAI,SAAS,aAAa,KAAK,IAAI,QAAQ,IAAI,KAAK,IAAI,MAAM,UAAU,GAAG;AAC1E,YAAM,MAAM,WAAW,IAAI,IAAI,QAAM;AACpC,cAAM,SAAS,CAAC;AAChB,cAAM,cAAc,YAAY,IAAI,IAAI,EAAE;AAC1C,YAAI,KAAK,IAAI,MAAM,KAAK,aAAa;AACpC,qBAAW,cAAc,aAAa;AACrC,kBAAM,EAAE,MAAM,GAAG,IAAI;AACrB,gBAAI,YAAY,YAAY,gBAAgB,IAAI,IAAI,GAAG,QAAQ;AAC/D,gBAAI,OAAO,WAAW,GAAI,cAAa,OAAO,EAAE;AAChD,mBAAO,KAAK,SAAS;AAAA,UACtB;AAAA,QACD;AACA,YAAI,YAAY,WAAW,EAAE,GAAG;AAC/B,cAAI,YAAY;AAChB,cAAI,YAAY,UAAU,IAAI,EAAE,GAAG;AAClC,yBAAa,KAAK,YAAY,UAAU,IAAI,EAAE,CAAC;AAAA,UAChD;AACA,iBAAO,KAAK,SAAS;AAAA,QACtB;AACA,eAAO,6CAA6C,EAAE,qBAAqB,EAAE,UAAU,OAAO,SAAS,KAAK,OAAO,KAAK,IAAI,CAAC,MAAM;AAAA,MACpI,CAAC;AACD,aAAO,YAAY,KAAK,OAAO,GAAG,CAAC,KAAK,IAAI,KAAK,IAAI,CAAC;AACtD,UAAI,KAAK,cAAc,OAAO,WAAW,YAAY;AACpD,eAAO,iBAAM,mBAAmB,WAAW,UAAU,KAAK,WAAW,cAAc;AAAA,MACpF;AAAA,IACD,WAAW,SAAS,YAAY;AAC/B,aAAO,wDAAwD,WAAW,EAAE,qBAAqB,WAAW,EAAE;AAAA,IAC/G;AACA,SAAK,SAAS,cAAc,gBAAgB,aAAa;AACxD,aAAO,uBAAuB,WAAW;AAAA,IAC1C;AACA,QAAI,sBAAsB,cAAc;AACvC,aAAO,uBAAuB,YAAY;AAAA,IAC3C;AAEA,UAAM,YAAY,CAAC;AACnB,eAAW,WAAW,MAAM,MAAM,OAAO,GAAG;AAC3C,UAAI,CAAC,QAAQ,KAAM;AACnB,YAAM,gBAAgB,WAAW,MAAM,QAAQ,KAAK,eAAe,CAAC,WAAW,QAAQ,IAAI,QAAQ,MAAM;AACzG,YAAM,kBAAkB,QAAQ,KAAK,UAAU,WAAW,EAAE,MAAM,MAAM;AACxE,YAAM,aAAa,eAAe,SAAS,cAAc,CAAC,QAAQ,SAAS;AAE3E,WAAK,iBAAiB,oBAAoB,YAAY;AACrD,kBAAU,KAAK,QAAQ,MAAM;AAAA,MAC9B;AAAA,IACD;AACA,QAAI,UAAU,QAAQ;AACrB,aAAO,uBAAuB,UAAU,IAAI,QAAM;AACjD,cAAM,UAAU,GAAG,WAAW,SAAS,IAAI,GAAG,MAAM,CAAC,IAAI;AACzD,eAAO,iBAAM,iBAAiB,EAAE,KAAK,OAAO;AAAA,MAC7C,CAAC,EAAE,KAAK,KAAK,CAAC;AAAA,IACf;AAEA,QAAI,oBAAoB;AACvB,YAAM,cAAc,YAAY,mBAAmB,YAAY,EAAE,UAAU,KAAK,CAAC;AAEjF,UAAI,YAAY,QAAQ;AACvB,eAAO;AAEP,eAAO,YAAY,IAAI,CAAC,CAAC,SAAS,aAAa,MAAM;AACpD,gBAAM,EAAE,MAAM,YAAY,IAAI,cAAc,YAAY,OAAO,IAAI;AACnE,cAAI,aAAa,YAAY,oBAAoB,IAAI,UAAU,GAAG,QAAQ;AAC1E,cAAI,iBAAiB,WAAW,GAAI,eAAc,OAAO,YAAY;AACrE,gBAAM,YAAY,IAAI,KAAK,UAAU,EAAE,QAAQ,IAAI,KAAK,IAAI;AAC5D,gBAAM,eAAe,KAAK,iBAAiB,WAAW,EAAE,WAAW,EAAE,CAAC;AACtE,wBAAc,QAAQ,YAAY;AAElC,cAAI,OAAQ,eAAc,KAAK,MAAM;AACrC,iBAAO,aAAa,OAAO,KAAK,OAAO,SAAS,UAAU;AAAA,QAC3D,CAAC,EAAE,KAAK,IAAI;AAAA,MACb;AAAA,IACD;AACA,SAAK,aAAa,GAAG;AAErB,QAAI,qBAAqB,aAAa;AACrC,YAAM,WAAW,KAAK,MAAM;AAC5B,iBAAW,OAAO,MAAM,MAAM,OAAO,GAAG;AACvC,YAAI,QAAQ,cAAc,IAAI,YAAY,SAAS,QAAQ,GAAG;AAC7D,eAAK,KAAK,MAAM,kBAAkB,IAAI,IAAI,EAAE;AAAA,QAC7C;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EACA,WAAW;AAAA,IACV;AAAA,IACA;AAAA,EACD;AAAA,EAEA,OAAO;AAAA,EACP,iBAAiB;AAAA,EACjB,aAAa,QAAQ,MAAM,MAAM;AAChC,QAAI,CAAC,KAAK,SAAS;AAClB,YAAM,IAAI,KAAK,aAAa,gCAAgC;AAAA,IAC7D;AACA,UAAM,SAAS,KAAK,MAAM;AAC1B,QAAI,CAAC,OAAQ,OAAM,IAAI,KAAK,aAAa,gCAAgC;AACzE,UAAM,aAAa,MAAM,IAAI,MAAM;AACnC,QAAI,MAAM,iBAAM,gCAAgC,MAAM;AACtD,QAAI,CAAC,YAAY,UAAW,QAAO;AAEnC,UAAM,WAAW,MAAM,KAAK,UAAU,MAAM;AAC5C,QAAI,YAAY,OAAO,OAAO,QAAQ,GAAG,MAAM;AAC9C,aAAO,SAAS,OAAO,OAAO,QAAQ,EAAE,IAAI,KAAK,QAAQ;AAAA,IAC1D;AACA,UAAM,QAAQ,MAAM,WAAW,IAAI,MAAM;AACzC,QAAI,OAAO,OAAO,KAAK,GAAG,MAAM;AAC/B,aAAO,gBAAgB,OAAO,OAAO,KAAK,EAAE,IAAI,KAAK,KAAK;AAAA,IAC3D;AACA,QAAI,MAAM,WAAW,eAAe,IAAI,MAAM,GAAG;AAChD,aAAO,yBAAyB,kCAAa,aAAa,MAAM,WAAW,eAAe,IAAI,MAAM,CAAE,CAAC;AAAA,IACxG;AAEA,WAAO;AACP,QAAI,aAAa;AAEjB,UAAM,gBAAgB,YAAY,QAAQ,IAAI,MAAM;AACpD,QAAI,eAAe;AAClB,iBAAW,KAAK,eAAe;AAC9B,cAAM,EAAE,MAAM,YAAY,IAAI,cAAc,OAAO,IAAI;AACvD,YAAI,CAAC,KAAK,IAAI,MAAM,KAAK,CAAC,CAAC,QAAQ,KAAK,EAAE,SAAS,UAAU,EAAG;AAChE,cAAM,aAAc,YAAY,gBAAgB,IAAI,UAAU,GAAG,QAAQ;AACzE,eAAO,GAAG,UAAU,KAAK,YAAY;AACrC,cAAM,YAAY,YAAY,oBAAoB,MAAM;AACxD,YAAI,UAAW,QAAO;AACtB,YAAI,OAAQ,QAAO,iBAAM,iBAAiB,MAAM;AAChD,eAAO;AACP,qBAAa;AAAA,MACd;AAAA,IACD;AAEA,QAAI,CAAC,KAAK,IAAI,MAAM,KAAK,CAAC,YAAY;AACrC,YAAM,kBAAkB,QAAQ,KAAK,IAAI,QAAQ,MAAM,IAAI,KAAK,YAAY,YAAY,UAAU,KAAK,QAAQ,MAAM;AACrH,UAAI,CAAC,iBAAiB;AACrB,cAAM,IAAI,KAAK,aAAa,oCAAoC;AAAA,MACjE;AAAA,IACD;AAEA,UAAM,cAAc,YAAY,mBAAmB,cAAc,EAAE,IAAI,OAAO,CAAS;AAEvF,QAAI,aAAa,QAAQ;AACxB,aAAO;AAEP,aAAO,YAAY,IAAI,CAAC,CAAC,SAAS,aAAa,MAAM;AACpD,cAAM,EAAE,MAAM,YAAY,IAAI,cAAc,YAAY,OAAO,IAAI;AACnE,YAAI,aAAa,YAAY,oBAAoB,IAAI,UAAU,GAAG,QAAQ;AAC1E,YAAI,iBAAiB,OAAQ,eAAc,OAAO,YAAY;AAC9D,cAAM,YAAY,IAAI,KAAK,UAAU,EAAE,QAAQ,IAAI,KAAK,IAAI;AAC5D,cAAM,eAAe,KAAK,iBAAiB,WAAW,EAAE,WAAW,EAAE,CAAC;AACtE,sBAAc,QAAQ,YAAY;AAElC,YAAI,OAAQ,eAAc,KAAK,MAAM;AACrC,eAAO,aAAa,OAAO,KAAK,OAAO,SAAS,UAAU;AAAA,MAC3D,CAAC,EAAE,KAAK,IAAI;AACZ,mBAAa;AAAA,IACd;AACA,QAAI,CAAC,YAAY;AAChB,aAAO;AAAA,IACR;AACA,SAAK,aAAa,GAAG;AAAA,EACtB;AAAA,EACA,kBAAkB;AAAA,IACjB;AAAA,IACA;AAAA,EACD;AAAA,EAEA,MAAM;AAAA,EACN,cAAc,QAAQ,MAAM;AAC3B,SAAK,SAAS,MAAM;AAEpB,UAAM,CAAC,iBAAiB,eAAe,IAAI,OAAO,MAAM,GAAG;AAC3D,QAAI,CAAC,mBAAmB,CAAC,gBAAiB,QAAO,KAAK,MAAM,qBAAqB;AACjF,UAAM,QAAQ,MAAM,IAAI,eAAe;AACvC,UAAM,QAAQ,MAAM,IAAI,eAAe;AACvC,UAAM,UAAU,KAAK,eAAe;AACpC,UAAM,UAAU,KAAK,eAAe;AAEpC,UAAM,UAAU,iBAAiB,SAAS,OAAO,SAAS,OAAO,KAAK,UAAU;AAEhF,QAAI,CAAC,QAAQ,OAAQ,QAAO,KAAK,UAAU,GAAG,eAAe,QAAQ,eAAe,0BAA0B;AAE9G,SAAK,aAAa,iBAAM,8BAA8B,eAAe,QAAQ,eAAe,YAAY,QAAQ,IAAI,QAAM;AACzH,YAAM,UAAU,GAAG,WAAW,SAAS,IAAI,GAAG,MAAM,CAAC,IAAI;AACzD,aAAO,iBAAM,iBAAiB,EAAE,KAAK,OAAO;AAAA,IAC7C,CAAC,EAAE,KAAK,KAAK,CAAC;AAAA,EACf;AAAA,EACA,mBAAmB,CAAC,sGAAsG;AAAA,EAE1H,IAAI;AAAA,EACJ,gBAAgB,QAAQ,MAAM,MAAM;AACnC,WAAO,KAAK,YAAY;AACxB,QAAI,CAAC,KAAK,SAAS;AAClB,YAAM,IAAI,KAAK,aAAa,iDAAiD;AAAA,IAC9E;AACA,WAAO,KAAK,MAAM,0BAA0B,IAAI,EAAE;AAAA,EACnD;AAAA,EACA,qBAAqB,CAAC,iFAAiF;AAAA,EAEvG,KAAK;AAAA,EACL,sBAAsB,QAAQ,MAAM,MAAM;AACzC,SAAK,SAAS,MAAM;AACpB,WAAO,KAAK,MAAM,8BAA8B;AAAA,EACjD;AAAA,EACA,2BAA2B,CAAC,4EAA4E;AAAA,EAExG,MAAM,KAAK,QAAQ,MAAM,MAAM,YAAY,KAAK;AAC/C,QAAI,CAAC,OAAQ,QAAO,KAAK,MAAM,YAAY;AAC3C,SAAK,SAAS,MAAM;AACpB,aAAS,OAAO,KAAK;AACrB,QAAI,CAAC,IAAI,OAAO,MAAM,EAAG,OAAM,IAAI,KAAK,aAAa,yCAAyC;AAC9F,UAAM,EAAE,OAAO,MAAM,SAAS,IAAI,MAAM,QAAQ,OAAO,MAAM;AAC7D,UAAM,eAAe,QAAQ,KAAK,KAAK,MAAM;AAC7C,SAAK,UAAU,MAAM,MAAM,KAAK,QAAQ,OAAO,KAAK,QAAQ,IAAI,YAAY,EAAE;AAAA,EAC/E;AAAA,EACA,UAAU,CAAC,4DAA4D;AAAA,EAEvE,UAAU;AAAA,EACV,aAAa;AAAA,EACb,YAAY;AAAA,EACZ,SAAS,QAAQ,MAAM,MAAM,YAAY,KAAK;AAC7C,QAAI,CAAC,OAAO,KAAK,EAAG,QAAO,KAAK,MAAM,gBAAgB;AACtD,SAAK,SAAS,UAAU;AAExB,UAAM,CAAC,UAAU,MAAM,IAAI,KAAK,SAAS,MAAM;AAC/C,UAAM,aAAa,SAAS,MAAM,IAAI,MAAM,IAAI;AAChD,QAAI,OAAO,eAAe,aAAa;AACtC,YAAM,IAAI,KAAK,aAAa,aAAa,MAAM,mBAAmB;AAAA,IACnE;AACA,UAAM,UAAoB,CAAC;AAC3B,UAAM,QAAS,QAAQ;AAEvB,QAAI,QAAQ,KAAK,QAAQ,GAAG;AAE3B,WAAK,UAAU,mBAAmB,QAAQ,GAAG,aAAa,gBAAgB,WAAW,KAAK,KAAK,EAAE,GAAG;AACpG,iBAAW,WAAW,MAAM,MAAM,OAAO,GAAG;AAC3C,YAAI,QAAQ,SAAS,OAAO,CAAC,MAAO;AACpC,YAAI,CAAC,QAAQ,YAAY,SAAS,QAAQ,EAAG;AAC7C,YAAI,cAAc,CAAC,QAAQ,QAAQ,IAAI,WAAW,MAAM,EAAG;AAC3D,gBAAQ,KAAK,GAAG,QAAQ,YAAY,gBAAgB,cAAc,IAAI,QAAQ,IAAI,EAAE;AAAA,MACrF;AAAA,IACD,WAAW,QAAQ,QAAQ,KAAK,QAAQ,GAAG;AAE1C,WAAK,UAAU,iBAAiB,QAAQ,GAAG,aAAa,gBAAgB,WAAW,KAAK,KAAK,EAAE,GAAG;AAClG,iBAAW,WAAW,MAAM,MAAM,OAAO,GAAG;AAC3C,YAAI,CAAC,QAAQ,IAAI,KAAK,QAAM,OAAO,QAAQ,EAAG;AAC9C,YAAI,cAAc,CAAC,QAAQ,QAAQ,IAAI,WAAW,MAAM,EAAG;AAC3D,gBAAQ,KAAK,GAAG,QAAQ,YAAY,gBAAgB,cAAc,IAAI,QAAQ,IAAI,EAAE;AAAA,MACrF;AAAA,IACD,WAAW,QAAQ,aAAa,QAAQ,GAAG;AAE1C,WAAK,UAAU,qBAAqB,QAAQ,GAAG,aAAa,gBAAgB,WAAW,KAAK,KAAK,EAAE,GAAG;AACtG,YAAM,UAAU,QAAQ,QAAQ,QAAQ;AACxC,iBAAW,WAAW,MAAM,MAAM,OAAO,GAAG;AAC3C,YAAI,QAAQ,SAAS,OAAO,CAAC,MAAO;AACpC,YAAI,CAAC,QAAQ,IAAI,KAAK,QAAM,QAAQ,EAAE,CAAC,EAAG;AAC1C,YAAI,cAAc,CAAC,QAAQ,QAAQ,IAAI,WAAW,MAAM,EAAG;AAC3D,gBAAQ,KAAK,GAAG,QAAQ,YAAY,gBAAgB,cAAc,IAAI,QAAQ,IAAI,EAAE;AAAA,MACrF;AAAA,IACD,OAAO;AACN,YAAM,IAAI,KAAK,aAAa,GAAG,QAAQ,wCAAwC;AAAA,IAChF;AAEA,QAAI,CAAC,QAAQ,QAAQ;AACpB,aAAO,KAAK,UAAU,iBAAiB;AAAA,IACxC;AACA,SAAK,UAAU,QAAQ,MAAM,GAAG,GAAG,EAAE,KAAK,IAAI,CAAC;AAC/C,QAAI,QAAQ,SAAS,OAAO,CAAC,OAAO;AACnC,WAAK,UAAU,gEAAgE;AAAA,IAChF;AAAA,EACD;AAAA,EACA,cAAc,CAAC,kKAAkK;AAAA,EAEjL,gBAAgB,QAAQ,MAAM,MAAM;AACnC,WAAO,KAAK,YAAY;AACxB,QAAI,CAAC,KAAK,IAAI,WAAW,MAAM,IAAI,EAAG,MAAK,SAAS,OAAO,MAAM,IAAI;AACrE,QAAI,CAAC,KAAK,aAAa,IAAI,EAAG;AAC9B,QAAI,CAAC,KAAK,cAAc;AACvB,WAAK,WAAW,iCAAiC;AACjD,aAAO,KAAK,MAAM,uBAAuB;AAAA,IAC1C;AACA,QAAI,CAAC,QAAQ,SAAS,GAAG,EAAG,QAAO,KAAK,MAAM,uBAAuB;AACrE,UAAM,EAAE,YAAY,OAAO,KAAK,IAAI,KAAK,YAAY,MAAM;AAC3D,UAAM,EAAE,YAAY,OAAO,MAAM,MAAM,IAAI,KAAK,YAAY,IAAI;AAChE,QAAI,UAAU,SAAS,MAAO,QAAO,KAAK,MAAM,uBAAuB;AACvE,QAAI,EAAE,MAAM,MAAM,KAAK,UAAU,EAAE,MAAM,MAAM,KAAK,QAAQ;AAC3D,YAAM,IAAI,KAAK,aAAa,kCAAkC;AAAA,IAC/D;AACA,UAAM,QAAQ,QAAQ,WAAW,OAAO,MAAM,IAAI,MAAM,EAAE;AAE1D,QAAI,CAAC,OAAO;AACX,aAAO,KAAK,aAAa,iBAAM,OAAO,MAAM,IAAI,QAAQ,MAAM,IAAI,kCAAkC;AAAA,IACrG;AACA,UAAM,CAAC,MAAM,EAAE,IAAI,MAAM,OAAO,MAAM,OAAO,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,KAAK;AAC3E,SAAK,aAAa,iBAAM,OAAO,KAAK,IAAI,mBAAmB,GAAG,IAAI,OAAO,IAAI,QAAQ,IAAI,MAAM,MAAM,EAAE,IAAI,GAAG;AAAA,EAC/G;AAAA,EACA,qBAAqB,CAAC,gHAAgH;AAAA;AAAA;AAAA;AAAA,EAMtI,UAAU;AAAA,EACV,OAAO,QAAQ,MAAM,MAAM;AAC1B,QAAI,CAAC,MAAM;AACV,WAAK,WAAW,6FAA6F,KAAK,GAAG,YAAY,KAAK,GAAG,IAAI,MAAM,GAAG;AAAA,IACvJ;AACA,SAAK,WAAW,uEAAuE;AAAA,EACxF;AAAA,EACA,YAAY,CAAC,2CAA2C;AAAA;AAAA;AAAA;AAAA,EAMxD,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,KAAK;AAAA,EACL,SAAS;AAAA,EACT,KAAK,QAAQ,MAAM,MAAM,YAAY,KAAK;AACzC,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,aAAS,OAAO,KAAK;AACrB,UAAM,MAAM,SAAS,IAAI,OAAO,EAAE,CAAC;AACnC,QAAI,IAAK,WAAU,QAAQ,GAAG;AAE9B,UAAM,EAAE,KAAK,QAAQ,QAAQ,IAAI,KAAK,YAAY,QAAQ,MAAM,IAAI;AAEpE,QAAI,SAAS;AACb,aAAS,QAAQ,KAAK,GAAG;AACzB,UAAM,WAAW,KAAK,MAAM;AAC5B,QAAI,CAAC,SAAU,QAAO,KAAK,MAAM,YAAY;AAC7C,UAAM,YAAY,SAAS,MAAM;AACjC,QAAI,CAAC,MAAM,SAAS,KAAK,GAAG,SAAS,OAAO,QAAQ;AACnD,iBAAW,WAAW,IAAI,QAAQ,IAAI,GAAG;AACxC,YAAI,QAAQ,QAAQ,WAAW;AAC9B,mBAAS,QAAQ;AACjB;AAAA,QACD;AAAA,MACD;AAAA,IACD;AACA,UAAM,aAAa,IAAI,WAAW,MAAM;AACxC,UAAM,cAAe,IAAI,WAAW,IAAI,KAAK,QAAQ;AACrD,QAAI,CAAC,YAAY,QAAQ;AACxB,YAAM,IAAI,KAAK,aAAa,IAAI,MAAM,gEAAkE,IAAI,MAAM,IAAI,MAAM,WAAW,IAAI,GAAG,KAAK,EAAE,0BAA0B;AAAA,IAChL;AACA,QAAI,WAAW,SAAS,GAAG;AAC1B,YAAM,IAAI,KAAK,aAAa,IAAI,MAAM,uDAAuD,WAAW,IAAI,OAAK,EAAE,IAAI,EAAE,KAAK,IAAI,CAAC,EAAE;AAAA,IACtI;AAEA,eAAW,CAAC,GAAG,SAAS,KAAK,WAAW,QAAQ,GAAG;AAClD,UAAI,UAAU,aAAa,CAAC,GAAG;AAC9B,iBAAS,IAAI,MAAM,uBAAuB,IAAI,MAAM,IAAI,MAAM,WAAW,IAAI,GAAG,KAAK,EAAE,sBAAsB,WAAW,WAAW,IAAI,KAAK,IAAI;AAAA;AAAA,MACjJ;AACA,UAAI,UAAmC,CAAC;AACxC,cAAQ,UAAU,YAAY;AAAA,QAC9B,KAAK;AACJ,gBAAM,SAAS,IAAI,QAAQ,IAAI,UAAU,IAAI;AAC7C,oBAAU,GAAG,OAAO,IAAI;AACxB,cAAI,OAAO,MAAM;AAChB,sBAAU,QAAQ,IAAI,MAAM,MAAM,OAAO,IAAI,CAAC,UAAU,IAAI,MAAM,MAAM,OAAO,KAAM,CAAC;AAAA,UACvF,OAAO;AACN,sBAAU;AAAA,UACX;AACA,iBAAO,KAAK,UAAU,MAAM;AAAA,QAC7B,KAAK;AACJ,cAAI,UAAU,IAAI,QAAQ,IAAI,UAAU,IAAI;AAC5C,cAAI,QAAQ,iBAAiB;AAC5B,sBAAU,OAAO,gBAAgB,KAAK,EAAE,KAAK,eAAe,iBAAM,eAAe,KAAK,GAAa,OAAO,KAAK;AAAA,UAChH;AACA,cAAI,cAAc,MAAM,SAAS;AACjC,cAAI,CAAC,eAAe,MAAM,QAAQ;AACjC,gBAAI,KAAK,OAAO,OAAO,SAAS,SAAS,KAAK,KAAK,OAAO,OAAO,SAAS,KAAK,GAAG;AACjF,4BAAc;AAAA,YACf,WAAW,KAAK,OAAO,OAAO,SAAS,aAAa,GAAG;AACtD,4BAAc;AAAA,YACf;AAAA,UACD;AACA,cAAI,CAAC,YAAa,eAAc;AAChC,gBAAM,gBAAgB,gBAAgB,UAAU,QAAQ,OACvD,gBAAgB,kBAAkB,QAAQ,cAC1C,gBAAgB,uBAAuB,QAAQ,aAC/C,QAAQ,OAAO,IAAI,OAAO,QAAQ,GAAG,IAAI,QAAQ;AAClD,oBAAU,QAAQ,KAAK,mBAAmB,SAAS,IAAI,KAAK,aAAa,CAAC;AAAA;AAC1E,cAAI,aAAa;AAChB,gBAAI,YAAY;AAChB,gBAAI,QAAQ,YAAY,KAAM;AAC7B,0BAAY;AAAA,YACb,WAAW,QAAQ,YAAY,KAAM;AACpC,0BAAY;AAAA,YACb,WAAW,QAAQ,YAAY,KAAK;AACnC,0BAAY;AAAA,YACb,WAAW,QAAQ,YAAY,KAAK;AACnC,0BAAY;AAAA,YACb,WAAW,QAAQ,YAAY,KAAK;AACnC,0BAAY;AAAA,YACb;AACA,sBAAU;AAAA,cACT,QAAQ,OAAO,QAAQ,GAAG;AAAA,cAC1B,KAAK,OAAO,QAAQ,GAAG,KAAK;AAAA,cAC5B,QAAQ,GAAG,QAAQ,OAAO;AAAA,YAC3B;AACA,oBAAQ,QAAQ,IAAI,GAAG,QAAQ,WAAW,EAAE,YAAY,SAAS;AACjE,kBAAM,WAAW,QAAQ,iBAAiB,IAAI,QAAQ,IAAI,QAAQ,WAAW,EAAE;AAC/E,gBAAI,YAAY,IAAI,QAAQ,EAAG,SAAQ,YAAY,IAAI;AACvD,gBAAI,IAAI,QAAQ,EAAG,SAAQ,WAAW,IAAI,IAAK,QAAQ,UAAU,MAAM,MAAO,KAAK,QAAQ,CAAC,CAAC;AAC7F,gBAAI,QAAQ,SAAS,IAAI,OAAO,EAAG,SAAQ,YAAY,IAAI,QAAQ;AACnE,gBAAI,QAAQ,aAAa,IAAI,OAAO,EAAG,SAAQ,cAAc,IAAI,QAAQ,UAAU,KAAK,IAAI;AAC5F,kBAAM,OAAiB,CAAC;AACxB,uBAAW,WAAW,QAAQ,MAAM;AACnC,oBAAM,MAAM,IAAI,QAAQ,IAAI,OAAO;AACnC,kBAAI,IAAI,OAAO,IAAI,KAAK;AACvB,sBAAM,YAAY,IAAI,eAAe,IAAI,IAAI,YAAY,KAAK;AAC9D,wBAAQ,IAAI,SAAS;AAAA,kBACrB,KAAK;AACJ,yBAAK,KAAK,GAAG,IAAI,IAAI,aAAa,SAAS,GAAG;AAC9C;AAAA,kBACD,KAAK;AACJ,yBAAK,KAAK,GAAG,IAAI,IAAI,kCAAkC,SAAS,GAAG;AACnE;AAAA,kBACD,KAAK;AACJ,yBAAK,KAAK,GAAG,IAAI,IAAI,sBAAsB,IAAI,OAAO,GAAG,SAAS,GAAG;AACrE;AAAA,kBACD,KAAK;AACJ,yBAAK,KAAK,GAAG,IAAI,IAAI,KAAK,IAAI,OAAO,GAAG;AACxC;AAAA,kBACD,KAAK;AACJ,yBAAK,KAAK,GAAG,IAAI,IAAI,mBAAmB,IAAI,OAAO,GAAG,SAAS,GAAG;AAClE;AAAA,kBACD,KAAK;AACJ,yBAAK,KAAK,GAAG,IAAI,IAAI,KAAK,IAAI,YAAY,GAAG;AAC7C;AAAA,kBACD,KAAK;AACJ,yBAAK,KAAK,GAAG,IAAI,IAAI,UAAU,IAAI,UAAU,YAAY,IAAI,OAAO,KAAK,SAAS,GAAG;AACrF;AAAA,kBACD;AACC,yBAAK,KAAK,GAAG,IAAI,IAAI,KAAK,IAAI,QAAQ,GAAG,SAAS,GAAG;AAAA,gBACtD;AAAA,cACD;AAAA,YACD;AACA,gBAAI,QAAQ,OAAO;AAClB,sBAAQ,eAAe,IAAI,QAAQ;AAAA,YACpC;AACA,gBAAI,CAAC,KAAK,QAAQ;AACjB,sBAAQ,8CAA8C,IAAI;AAAA,YAC3D,OAAO;AACN,sBAAQ,WAAW,IAAI,KAAK,KAAK,IAAI;AAAA,YACtC;AAAA,UACD;AACA;AAAA,QACD,KAAK;AACJ,gBAAM,OAAO,IAAI,MAAM,IAAI,UAAU,IAAI;AACzC,oBAAU,QAAQ,KAAK,gBAAgB,IAAI,CAAC;AAAA;AAC5C,cAAI,aAAa;AAChB,sBAAU;AAAA,cACT,KAAK,OAAO,KAAK,GAAG;AAAA,YACrB;AAEA,gBAAI,IAAI,OAAO,GAAG;AACjB,kBAAI,KAAK,OAAO;AACf,wBAAQ,kBAAkB,IAAI,OAAO,KAAK,MAAM,SAAS;AACzD,oBAAI,KAAK,MAAM,OAAQ,SAAQ,cAAc,IAAI,KAAK,MAAM;AAC5D,oBAAI,KAAK,MAAM,eAAgB,SAAQ,cAAc,IAAI,KAAK,MAAM;AACpE,oBAAI,KAAK,QAAS,SAAQ,cAAc,IAAI;AAC5C,oBAAI,KAAK,OAAO,YAAa,SAAQ,cAAc,IAAI;AACvD,oBAAI,KAAK,OAAO,cAAc;AAC7B,wBAAM,cAAc;AACpB,0BAAQ,cAAc,IAAI;AAAA,gBAC3B;AAAA,cACD,OAAO;AACN,wBAAQ,OAAO,IAAI;AAAA,cACpB;AAAA,YACD;AACA,gBAAI,KAAK,eAAe,IAAI,OAAO,GAAG;AACrC,sBAAQ,mBAAmB,IAAI,KAAK,YAAY;AAChD,sBAAQ,yBAAyB,IAAI,OAAO,KAAK,YAAY,SAAS;AAAA,YACvE;AACA,gBAAI,KAAK,eAAe;AACvB,sBAAQ,uBAAuB,IAAI,GAAG,EAAE,IAAI;AAAA,YAC7C;AAAA,UACD;AACA;AAAA,QACD,KAAK;AACJ,gBAAM,OAAO,IAAI,MAAM,IAAI,UAAU,IAAI;AACzC,oBAAU,QAAQ,KAAK,gBAAgB,IAAI,CAAC;AAAA;AAC5C,cAAI,aAAa;AAChB,sBAAU;AAAA,cACT,UAAU,OAAO,KAAK,QAAQ;AAAA,cAC9B,KAAK,OAAO,KAAK,GAAG,KAAK;AAAA,YAC1B;AAEA,kBAAM,eAAgB,KAAK,kBAAkB,UAAU,IAAI,OAAO,KAChE,KAAK,kBAAkB,gBAAgB,IAAI,QAAQ;AACrD,gBAAI,aAAc,SAAQ,yBAAyB,IAAI;AACvD,gBAAI,KAAK,aAAa,KAAK,eAAe,KAAK,cAAe,SAAQ,iCAAiC,IAAI;AAC3G,gBAAI,KAAK,MAAM,SAAS,KAAK,IAAI,OAAO,EAAG,SAAQ,kBAAkB,IAAI;AACzE,gBAAI,KAAK,MAAM,OAAO,KAAK,IAAI,OAAO,EAAG,SAAQ,gBAAgB,IAAI;AACrE,gBAAI,KAAK,MAAM,QAAQ,KAAK,IAAI,OAAO,EAAG,SAAQ,iBAAiB,IAAI;AACvE,gBAAI,KAAK,MAAM,OAAO,KAAK,IAAI,OAAO,EAAG,SAAQ,gBAAgB,IAAI;AACrE,gBAAI,CAAC,KAAK,MAAM,SAAS,KAAK,KAAK,WAAW,OAAQ,SAAQ,2BAA2B,IAAI;AAC7F,gBAAI,KAAK,MAAM,WAAW,EAAG,SAAQ,+BAA+B,IAAI;AACxE,gBAAI,KAAK,MAAM,SAAS,EAAG,SAAQ,qBAAqB,IAAI;AAC5D,gBAAI,KAAK,MAAM,MAAM,KAAK,IAAI,OAAO,EAAG,SAAQ,eAAe,IAAI;AACnE,gBAAI,KAAK,MAAM,OAAO,KAAK,IAAI,OAAO,EAAG,SAAQ,gBAAgB,IAAI;AACrE,gBAAI,KAAK,MAAM,QAAQ,KAAK,IAAI,OAAO,EAAG,SAAQ,iBAAiB,IAAI;AACvE,gBAAI,KAAK,MAAM,aAAa,KAAK,IAAI,OAAO,EAAG,SAAQ,qBAAqB,IAAI;AAChF,gBAAI,KAAK,MAAM,QAAQ,EAAG,SAAQ,wBAAwB,IAAI;AAC9D,gBAAI,KAAK,MAAM,UAAU,EAAG,SAAQ,4BAA4B,IAAI;AACpE,gBAAI,KAAK,MAAM,SAAS,KAAK,IAAI,OAAO,EAAG,SAAQ,gCAAgC,IAAI;AACvF,gBAAI,KAAK,MAAM,OAAO,KAAK,IAAI,OAAO,EAAG,SAAQ,qBAAqB,IAAI;AAC1E,gBAAI,KAAK,MAAM,SAAS,KAAK,IAAI,OAAO,EAAG,SAAQ,uBAAuB,IAAI;AAC9E,gBAAI,KAAK,MAAM,MAAM,KAAK,IAAI,OAAO,EAAG,SAAQ,oBAAoB,IAAI;AAExE,gBAAI,IAAI,OAAO,GAAG;AACjB,kBAAI,KAAK,OAAO,KAAK,KAAK,OAAO;AAAA,cAEjC,WAAW,KAAK,OAAO,WAAW;AACjC,wBAAQ,SAAS,IAAI,OAAO,KAAK,MAAM,SAAS;AAAA,cACjD,WAAW,KAAK,OAAO,QAAQ;AAC9B,sBAAM,WAAoC;AAAA,kBACzC,oBAAoB;AAAA,kBACpB,OAAO;AAAA,kBACP,MAAM;AAAA,kBACN,OAAO;AAAA,kBACP,UAAU;AAAA,kBACV,iBAAiB;AAAA,gBAClB;AACA,wBAAQ,UAAU,IAAI,SAAS,KAAK,MAAM,MAAM;AAAA,cACjD,WAAW,KAAK,OAAO,OAAO;AAC7B,wBAAQ,UAAU,IAAI;AACtB,sBAAM,QAAQ,KAAK,MAAM;AACzB,sBAAM,QAAoC;AAAA,kBACzC,KAAK;AAAA,kBAAU,KAAK;AAAA,kBAAW,KAAK;AAAA,kBAAW,KAAK;AAAA,kBAAW,KAAK;AAAA,kBAAS,UAAU;AAAA,kBAAY,SAAS;AAAA,gBAC7G;AACA,oBAAI;AACJ,qBAAK,KAAK,OAAO;AAChB,0BAAQ,UAAU,KAAK,IAAI,MAAM,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC;AAAA,gBACjD;AAAA,cACD,WAAW,KAAK,OAAO,OAAO,KAAK,QAAQ,UAAU;AACpD,wBAAQ,iBAAiB,IAAI;AAC7B,sBAAM,WAAW,IAAI,MAAM,IAAI,KAAK,GAAG;AACvC,wBAAQ,WAAW,IAAI,SAAS;AAChC,oBAAI,SAAS,UAAU;AACtB,0BAAQ,MAAM,IAAI,SAAS,SAAS,KAAK,IAAI;AAC7C,0BAAQ,eAAe,IAAI,IAAI,MAAM,IAAI,KAAK,GAAG,EAAE;AAAA,gBACpD;AAAA,cACD,OAAO;AACN,wBAAQ,UAAU,IAAI;AAAA,cACvB;AAAA,YACD;AAEA,gBAAI,KAAK,OAAO;AACf,sBAAQ,mBAAmB,IAAI;AAC/B,kBAAI,OAAO,KAAK,UAAU,SAAU,SAAQ,MAAM,IAAI,GAAG,KAAK,KAAK;AAAA,YACpE,WAAW,IAAI,QAAQ,KAAK,KAAK,SAAS,WAAW;AACpD,sBAAQ,eAAe,IAAI,OAAO,KAAK,QAAQ,SAAS;AAAA,YACzD;AAEA,kBAAM,cAAuC;AAAA,cAC5C,QAAQ;AAAA,cACR,MAAM;AAAA,cACN,cAAc;AAAA,cACd,oBAAoB;AAAA,cACpB,aAAa;AAAA,cACb,iBAAiB;AAAA,cACjB,SAAS;AAAA,cACT,UAAU;AAAA,cACV,UAAU;AAAA,cACV,aAAa;AAAA,cACb,KAAK;AAAA,cACL,KAAK;AAAA,cACL,UAAU;AAAA,cACV,cAAc;AAAA,cACd,QAAQ;AAAA,YACT;AACA,oBAAQ,QAAQ,IAAI,YAAY,KAAK,MAAM,KAAK;AAEhD,gBAAI,KAAK,OAAO,YAAY,IAAI,OAAO,GAAG;AACzC,sBAAQ,oBAAoB,OAAO,OAAO,GAAG,+CAA+C,IAAI;AAAA,YACjG;AACA,gBAAI,KAAK,OAAO,cAAc;AAC7B,sBAAQ,oBAAoB,OAAO,OAAO,GAAG,2CAA2C,IAAI;AAAA,YAC7F;AACA,gBAAI,KAAK,kBAAkB,gBAAgB;AAC1C,sBAAQ,uBAAuB,IAAI,GAAG,EAAE,IAAI;AAAA,YAC7C;AAAA,UACD;AACA;AAAA,QACD,KAAK;AACJ,gBAAM,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI;AAChD,oBAAU,QAAQ,KAAK,mBAAmB,OAAO,CAAC;AAAA;AAClD,cAAI,aAAa;AAChB,sBAAU;AAAA,cACT,KAAK,OAAO,QAAQ,GAAG,KAAK;AAAA,YAC7B;AACA,gBAAI,QAAQ,MAAM,cAAc,EAAG,SAAQ,sCAAsC,IAAI;AACrF,gBAAI,QAAQ,MAAM,WAAW,EAAG,SAAQ,kCAAkC,IAAI;AAAA,UAC/E;AACA;AAAA,QACD;AACC,gBAAM,IAAI,MAAM,yBAAyB;AAAA,MAC1C;AAEA,UAAI,aAAa;AAChB,kBAAU,uBAAuB,OAAO,QAAQ,OAAO,EAAE,IAAI,CAAC,CAAC,QAAQ,KAAK,MAC3E,UAAU,KAAK,SAAS,yBAAyB,MAAM,YAAY,KAAK,EACxE,EAAE,KAAK,qBAAqB,CAAC;AAAA;AAAA,MAC/B;AAAA,IACD;AACA,SAAK,UAAU,MAAM;AAAA,EACtB;AAAA,EACA,UAAU;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAAA,EAEA,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,QAAQ,QAAQ;AACf,QAAI,CAAC,OAAQ,QAAO,KAAK,MAAM,eAAe;AAC9C,SAAK,IAAI,MAAM;AAAA,EAChB;AAAA,EACA,cAAc;AACb,SAAK;AAAA,MACJ;AAAA,IAKD;AAAA,EACD;AAAA,EAEA,YAAY;AAAA,EACZ,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,SAAS,QAAQ,MAAM,MAAM;AAC5B,QAAI,CAAC,OAAQ,QAAO,KAAK,MAAM,gBAAgB;AAC/C,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,UAAM,EAAE,QAAQ,KAAK,QAAQ,IAAI,KAAK,YAAY,OAAO,MAAM,MAAM,EAAE,IAAI,IAAI,CAAC;AAEhF,QAAI,YAAY;AAChB,QAAI,UAAU,IAAI,QAAQ,aAAa,MAAM,EAAE,IAAI,YAAY,GAAG;AACjE,kBAAY;AAAA,IACb,WAAW,QAAQ,QAAQ,SAAS,CAAC,MAAM,WAAW;AACrD,kBAAY;AACZ,cAAQ,IAAI;AAAA,IACb;AAEA,UAAM,iBAAiB;AACvB,QAAI,iBAAiB;AACrB,QAAI,UAAU;AACd,QAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ,CAAC,CAAC;AACxC,QAAI,QAAQ,IAAI,MAAM,IAAI,QAAQ,CAAC,CAAC;AACpC,QAAI,QAAQ,IAAI,MAAM,IAAI,QAAQ,CAAC,CAAC;AACpC,QAAI,QAAQ,IAAI,MAAM,IAAI,QAAQ,CAAC,CAAC;AACpC,QAAI,QAAQ,SAAS,MAAM,CAAC,QAAQ,UAAU,MAAM,SAAS,MAAM,CAAC,MAAM,QAAQ;AACjF,YAAM,oBAAoB,IAAI,WAAW,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC;AAClE,YAAM,uBAAuB,IAAI,WAAW,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC;AACnE,UAAI,qBAAqB,kBAAkB,CAAC,EAAE,SAAS,IAAI;AAC1D,gBAAQ,IAAI,MAAM,IAAI,kBAAkB,CAAC,EAAE,IAAI;AAC/C,yBAAiB;AAAA,MAClB,WAAW,wBAAwB,qBAAqB,CAAC,EAAE,SAAS,IAAI;AACvE,kBAAU,IAAI,QAAQ,IAAI,qBAAqB,CAAC,EAAE,IAAI;AACtD,yBAAiB;AAAA,MAClB,OAAO;AACN,eAAO,KAAK,aAAa,iBAAM,OAAO,cAAc,sCAAsC,IAAI,MAAM,IAAI,MAAM,WAAW,IAAI,GAAG,KAAK,EAAE,GAAG;AAAA,MAC3I;AAAA,IACD;AAEA,QAAI,MAAM,SAAS,MAAM,CAAC,MAAM,QAAQ;AACvC,YAAM,gBAAgB,IAAI,WAAW,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC;AAC9D,UAAI,iBAAiB,cAAc,CAAC,EAAE,SAAS,IAAI;AAClD,gBAAQ,IAAI,MAAM,IAAI,cAAc,CAAC,EAAE,IAAI;AAC3C,yBAAiB;AAAA,MAClB,OAAO;AACN,eAAO,KAAK,aAAa,iBAAM,OAAO,cAAc,sCAAsC,IAAI,MAAM,IAAI,MAAM,WAAW,IAAI,GAAG,KAAK,EAAE,GAAG;AAAA,MAC3I;AAAA,IACD;AAEA,QAAI,MAAM,SAAS,MAAM,CAAC,MAAM,QAAQ;AACvC,YAAM,gBAAgB,IAAI,WAAW,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC;AAC9D,UAAI,iBAAiB,cAAc,CAAC,EAAE,SAAS,IAAI;AAClD,gBAAQ,IAAI,MAAM,IAAI,cAAc,CAAC,EAAE,IAAI;AAC3C,yBAAiB;AAAA,MAClB,OAAO;AACN,eAAO,KAAK,aAAa,iBAAM,OAAO,cAAc,sCAAsC,IAAI,MAAM,IAAI,MAAM,WAAW,IAAI,GAAG,KAAK,EAAE,GAAG;AAAA,MAC3I;AAAA,IACD;AAEA,UAAM,QAAQ,CAAC;AACf,QAAI,QAAQ,QAAQ;AACnB,iBAAW,QAAQ,QAAQ,OAAO;AACjC,cAAM,KAAK,IAAI;AAAA,MAChB;AACA,eAAS,QAAQ;AACjB,gBAAU;AAAA,IACX,WAAW,MAAM,QAAQ;AACxB,YAAM,KAAK,MAAM,IAAI;AACrB,eAAS,MAAM;AACf,gBAAU;AAAA,IACX;AAEA,QAAI,oBAAoB;AACxB,QAAI,oBAAoB;AACxB,QAAI,MAAM,SAAS,EAAE,YAAY,EAAE,SAAS,MAAM,KAAK,YAAY,CAAC,GAAG;AACtE,0BAAoB;AAAA,IACrB;AACA,QAAI,MAAM,SAAS,EAAE,YAAY,EAAE,SAAS,MAAM,KAAK,YAAY,CAAC,GAAG;AACtE,0BAAoB;AAAA,IACrB;AAEA,QAAI,SAAS;AACZ,YAAM,eAAe,CAAC;AACtB,mBAAa,KAAK,MAAM;AACxB,UAAI,MAAM,UAAU,CAAC,mBAAmB;AACvC,cAAM,KAAK,MAAM,IAAI;AACrB,qBAAa,KAAK,MAAM,IAAI;AAAA,MAC7B;AACA,UAAI,MAAM,UAAU,CAAC,mBAAmB;AACvC,cAAM,KAAK,MAAM,IAAI;AACrB,qBAAa,KAAK,MAAM,IAAI;AAAA,MAC7B;AACA,eAAS,aAAa,KAAK,GAAG;AAAA,IAC/B;AAEA,QAAI,gBAAgB;AACnB,WAAK,UAAU,gCAAkC,cAAc,cAAc,IAAI,MAAM,IAAI,MAAM,WAAW,IAAI,GAAG,KAAK,EAAE,oBAAoB,MAAM,YAAY;AAAA,IACjK;AACA,UAAM,aAAa,CAAC;AACpB,UAAM,cAAc,CAAC;AACrB,UAAM,aAAa,CAAC;AACpB,eAAW,QAAQ,IAAI,MAAM,MAAM,GAAG;AACrC,YAAM,YAAY,IAAI,YAAY,MAAM,KAAK;AAC7C,UAAI,aAAa,WAAW;AAC3B,YAAI,UAAU,CAAC,aAAa,YAAY,IAAI;AAC5C,oBAAY,YAAY,KAAK,KAAK,IAAI,iBAAiB,MAAM,KAAK;AAClE,gBAAQ,SAAS;AAAA,UACjB,KAAK;AACJ,uBAAW,KAAK,IAAI;AACpB;AAAA,UACD,KAAK;AACJ,uBAAW,KAAK,MAAM,IAAI,MAAM;AAChC;AAAA,UACD,KAAK;AACJ,uBAAW,KAAK,SAAS,IAAI,UAAU;AACvC;AAAA,UACD,KAAK;AACJ,wBAAY,KAAK,IAAI;AACrB;AAAA,UACD,KAAK;AACJ,wBAAY,KAAK,MAAM,IAAI,MAAM;AACjC;AAAA,UACD,KAAK;AACJ,wBAAY,KAAK,SAAS,IAAI,UAAU;AACxC;AAAA,QACD;AAAA,MACD,OAAO;AACN,mBAAW,KAAK,IAAI;AAAA,MACrB;AAAA,IACD;AAEA,UAAM,WAAoC;AAAA,MACzC,KAAK;AAAA,MACL,KAAK;AAAA,MACL,MAAM;AAAA,MACN,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,WAAW;AAAA,MACX,KAAK;AAAA,MACL,SAAS;AAAA,IACV;AACA,eAAW,UAAU,UAAU;AAC9B,UAAI,CAAC,IAAI,YAAY,QAAQ,KAAK,GAAG;AACpC,mBAAW,KAAK,SAAS,MAAM,CAAC;AAAA,MACjC;AAAA,IACD;AAEA,UAAM,SAAS,CAAC;AAChB,WAAO,KAAK,GAAG,QAAQ,SAAS,GAAG,MAAM,2BAA2B,GAAG,MAAM,GAAG,EAAE;AAClF,WAAO,KAAK,wDAAwD,WAAW,KAAK,IAAI,KAAK,gCAAgC,EAAE;AAC/H,WAAO,KAAK,2DAA2D,YAAY,KAAK,IAAI,KAAK,gCAAgC,EAAE;AACnI,WAAO,KAAK,0DAA0D,WAAW,KAAK,IAAI,KAAK,gCAAgC,EAAE;AACjI,SAAK,aAAa,OAAO,KAAK,QAAQ,CAAC;AAAA,EACxC;AAAA,EACA,cAAc;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAAA,EAEA,KAAK;AAAA,EACL,MAAM;AAAA,EACN,SAAS;AAAA,EACT,cAAc,QAAQ,MAAM,MAAM;AACjC,UAAM,EAAE,KAAK,QAAQ,IAAI,KAAK,YAAY,OAAO,MAAM,MAAM,CAAC;AAC9D,QAAI,QAAQ,WAAW,EAAG,OAAM,IAAI,KAAK,aAAa,uDAAuD;AAE7G,QAAI,gBAAgB,CAAC,SAAS,SAAS,SAAS;AAChD,UAAM,gBAAgB,CAAC,SAAS,OAAO;AACvC,UAAM,gBAAgB,CAAC,SAAS,SAAS;AACzC,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI;AAEJ,aAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC3B,UAAI;AACJ,iBAAW,KAAK,eAAe;AAC9B,oBAAa,IAAY,CAAC,EAAE,IAAI,QAAQ,CAAC,CAAC;AAC1C,YAAI,UAAU,QAAQ;AACrB,mBAAS;AACT;AAAA,QACD;AAAA,MACD;AACA,UAAI,CAAC,UAAU,OAAQ,QAAO,KAAK,MAAM,qBAAqB;AAC9D,UAAI,CAAC,UAAU,cAAc,SAAS,MAAM,GAAG;AAC9C,YAAI,UAAU,MAAM;AACnB,mBAAS;AACT,oBAAU,UAAU;AAAA,QACrB,OAAO;AACN,mBAAS,UAAU;AACnB,oBAAU,UAAU;AAAA,QACrB;AACA,wBAAgB;AAAA,MACjB,WAAW,CAAC,YAAY,cAAc,SAAS,MAAM,GAAG;AACvD,YAAI,UAAU,OAAO;AACpB,qBAAW;AACX,oBAAU,GAAG,UAAU,IAAI;AAAA,QAC5B,OAAO;AACN,qBAAW,EAAE,OAAO,CAAC,UAAU,IAAI,EAAE;AACrC,oBAAU,UAAU;AAAA,QACrB;AACA,wBAAgB;AAAA,MACjB;AAAA,IACD;AAEA,QAAI,CAAC,KAAK,aAAa,EAAG;AAE1B,QAAI,SAAS;AACb,QAAI,IAAI,YAAY,QAAQ,QAAQ,KACnC,OAAO,mBAAmB,OAAO,mBAAmB,QAAQ,OAAO,eAAe,OAAO,IAAI,IAAI;AACjG,UAAI,eAAe;AACnB,UAAI,OAAO,eAAe,UAAU,OAAO,aAAa,aAAa,OAAO,aAAa,OAAO,oBAAoB;AACnH,mBAAW,QAAQ,SAAS,OAAO;AAClC,gBAAM,UAAU,IAAI,iBAAiB,QAAQ,IAAI;AACjD,gBAAM,UAAU,OAAO,iBAAiB,KAAK,EAAE,KAAK,IAAI,GAAa,SAAS,MAAM,MAAM,MAAM;AAChG,0BAAgB,OAAO,YAAY,WAAW,UAAU;AAAA,QACzD;AAAA,MACD;AACA,eAAS,KAAK;AAAA,IACf;AAEA,UAAM,oBAAoB,OAAO,OAAO,oBAAoB,SAAS,MAAM,SAAS,QAAQ;AAC5F,UAAM,iBAAiB,oBAAoB,0EAA0E;AAErH,SAAK,aAAa,GAAG,OAAO,OAAO,MAAM,uBAAuB,OAAO,IAAI,cAAc,EAAE;AAAA,EAC5F;AAAA,EACA,mBAAmB;AAAA,IAClB;AAAA,IACA;AAAA,EACD;AAAA,EAEA,OAAO;AAAA,EACP,SAAS,QAAQ,MAAM,MAAM;AAC5B,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,QAAI,CAAC,OAAQ,QAAO,KAAK,MAAM,gBAAgB;AAE/C,UAAM,EAAE,KAAK,QAAQ,IAAI,KAAK,YAAY,OAAO,MAAM,OAAO,CAAC;AAC/D,UAAM,UAA6B,CAAC;AACpC,QAAI,YAAY;AAChB,UAAM,eAAwC,CAAC;AAC/C,QAAI,oBAAoB;AAExB,eAAW,QAAQ,IAAI,MAAM,MAAM,GAAG;AAErC,mBAAa,IAAI,IAAI;AAAA,IACtB;AAEA,aAAS,OAAO,SAAS;AACxB,YAAM,KAAK,GAAG;AAGd,UAAI,QAAQ,IAAI,WAAY;AAG5B,UAAI,QAAQ,WAAW,QAAQ,OAAO;AACrC,YAAI,KAAK,aAAc,QAAO,KAAK,aAAa,qCAAqC;AACrF,oBAAY;AACZ;AAAA,MACD;AAGA,YAAM,UAAU,IAAI,OAAO,CAAC,EAAE,YAAY,IAAI,IAAI,MAAM,CAAC;AACzD,UAAI;AACJ,UAAI,IAAI,MAAM,OAAO,OAAO,GAAG;AAC9B,gBAAQ,KAAK,OAAO;AACpB,mBAAW,QAAQ,cAAc;AAChC,cAAI,CAAC,IAAI,YAAY,SAAS,IAAI,EAAG;AACrC,gBAAM,IAAI,iBAAiB,SAAS,IAAI;AACxC,cAAI,MAAM,aAAa,IAAI,EAAG,cAAa,IAAI,IAAI;AAAA,QACpD;AACA;AAAA,MACD;AAGA,YAAM,OAAO,IAAI,MAAM,IAAI,GAAG;AAC9B,UAAI,CAAC,KAAK,QAAQ;AACjB,cAAM,IAAI,KAAK,aAAa,iBAAiB,GAAG,cAAc;AAAA,MAC/D,WAAW,KAAK,MAAM,IAAI,KAAK;AAC9B,cAAM,IAAI,KAAK,aAAa,SAAS,GAAG,6BAA6B,IAAI,GAAG,GAAG;AAAA,MAChF;AAEA,UAAI,CAAC,KAAK,aAAa,CAAC,KAAK,kBAAmB;AAChD,UAAI,KAAK,OAAO,iBAAkB,qBAAoB;AACtD,cAAQ,KAAK,IAAI;AACjB,iBAAW,QAAQ,cAAc;AAChC,YAAI,KAAK,OAAO,YAAY;AAC3B,gBAAM;AAAA,QACP,OAAO;AACN,cAAI,CAAC,IAAI,YAAY,KAAK,MAAM,IAAI,KAAK,CAAC,KAAK,eAAgB;AAC/D,gBAAM,UAAU,IAAI,iBAAiB,MAAM,IAAI;AAC/C,gBAAM,UAAU,KAAK,iBAAiB,KAAK,EAAE,IAAI,GAAa,SAAS,MAAM,MAAM,IAAkB;AACrG,gBAAM,OAAO,YAAY,WAAW,UAAU;AAAA,QAC/C;AACA,YAAI,MAAM,aAAa,IAAI,EAAG,cAAa,IAAI,IAAI;AAAA,MACpD;AAAA,IACD;AACA,QAAI,QAAQ,WAAW,GAAG;AACzB,YAAM,IAAI,KAAK,aAAa,oEAAoE;AAAA,IACjG;AACA,QAAI,QAAQ,SAAS,EAAG,OAAM,IAAI,KAAK,aAAa,wCAAwC;AAG5F,eAAW,QAAQ,cAAc;AAChC,UAAI,aAAa,IAAI,MAAM,IAAI;AAC9B,qBAAa,IAAI,IAAI;AACrB;AAAA,MACD;AACA,mBAAa,IAAI,IAAI,KAAK,aAAa,IAAI;AAAA,IAC5C;AAEA,QAAI,CAAC,WAAW;AACf,YAAM,SAAmB,CAAC;AAC1B,YAAM,WAAqB,CAAC;AAC5B,YAAM,UAAoB,CAAC;AAC3B,YAAM,UAAoB,CAAC;AAC3B,YAAM,SAAmB,CAAC;AAE1B,iBAAW,QAAQ,cAAc;AAChC,YAAI,aAAa,IAAI,MAAM,GAAG;AAC7B,iBAAO,KAAK,IAAI;AAAA,QACjB,WAAW,aAAa,IAAI,IAAI,GAAG;AAClC,kBAAQ,KAAK,IAAI;AAAA,QAClB,WAAW,aAAa,IAAI,IAAI,GAAG;AAClC,mBAAS,KAAK,IAAI;AAAA,QACnB,OAAO;AACN,kBAAQ,KAAK,IAAI;AAAA,QAClB;AAAA,MACD;AACA,aAAO,KAAK,gBAAgB,QAAQ,KAAK,KAAK,CAAC,GAAG;AAClD,aAAO,KAAK,sDAAsD,SAAS,KAAK,IAAI,KAAK,gCAAgC,EAAE;AAC3H,aAAO,KAAK,uDAAuD,QAAQ,KAAK,IAAI,KAAK,gCAAgC,EAAE;AAC3H,aAAO,KAAK,qDAAqD,QAAQ,KAAK,IAAI,KAAK,gCAAgC,EAAE;AACzH,aAAO,KAAK,0DAA0D,OAAO,KAAK,IAAI,KAAK,gCAAgC,EAAE;AAC7H,aAAO,KAAK,aAAa,OAAO,KAAK,QAAQ,CAAC;AAAA,IAC/C,OAAO;AACN,UAAI,SAAS;AACb,YAAM,OAAgC,CAAC;AACvC,iBAAW,QAAQ,IAAI,MAAM,MAAM,GAAG;AACrC,aAAK,IAAI,IAAI,qBAAqB,OAAO,OAAO,MAAM,kBAAkB,IAAI;AAE5E,kBAAU,OAAO,KAAK,IAAI,CAAC;AAAA,MAC5B;AACA,gBAAU;AACV,iBAAW,SAAS,IAAI,MAAM,MAAM,GAAG;AAEtC,kBAAU,WAAW,KAAK,KAAK,CAAC;AAChC,mBAAW,SAAS,IAAI,MAAM,MAAM,GAAG;AACtC,cAAI;AACJ,cAAI,OAAO;AACX,cAAI,UAAU;AACd,cAAI,UAAU,OAAO;AAEpB,qBAAS;AACT,sBAAU,aAAa,KAAK;AAAA,UAC7B,OAAO;AACN,qBAAS,GAAG,KAAK,IAAI,KAAK;AAC1B,uBAAW,QAAQ,SAAS;AAC3B,kBAAI,SAAS;AACb,kBAAI,OAAO,SAAS,UAAU;AAC7B,oBAAI,CAAC,IAAI,YAAY,MAAM,KAAK,KAAK,CAAC,IAAI,YAAY,MAAM,KAAK,GAAG;AACnE;AAAA,gBACD;AACA,oBAAI,UAAU,IAAI,iBAAiB,MAAM,KAAK;AAC9C,0BAAU;AACV,0BAAU,IAAI,iBAAiB,MAAM,KAAK;AAC1C,0BAAU;AAAA,cACX,OAAO;AACN,qBAAK,CAAC,IAAI,YAAY,KAAK,MAAM,KAAK,KAAK,CAAC,IAAI,YAAY,KAAK,MAAM,KAAK,MAAM,CAAC,KAAK,gBAAgB;AACvG;AAAA,gBACD;AACA,oBAAI,UAAU,IAAI,iBAAiB,KAAK,MAAM,KAAK;AACnD,oBAAI,UAAU,KAAK,iBAAiB,KAAK,EAAE,IAAI,GAAa,SAAS,MAAM,OAAO,IAAkB;AACpG,0BAAU,OAAO,YAAY,WAAW,UAAU;AAClD,0BAAU,IAAI,iBAAiB,KAAK,MAAM,KAAK;AAC/C,0BAAU,KAAK,iBAAiB,KAAK,EAAE,IAAI,GAAa,SAAS,MAAM,OAAO,IAAkB;AAChG,0BAAU,OAAO,YAAY,WAAW,UAAU;AAAA,cACnD;AAEA,kBAAI,SAAS,QAAS,WAAU;AAAA,YACjC;AACA,gBAAI,YAAY,IAAI;AACnB,wBAAU;AAAA,YACX,OAAO;AACN,wBAAU,KAAK;AAAA,YAChB;AAAA,UACD;AACA,cAAI,YAAY,GAAG;AAClB,oBAAQ,0BAA0B,MAAM,yBAAyB,OAAO;AAAA,UACzE,WAAW,UAAU,GAAG;AACvB,oBAAQ,0BAA0B,MAAM,yBAAyB,OAAO;AAAA,UACzE,WAAW,UAAU,GAAG;AACvB,oBAAQ,0BAA0B,MAAM,yBAAyB,OAAO;AAAA,UACzE,OAAO;AACN,oBAAQ,0BAA0B,MAAM,yBAAyB,OAAO;AAAA,UACzE;AACA,kBAAQ;AACR,oBAAU;AAAA,QACX;AAAA,MACD;AACA,gBAAU;AAEV,UAAI,mBAAmB;AACtB,kBAAU;AAAA,MACX;AAEA,WAAK,aAAa,gBAAgB,QAAQ,KAAK,KAAK,CAAC,UAAU,MAAM,EAAE;AAAA,IACxE;AAAA,EACD;AAAA,EACA,cAAc;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAAA,EAEA,SAAS,QAAQ,MAAM,MAAM;AAC5B,QAAI,CAAC,OAAQ,QAAO,KAAK,MAAM,gBAAgB;AAC/C,QAAI,CAAC,KAAK,aAAa,EAAG;AAE1B,UAAM,UAAU,OAAO,MAAM,GAAG;AAEhC,QAAI,SAAS;AACb,QAAI,YAAY;AAChB,QAAI,QAAQ;AACZ,QAAI,QAAQ;AACZ,QAAI,UAAU;AACd,QAAI,SAAS;AACb,QAAI,UAAU;AAEd,QAAI;AACJ,QAAI,UAAuB;AAE3B,QAAI,QAAQ;AACZ,QAAI,SAAS;AACb,QAAI,SAAS;AACb,QAAI,KAAK;AACT,QAAI,KAAK;AACT,QAAI,WAAW;AACf,QAAI,WAAW;AACf,QAAI,cAAc;AAClB,QAAI,WAAW;AAEf,eAAW,OAAO,SAAS;AAC1B,YAAM,YAAY,IAAI,YAAY;AAElC,UAAI,CAAC,QAAQ;AACZ,YAAI,cAAc,MAAM;AACvB,kBAAQ;AACR,mBAAS;AACT;AAAA,QACD,WAAW,cAAc,OAAO;AAC/B,kBAAQ;AACR,mBAAS;AACT;AAAA,QACD,WAAW,UAAU,WAAW,IAAI,KAAK,UAAU,WAAW,OAAO,GAAG;AACvE,kBAAQ,SAAS,IAAI,QAAQ,OAAO,EAAE,CAAC;AACvC,mBAAS;AACT,cAAI,MAAM,KAAK,GAAG;AACjB,mBAAO,KAAK,aAAa,8BAA8B,iBAAM,WAAW,GAAG,CAAC;AAAA,UAC7E;AACA,cAAI,QAAQ,KAAK,QAAQ,MAAM;AAC9B,mBAAO,KAAK,aAAa,qCAAqC;AAAA,UAC/D;AACA;AAAA,QACD;AAAA,MACD;AAEA,UAAI,CAAC,SAAS;AACb,gBAAQ,WAAW;AAAA,UACnB,KAAK;AAAA,UACL,KAAK;AACJ,qBAAS;AACT,sBAAU;AACV;AAAA,UACD,KAAK;AAAA,UACL,KAAK;AACJ,sBAAU;AACV;AAAA,UACD,KAAK;AAAA,UACL,KAAK;AACJ,sBAAU;AACV;AAAA,UACD,KAAK;AACJ,sBAAU;AACV;AAAA,UACD,KAAK;AAAA,UACL,KAAK;AACJ,sBAAU;AACV;AAAA,UACD,KAAK;AAAA,UACL,KAAK;AACJ,sBAAU;AACV;AAAA,QACD;AAAA,MACD;AAEA,UAAI,CAAC,WAAW;AACf,YAAI,cAAc,cAAc,cAAc,YAAY;AACzD,mBAAS;AACT,sBAAY;AACZ;AAAA,QACD,WAAW,cAAc,cAAc,cAAc,cAAc;AAClE,mBAAS;AACT,sBAAY;AACZ;AAAA,QACD,WAAW,cAAc,WAAW;AACnC;AAAA,QACD;AAAA,MACD;AAEA,UAAI,CAAC,SAAS;AACb,cAAM,WAAW,IAAI,QAAQ,IAAI,GAAG;AACpC,YAAI,SAAS,QAAQ;AACpB,oBAAU,SAAS;AACnB,oBAAU;AACV;AAAA,QACD;AAAA,MACD;AAEA,UAAI,CAAC,OAAO;AACX,YAAI,UAAU,SAAS,IAAI,KAAK,UAAU,SAAS,KAAK,GAAG;AAC1D,eAAK,SAAS,GAAG;AACjB,kBAAQ;AAER,cAAI,MAAM,EAAE,GAAG;AACd,mBAAO,KAAK,aAAa,4BAA4B,iBAAM,WAAW,GAAG,CAAC;AAAA,UAC3E;AAEA;AAAA,QACD;AAAA,MACD;AAEA,UAAI,CAAC,OAAO;AACX,YAAI,cAAc,cAAc,cAAc,OAAO;AACpD,kBAAQ;AACR,cAAI,cAAc,SAAS,CAAC,WAAW;AACtC,qBAAS;AACT,wBAAY;AAAA,UACb;AAAA,QACD,WAAW,cAAc,cAAc;AACtC,eAAK;AACL,kBAAQ;AAAA,QACT,WAAW,UAAU,SAAS,IAAI,KAAK,UAAU,SAAS,KAAK,KAC9D,UAAU,SAAS,GAAG,KAAK,UAAU,SAAS,GAAG,GAAG;AACpD,eAAK,SAAS,GAAG;AACjB,kBAAQ;AAER,cAAI,MAAM,EAAE,GAAG;AACd,mBAAO,KAAK,aAAa,4BAA4B,iBAAM,WAAW,GAAG,CAAC;AAAA,UAC3E;AACA,cAAI,KAAK,OAAO,KAAK,GAAG;AACvB,mBAAO,KAAK,aAAa,gDAAgD;AAAA,UAC1E;AAEA,cAAI,CAAC,WAAW;AACf,gBAAI,IAAI,SAAS,GAAG,GAAG;AACtB,uBAAS;AACT,0BAAY;AAAA,YACb,WAAW,IAAI,SAAS,GAAG,GAAG;AAC7B,uBAAS;AACT,0BAAY;AAAA,YACb;AAAA,UACD;AAEA;AAAA,QACD;AAAA,MACD;AAEA,UAAI,CAAC,QAAQ;AACZ,YAAI,CAAC,QAAQ,SAAS,OAAO,EAAE,SAAS,GAAG,GAAG;AAC7C,qBAAW;AACX,mBAAS;AAAA,QACV,WAAW,IAAI,WAAW,GAAG,GAAG;AAC/B,qBAAW,SAAS,IAAI,OAAO,CAAC,CAAC;AACjC,mBAAS;AAAA,QACV,WAAW,IAAI,WAAW,GAAG,GAAG;AAC/B,wBAAc;AACd,qBAAW,SAAS,IAAI,OAAO,CAAC,CAAC;AACjC,mBAAS;AAAA,QACV;AACA,YAAI,MAAM,QAAQ,GAAG;AACpB,iBAAO,KAAK,aAAa,iCAAiC,iBAAM,WAAW,OAAO,QAAQ,CAAC,CAAC;AAAA,QAC7F;AACA,YAAI,WAAW,GAAG;AACjB,iBAAO,KAAK,aAAa,+CAA+C;AAAA,QACzE;AACA,YAAI,OAAQ;AAAA,MACb;AAEA,YAAM,WAAW,SAAS,GAAG;AAE7B,UAAI,CAAC,SAAS;AACb,YAAI,UAAU,SAAS,MAAM,GAAG;AAC/B,qBAAW;AACX,oBAAU;AAEV,cAAI,MAAM,QAAQ,GAAG;AACpB,mBAAO,KAAK,aAAa,yCAAyC,iBAAM,WAAW,GAAG,CAAC;AAAA,UACxF;AACA,cAAI,WAAW,GAAG;AACjB,mBAAO,KAAK,aAAa,8CAA8C;AAAA,UACxE;AACA;AAAA,QACD;AAAA,MACD;AAEA,UAAI,CAAC,MAAM,QAAQ,KAAK,CAAC,WAAW,WAAW,KAAK,WAAW,KAAK;AACnE,mBAAW;AACX,kBAAU;AAAA,MACX;AAAA,IACD;AAEA,QAAI,SAAS;AACZ,UAAI,SAAS;AACZ,mBAAW,QAAQ,OAAO;AAAA,MAC3B,OAAO;AACN,eAAO,KAAK,aAAa,gBAAgB;AAAA,MAC1C;AAAA,IACD;AAEA,QAAI,SAAS;AACZ,UAAI,CAAC,SAAS;AACb,YAAI,QAAQ;AACX,qBAAW,KAAK,MAAM,MAAM,WAAW,KAAK,SAAS,KAAK,MAAM,KAAK,CAAC,IAAI,KAAK,SAAS,IAAI,MAAM;AAAA,QACnG,OAAO;AACN,cAAI,CAAC,aAAa;AACjB,yBAAa,IAAI,YAAY;AAAA,UAC9B,OAAO;AACN,wBAAY,KAAK,IAAI;AAAA,UACtB;AAEA,qBAAW,KAAK;AAAA,aACd,MAAM,KAAK,KAAK,QAAQ,IAAI,UAAU,SAAS,KAAK,MAAM,KAAK,CAAC,IAAI,MAAM,SAC1E,IAAI,QAAQ;AAAA,UACd;AAAA,QACD;AACA,YAAI,WAAW,GAAG;AACjB,iBAAO,KAAK,aAAa,8DAA8D;AAAA,QACxF;AAAA,MACD,WAAW,CAAC,OAAO;AAClB,YAAI,QAAQ;AACX,eAAK,KAAK,KAAK,OAAO,WAAW,MAAM,QAAQ,KAAK,WAAW,GAAG;AAAA,QACnE,OAAO;AACN,cAAI,CAAC,aAAa;AACjB,yBAAa,IAAI,YAAY;AAAA,UAC9B,OAAO;AACN,wBAAY,KAAK,IAAI;AAAA,UACtB;AAEA,eAAK,KAAK,KAAK,MAAM,KAAK,UAAU,WAAW,QAAQ,OAAO,KAAK,KAAK,KAAK,QAAQ,OAAO,QAAQ,OAAO;AAAA,QAC5G;AACA,cAAM;AACN,YAAI,KAAK,EAAG,OAAM;AAClB,cAAM;AACN,YAAI,KAAK,KAAK,KAAK,KAAK;AACvB,iBAAO,KAAK,aAAa,2FAA2F,EAAE,EAAE;AAAA,QACzH;AAAA,MACD,OAAO;AACN,eAAO,KAAK,aAAa,kDAAkD;AAAA,MAC5E;AAAA,IACD,WAAW,WAAW,GAAG;AACxB,aAAO,KAAK,aAAa,qCAAqC;AAAA,IAC/D;AAEA,QAAI;AAEJ,QAAI,QAAQ;AACX,gBAAY,KAAM,IAAI,WAAY,KAAK,MAAM,KAAK,CAAC,IAAI,OAAO,QAAS,MAAO;AAAA,IAC/E,OAAO;AACN,eAAS,KAAK,MAAM,SAAS,KAAK,OAAS,KAAM,IAAI,WAAY,KAAK,MAAM,KAAK,CAAC,KAAK,QAAS,MAAO,CAAC,CAAC;AACzG,UAAI,aAAa;AAChB,mBAAW,IAAI,YAAY;AAAA,MAC5B,OAAO;AACN,kBAAU,KAAK,IAAI;AAAA,MACpB;AAAA,IACD;AACA,WAAO,KAAK,aAAa,QAAQ,QAAQ,IAAI,SAAS,SAAS,GAAG,YAAY,KAAK,SAAS,EAAE,SAAS,EAAE,GAAG,WAAW,MAAM,MAAM,WAAW,MAAM,MAAM,EAAE,OAAO,WAAW,KAAK,CAAC,SAAS,OAAO,cAAc,MAAM,GAAG,GAAG,QAAQ,KAAK,EAAE,QAAQ,KAAK,MAAM,MAAM,CAAC,OAAO;AAAA,EAC/Q;AAAA,EACA,cAAc;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,QAAQ,MAAM,MAAM;AAC1B,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,UAAM,SAAS,QAAQ,OAAO;AAC9B,QAAI;AACJ,QAAI,SAAS,KAAK,KAAK,IAAI;AAC1B,YAAM,aAAa,KAAK,MAAM,UAAU,KAAK,KAAK,GAAG;AACrD,mBAAa,GAAG,UAAU,IAAI,eAAe,IAAI,QAAQ,MAAM;AAC/D,YAAM,cAAc,KAAK,MAAM,UAAU,KAAK,GAAG,IAAI,aAAa;AAClE,UAAI,YAAa,eAAc,KAAK,WAAW,IAAI,gBAAgB,IAAI,SAAS,OAAO;AAAA,IACxF,OAAO;AACN,mBAAa,KAAK,iBAAiB,SAAS,GAAI;AAAA,IACjD;AACA,SAAK,aAAa,cAAc,UAAU,MAAM;AAAA,EACjD;AAAA,EACA,YAAY,CAAC,0DAA0D;AAAA,EAEvE,IAAI;AAAA,EACJ,WAAW,QAAQ,MAAM,MAAM;AAC9B,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,UAAM,aAAa,oBAAI,KAAK;AAC5B,SAAK,aAAa,mBAAmB,WAAW,eAAe,CAAC,MAAM;AAAA,EACvE;AAAA,EACA,gBAAgB,CAAC,2DAA2D;AAAA,EAE5E,OAAO,QAAQ,MAAM,MAAM;AAC1B,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,aAAS,KAAK,MAAM;AACpB,UAAM,WAAY,WAAW;AAC7B,UAAM,aAAc,WAAW,UAAU,WAAW;AAEpD,UAAM,YAAY;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAEA,UAAM,cAAc;AAAA,MACnB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAEA,SAAK;AAAA,OACH,WAAW,UAAU,IAAI,SAAO,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,QAAQ,IAAI,OAC/D,YAAY,aAAa,iBAAiB,OAC1C,aAAa,YAAY,IAAI,SAAO,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,QAAQ,IAAI;AAAA,IACrE;AAAA,EACD;AAAA,EACA,YAAY;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAAA,EAEA,YAAY,QAAQ,MAAM,MAAM;AAC/B,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,aAAS,KAAK,MAAM;AACpB,UAAM,WAAY,WAAW;AAC7B,UAAM,aAAc,WAAW,UAAU,WAAW;AAEpD,UAAM,kBAAkB;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAEA,UAAM,oBAAoB;AAAA,MACzB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAEA,UAAM,wBAAwB;AAAA,MAC7B,KAAK;AAAA,MACL,KAAK,+HACL,KAAK,0IACL,KAAK;AAAA,MACL,KAAK;AAAA,IACN;AAEA,SAAK;AAAA,OACH,WAAW,gBAAgB,IAAI,SAAO,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,QAAQ,IAAI,OACrE,YAAY,aAAa,iBAAiB,OAC1C,aAAa,kBAAkB,IAAI,SAAO,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,QAAQ,IAAI,OACzE,aAAa,eAAe,sBAAsB,KAAK,QAAQ,CAAC,KAAK;AAAA,IACvE;AAAA,EACD;AAAA,EACA,iBAAiB;AAAA,IAChB;AAAA,IACA;AAAA,EACD;AAAA,EAEA,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,KAAK;AAAA,EACL,WAAW,QAAQ,MAAM,MAAM;AAC9B,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,SAAK;AAAA,MACJ;AAAA,IAOD;AAAA,EACD;AAAA,EACA,gBAAgB;AAAA,IACf;AAAA,IACA;AAAA,EACD;AAAA,EAEA,MAAM,QAAQ,MAAM,MAAM;AACzB,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,SAAK,aAAa,wFAAwF;AAAA,EAC3G;AAAA,EACA,WAAW,CAAC,+BAA+B;AAAA,EAE3C,OAAO,QAAQ,MAAM,MAAM;AAC1B,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,SAAK,aAAa,wFAAwF;AAAA,EAC3G;AAAA,EACA,YAAY,CAAC,mCAAmC;AAAA,EAEhD,cAAc,QAAQ,MAAM,MAAM;AACjC,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,SAAK,aAAa;AAAA,MACjB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,+DAA+D,OAAO,OAAO,IAAI;AAAA,IACvF,EAAE,KAAK,QAAQ,CAAC;AAAA,EACjB;AAAA,EACA,mBAAmB,CAAC,gDAAgD;AAAA,EAEpE,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,YAAY,QAAQ,MAAM,MAAM;AAC/B,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,SAAK,aAAa,0GAA0G;AAAA,EAC7H;AAAA,EACA,iBAAiB,CAAC,6EAA6E;AAAA,EAE/F,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,KAAK,QAAQ,MAAM,MAAM;AACxB,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,QAAI,MAAM,QAAQ;AACjB,WAAK,aAAa,qPAAqP;AAAA,IACxQ,OAAO;AACN,WAAK;AAAA,QACJ;AAAA,MAGD;AAAA,IACD;AAAA,EACD;AAAA,EACA,UAAU,CAAC,sDAAsD;AAAA,EAEjE,cAAc;AAAA,EACd,cAAc,QAAQ,MAAM,MAAM;AACjC,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,SAAK,aAAa,gNAAgN;AAAA,EACnO;AAAA,EACA,mBAAmB,CAAC,yDAAyD;AAAA,EAE7E,cAAc;AAAA,EACd,cAAc;AAAA,EACd,YAAY,QAAQ,MAAM,MAAM;AAC/B,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,SAAK,aAAa,mNAAmN;AAAA,EACtO;AAAA,EACA,iBAAiB,CAAC,sDAAsD;AAAA,EAExE,cAAc;AAAA,EACd,MAAM,QAAQ,MAAM,MAAM;AACzB,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,SAAK;AAAA,MACJ;AAAA,IAOD;AAAA,EACD;AAAA,EACA,WAAW;AAAA,IACV;AAAA,IACA;AAAA,EACD;AAAA,EAEA,WAAW;AAAA,EACX,aAAa;AAAA,EACb,UAAU,QAAQ,MAAM,MAAM;AAC7B,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,SAAK;AAAA,MACJ;AAAA,IAGD;AAAA,EACD;AAAA,EACA,eAAe,CAAC,kDAAkD;AAAA,EAElE,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,kBAAkB;AAAA,EAClB,YAAY;AAAA,EACZ,eAAe;AAAA,EACf,WAAW;AAAA,EACX,aAAa;AAAA,EACb,cAAc;AAAA,EACd,OAAO;AAAA,EACP,KAAK,QAAQ,MAAM,MAAM,YAAY,KAAK;AACzC,QAAI,QAAQ,UAAU,OAAQ,QAAO,KAAK,IAAI,WAAW;AACzD,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,UAAM,wBAAwB,CAAC,iBAAiB,WAAW;AAC3D,UAAM,wBAAwB,CAAC,eAAe,gBAAgB,OAAO;AACrE,UAAM,2BAA2B,CAAC,WAAW,aAAa;AAC1D,UAAM,+BAA+B;AAAA,MACpC;AAAA,MAAkB;AAAA,MAAkB;AAAA,MAAyB;AAAA,MAAyB;AAAA,MAAyB;AAAA,MAAyB;AAAA,MAAyB;AAAA,IAClK;AACA,UAAM,iBAAkB,MAAM,WAAW,KAAK,OAAO,OAAO,SAAS,cAAc,KAClF,KAAK,OAAO,OAAO,SAAS,qBAAqB;AAClD,UAAM,qBAAsB,MAAM,WAAW,6BAA6B,SAAS,KAAK,OAAO,MAAM,KACpG,KAAK,OAAO,OAAO,SAAS,mBAAmB;AAChD,UAAM,EAAE,IAAI,IAAI,KAAK,cAAc,MAAM,QAAQ,MAAM;AAEvD,QAAI,sBAAsB,SAAS,GAAG,KACpC,kBAAkB,CAAC,sBAAsB,SAAS,GAAG,KAAK,CAAC,yBAAyB,SAAS,GAAG,GAAI;AACrG,aAAO,KAAK;AAAA,QACX,0IACgE,IAAI,GAAG;AAAA,MACxE;AAAA,IACD;AACA,QAAI,yBAAyB,SAAS,GAAG,KAAM,sBAAsB,CAAC,sBAAsB,SAAS,GAAG,GAAI;AAC3G,aAAO,KAAK;AAAA,QACX;AAAA,MAED;AAAA,IACD;AACA,SAAK;AAAA,MACJ,kKAC8D,IAAI,GAAG;AAAA,IACtE;AAAA,EACD;AAAA,EACA,UAAU;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAAA,EAEA,UAAU;AAAA,EACV,IAAI,QAAQ,MAAM,MAAM;AACvB,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,SAAK;AAAA,MACJ;AAAA,IAMD;AAAA,EACD;AAAA,EACA,SAAS;AAAA,IACR;AAAA,IACA;AAAA,EACD;AAAA,EAEA,YAAY,QAAQ,MAAM,MAAM;AAC/B,WAAO,KAAK,MAAM,wBAAwB;AAAA,EAC3C;AAAA,EACA,iBAAiB;AAAA,IAChB;AAAA,EACD;AAAA,EAEA,UAAU;AAAA,EACV,MAAM;AAAA,EACN,OAAO;AAAA,EACP,SAAS;AAAA,EACT,WAAW;AAAA,EACX,aAAa;AAAA,EACb,aAAa;AAAA,EACb,MAAM,WAAW,QAAQ,MAAM,MAAM,YAAY,KAAK;AACrD,QAAI,CAAC,UAAU,KAAK,aAAa,GAAG;AACnC,aAAO,KAAK;AAAA,QACX;AAAA,MAID;AAAA,IACD;AAEA,UAAM,aAAc,QAAQ,QAAQ,QAAQ;AAE5C,QAAI,WAAW,KAAK,MAAM;AAC1B,QAAI,aAAa,SAAU,YAAW;AACtC,QAAI,aAAa,MAAO,YAAW;AACnC,UAAM,EAAE,cAAc,SAAS,IAAI,YAAY,UAAU,UAAU;AAEnE,QAAI,CAAC,aAAc,QAAO,KAAK,WAAW,2BAA2B;AAErE,UAAM,SAAS,iBAAiB,IAAI,IAAI,QAAQ,IAAI,OAAO,OAAO,QAAQ,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,IAAI;AAE7F,QAAI,CAAC,KAAK,aAAa,eAAe,SAAS,OAAO,KAAK,MAAM,EAAE,EAAG;AAEtE,QAAI,QAAQ;AACX,YAAM,QAAkB,CAAC;AACzB,UAAI,cAAc;AAClB,UAAI,CAAC,UAAU,QAAQ,eAAe,EAAE,SAAS,OAAO,UAAU,GAAG;AACpE,YAAI,OAAO,SAAS,QAAQ;AAC3B,gBAAM,KAAK,oBAAoB,iBAAM,WAAW,OAAO,QAAQ,KAAK,IAAI,CAAC,CAAC,EAAE;AAAA,QAC7E;AACA,YAAI,OAAO,SAAS,QAAQ;AAC3B,gBAAM,KAAK,iBAAiB,iBAAM,WAAW,OAAO,QAAQ,KAAK,IAAI,CAAC,CAAC,EAAE;AAAA,QAC1E;AACA,YAAI,OAAO,WAAW,QAAQ;AAC7B,gBAAM,KAAK,mBAAmB,iBAAM,WAAW,OAAO,UAAU,KAAK,IAAI,CAAC,CAAC,EAAE;AAAA,QAC9E;AACA,YAAI,OAAO,YAAY,QAAQ;AAC9B,gBAAM,KAAK,uBAAuB,iBAAM,WAAW,OAAO,WAAW,KAAK,IAAI,CAAC,CAAC,EAAE;AAAA,QACnF;AACA,YAAI,MAAM,SAAS,GAAG;AACrB,wBAAc,8DAA8D,MAAM,KAAK,QAAQ,CAAC;AAAA,QACjG,OAAO;AACN,wBAAc,wBAAwB,OAAO,IAAI;AAAA,QAClD;AAAA,MACD;AACA,YAAM,aAAa,OAAO,QAAQ;AAClC,YAAM,WAAqB,CAAC;AAC5B,YAAM,OAAO,MAAM,mBAAmB,OAAO,EAAE;AAC/C,UAAI,MAAM;AACT,mBAAW,EAAE,eAAe,IAAI,KAAK,KAAK,WAAW;AACpD,cAAI,KAAK;AACT,eAAK,GAAG,QAAQ,cAAc,EAAE;AAChC,eAAK,GAAG,QAAQ,sBAAsB,IAAI;AAC1C,eAAK,GAAG,MAAM,GAAG,EAAE,IAAI,CAAC,MAAc,EAAE,CAAC,EAAE,YAAY,IAAI,EAAE,OAAO,CAAC,CAAC,EAAE,KAAK,GAAG;AAChF,mBAAS,KAAK,qBAAqB,GAAG,KAAK,EAAE,MAAM;AAAA,QACpD;AAAA,MACD,WAAW,OAAO,SAAS,QAAQ;AAClC,iBAAS,KAAK,GAAG,OAAO,OAAO;AAAA,MAChC,OAAO;AACN,cAAM,QAAQ,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AACnE,cAAM,MAAM,IAAI,UAAU,MAAM,EAAE;AAClC,iBAAS,KAAK,kFAAkF,MAAM,MAAM,CAAC,KAAK,IAAI,0PAEJ;AAAA,MACnH;AACA,aAAO,KAAK,aAAa,OAAO,OAAO,IAAI,cAAc,aAAa,aAAa,WAAW,EAAE,GAAG,SAAS,KAAK,QAAQ,CAAC,GAAG,cAAc,SAAS,WAAW,KAAK,EAAE,EAAE;AAAA,IACzK;AAEA,QAAI,aAAa;AAEjB,QAAI,KAAK,cAAc;AACtB,oBAAc;AAAA,IACf;AAGA,UAAM,MAAM,CAAC,iBAAiB,UAAU,oCAAoC;AAC5E,eAAW,aAAa,UAAU;AACjC,UAAI,KAAK,iBAAM,qDAAqD,SAAS,SAAS,EAAE,IAAI,OAAO;AACnG,iBAAW,WAAW,SAAS,SAAS,EAAE,SAAS;AAClD,cAAM,YAAY,IAAI,QAAQ,IAAI,OAAO;AACzC,cAAM,WAAW,iBAAM,WAAW,UAAU,IAAI;AAChD,cAAM,OAAO,UAAU,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC;AAClD,cAAM,OAAO,MAAM,mBAAmB,UAAU,EAAE;AAClD,YAAI,MAAM;AACT,qBAAW,EAAE,eAAe,IAAI,KAAK,KAAK,WAAW;AACpD,iBAAK,KAAK,qBAAqB,GAAG,KAAK,aAAa,MAAM;AAAA,UAC3D;AAAA,QACD;AACA,cAAM,WAAW,KAAK,SAAS,KAAK,KAAK,QAAQ,IAAI;AACrD,YAAI,KAAK,yCAAyC,QAAQ,6DAA6D,QAAQ,YAAY;AAAA,MAC5I;AAAA,IACD;AACA,QAAI,KAAK,UAAU;AACnB,WAAO,KAAK,UAAU,QAAQ,IAAI,KAAK,EAAE,CAAC,EAAE;AAAA,EAC7C;AAAA,EACA,gBAAgB;AAAA,IACf;AAAA,IACA;AAAA,EACD;AAAA,EAEA,SAAS,QAAQ,MAAM,MAAM;AAC5B,WAAO,KAAK,YAAY;AACxB,SAAK,eAAe,OAAO,UAAU;AACrC,QAAI,KAAK,iBAAkB,MAAK,SAAS,WAAW,MAAM,IAAI;AAE9D,QAAI,CAAC,KAAK,aAAa,OAAO,UAAU,EAAG;AAE3C,UAAM,UAAU;AAAA,MACf;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,MACA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,MACA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,MACA;AAAA,QACC;AAAA,MACD;AAAA,MACA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,MACA;AAAA,QACC;AAAA,MACD;AAAA,IACD;AAEA,SAAK;AAAA,MACJ,QAAQ,IAAI,SAAO,IAAI,IAAI,YAAU,KAAK,GAAG,MAAM,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,KAAK,cAAc;AAAA,IAC1F;AAAA,EACD;AAAA,EAEA,YAAY,QAAQ,MAAM,MAAM;AAC/B,QAAI,CAAC,MAAM,OAAO,SAAU,MAAK,SAAS,UAAU;AACpD,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,SAAK;AAAA,MACJ;AAAA,IAKD;AAAA,EACD;AAAA,EAEA,MAAM;AAAA,EACN,WAAW;AAAA,EACX,MAAM,QAAQ,MAAM,MAAM,YAAY,KAAK;AAC1C,QAAI,CAAC,QAAQ;AACZ,UAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,WAAK;AAAA,QACJ,GAAG,OAAO,KAAK,+BAA+B,WAAW,EAAE,GACxD,MAAM,SAAS,YAAY,iBAAM,kBAAkB,KAAK,SAAS,SAAS,KAAK,KAAK,KAAK,KAAK,KAAK,aAAa,eAAe,EAAE,sBAC9G,OAAO,OAAO,IAAI,GAAG,KAAK,UAAU,KAAK,KAAK,gBAAgB;AAAA,MACrF;AACA;AAAA,IACD;AACA,QAAI,CAAC,MAAM;AACV,YAAM,IAAI,KAAK,aAAa,8CAA8C;AAAA,IAC3E;AACA,UAAM,eAAe,MAAM,OAAO,KAAK,MAAM,CAAC;AAC9C,UAAM,EAAE,cAAc,cAAc,IAAI,YAAY,KAAK,MAAM,CAAC;AAChE,QAAI,iBAAiB,gBAAgB,QAAQ,aAAa;AACzD,YAAM,IAAI,KAAK,aAAa;AAAA,QAC3B,IAAI,MAAM;AAAA,QACV;AAAA,QACA;AAAA,MACD,CAAC;AAAA,IACF;AAEA,QAAI,cAAc;AACjB,YAAM,YAAY,aAAa,SAAS;AACxC,aAAO,KAAK;AAAA,QACX,GAAG,aAAa,KAAK,kBAClB,YAAY,iBAAM,kBAAkB,SAAS,KAAK,KAAK,KAAK,aAAa,KAAK,aAAa,eAAe,WAAW;AAAA,MACzH;AAAA,IACD;AAEA,QAAI,gBAAgB,KAAK,QAAQ,aAAa;AAC7C,aAAO,KAAK,MAAM,SAAS,MAAM,EAAE;AAAA,IACpC;AACA,SAAK,SAAS,YAAY,MAAM,IAAI;AACpC,QAAI,OAAO,SAAS,KAAK;AACxB,YAAM,IAAI,KAAK,aAAa,qHAAqH;AAAA,IAClJ;AAEA,aAAS,OAAO,KAAK;AAErB,QAAI,WAAW,YAAY,WAAW,UAAU;AAC/C,UAAI,CAAC,KAAK,SAAS,UAAW,OAAM,IAAI,KAAK,aAAa,8CAA8C;AACxG,aAAO,KAAK,SAAS;AACrB,WAAK,iBAAiB,GAAG,KAAK,IAAI,mCAAmC;AACrE,WAAK,OAAO,SAAS,MAAM,yBAAyB;AAAA,IACrD,OAAO;AACN,WAAK,SAAS,YAAY;AAC1B,WAAK,iBAAiB,GAAG,KAAK,IAAI,oCAAoC,MAAM,EAAE;AAC9E,WAAK,OAAO,SAAS,MAAM,oBAAoB,MAAM,EAAE;AAAA,IACxD;AAEA,SAAK,aAAa;AAAA,EACnB;AAAA,EACA,WAAW;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAAA,EAEA,IAAI,QAAQ,MAAM,MAAM;AACvB,aAAS,KAAK,MAAM;AACpB,UAAM,UAAU,WAAW;AAC3B,QAAI,WAAW,KAAK,gBAAgB,GAAG;AACtC,YAAM,IAAI,KAAK,aAAa,KAAK,0CAA0C;AAAA,IAC5E;AACA,UAAM,SAAS,CAAC;AAChB,QAAI,WAAW,WAAW,SAAS;AAClC,aAAO,KAAK,wCAAwC,KAAK,eAAe,KAAK,KAAK,aAAa,MAAM;AAAA,IACtG;AACA,QAAI,WAAW,WAAW,mBAAmB,WAAW,MAAM;AAC7D,aAAO,KAAK,KAAK,wcAAwc;AACzd,UAAI,CAAC,KAAK,gBAAgB,EAAG,MAAK,KAAK,MAAM,UAAU;AAAA,IACxD;AACA,QAAI,WAAW,WAAW,YAAY,WAAW,gBAAgB,WAAW,SAAS;AACpF,aAAO,KAAK,oBAAoB,OAAO,OAAO,IAAI,IAAI,KAAK,oBAAoB,KAAK,KAAK,wBAAwB,MAAM;AAAA,IACxH;AACA,QAAI,WAAW,WAAW,aAAa,WAAW,WAAW,WAAW,QAAQ;AAC/E,aAAO,KAAK,8DAA8D,KAAK,eAAe,MAAM;AAAA,IACrG;AACA,QAAI,WAAW,CAAC,SAAS,UAAU,cAAc,EAAE,SAAS,MAAM,GAAG;AACpE,aAAO,KAAK,0DAA0D,KAAK,aAAa,MAAM;AAAA,IAC/F;AACA,QAAI,WAAW,WAAW,OAAO;AAChC,aAAO,KAAK,oBAAoB,OAAO,OAAO,IAAI,IAAI,KAAK,aAAa,KAAK,KAAK,uCAAuC,MAAM;AAAA,IAChI;AACA,QAAI,WAAW,CAAC,eAAe,cAAc,SAAS,MAAM,EAAE,SAAS,MAAM,GAAG;AAC/E,aAAO,KAAK,KAAK,ymBAAymB;AAAA,IAC3nB;AACA,QAAI,WAAW,CAAC,OAAO,OAAO,EAAE,SAAS,MAAM,GAAG;AACjD,aAAO,KAAK,wCAAwC,KAAK,mBAAmB,KAAK,KAAK,mBAAmB,MAAM;AAAA,IAChH;AACA,QAAI,WAAW,CAAC,MAAM,gBAAgB,eAAe,EAAE,SAAS,MAAM,GAAG;AACxE,aAAO,KAAK,KAAK,0ZAA0Z;AAAA,IAC5a;AACA,QAAI,WAAW,CAAC,WAAW,SAAS,EAAE,SAAS,MAAM,GAAG;AACvD,aAAO,KAAK,wCAAwC,KAAK,iBAAiB,KAAK,KAAK,mCAAmC,MAAM;AAAA,IAC9H;AACA,QAAI,WAAW,CAAC,gBAAgB,YAAY,UAAU,EAAE,SAAS,MAAM,GAAG;AACzE,aAAO,KAAK,8HAA8H;AAAA,IAC3I;AACA,QAAI,CAAC,OAAO,UAAU,QAAQ;AAC7B,WAAK,WAAW,IAAI,MAAM,sBAAsB;AAChD,aAAO,KAAK,MAAM,WAAW;AAAA,IAC9B;AACA,QAAI,CAAC,UAAU,SAAS;AACvB,aAAO,QAAQ,wCAAwC,KAAK,aAAa,KAAK,KAAK,8BAA8B,MAAM;AAAA,IACxH;AACA,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,SAAK,aAAa,OAAO,KAAK,QAAQ,CAAC;AAAA,EACxC;AAAA,EACA,SAAS;AAAA,IACR;AAAA,IACA;AAAA,EACD;AAAA,EAEA,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ,QAAQ,MAAM,MAAM;AAC3B,QAAI,CAAC,OAAQ,QAAO,KAAK,MAAM,eAAe;AAC9C,QAAI,CAAC,KAAK,aAAa,EAAG;AAE1B,UAAM,UAAU,OAAO,MAAM,GAAG;AAChC,QAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ,CAAC,CAAC;AACxC,UAAM,OAAO,IAAI,MAAM,IAAI,QAAQ,CAAC,CAAC;AACrC,UAAM,OAAO,IAAI,MAAM,IAAI,QAAQ,CAAC,CAAC;AACrC,UAAM,UAAU,IAAI,UAAU,IAAI,QAAQ,CAAC,CAAC;AAC5C,UAAM,SAAS,IAAI,QAAQ,IAAI,QAAQ,CAAC,CAAC;AACzC,QAAI,aAAa;AACjB,QAAI,cAAc,QAAQ,CAAC,KAAK,MAAM,KAAK,EAAE,YAAY;AACzD,QAAI,YAAY;AAChB,UAAM,cAAc,IAAI,QAAQ,IAAI,QAAQ,CAAC,CAAC;AAE9C,QAAI,CAAC,KAAK,QAAQ,QAAQ,IAAI,EAAE,SAAS,UAAU,GAAG;AACrD,mBAAa;AAAA,IACd,WAAW,CAAC,KAAK,QAAQ,SAAS,MAAM,MAAM,EAAE,SAAS,UAAU,GAAG;AACrE,mBAAa;AACb,kBAAY;AAAA,IACb,WAAW,CAAC,KAAK,QAAQ,SAAS,MAAM,QAAQ,OAAO,MAAM,EAAE,SAAS,UAAU,GAAG;AACpF,mBAAa;AACb,kBAAY;AAAA,IACb,WAAW,CAAC,KAAK,QAAQ,QAAQ,OAAO,IAAI,EAAE,SAAS,UAAU,GAAG;AACnE,mBAAa;AACb,kBAAY;AAAA,IACb,WAAW,CAAC,KAAK,QAAQ,MAAM,OAAO,QAAQ,MAAM,EAAE,SAAS,UAAU,GAAG;AAC3E,mBAAa;AACb,kBAAY;AAAA,IACb,WAAW,CAAC,KAAK,MAAM,OAAO,QAAQ,QAAQ,MAAM,EAAE,SAAS,UAAU,GAAG;AAC3E,mBAAa;AACb,kBAAY;AAAA,IACb,WAAW,CAAC,KAAK,OAAO,QAAQ,QAAQ,MAAM,OAAO,OAAO,EAAE,SAAS,UAAU,GAAG;AACnF,mBAAa;AACb,kBAAY;AAAA,IACb,WAAW,CAAC,KAAK,QAAQ,MAAM,OAAO,KAAK,EAAE,SAAS,UAAU,GAAG;AAClE,mBAAa;AACb,kBAAY;AAAA,IACb,WAAW,CAAC,KAAK,QAAQ,OAAO,MAAM,OAAO,KAAK,EAAE,SAAS,UAAU,GAAG;AACzE,mBAAa;AACb,kBAAY;AAAA,IACb,OAAO;AACN,mBAAa;AAAA,IACd;AAGA,QAAI,QAAQ,QAAQ;AACnB,mBAAa;AACb,UAAI,YAAY,QAAQ,KAAK;AAC5B,eAAO,KAAK,aAAa,GAAG,QAAQ,IAAI,qBAAqB,WAAW,YAAY,CAAC,GAAG;AAAA,MACzF;AAEA,UAAK,QAAQ,cAAc,QAAQ,gBAAgB,cAClD,CAAC,UAAU,UAAU,EAAE,SAAS,QAAQ,WAAW,GAAG;AACtD,kBAAU,IAAI,QAAQ,IAAI,QAAQ,eAAe,QAAQ,WAAW;AAAA,MACrE;AAEA,UAAI,aAAa,YAAY;AAC7B,UAAI,WAAmB,YAAY;AACnC,UAAI,WAAW,WAAW,OAAO,KAAK,WAAW,MAAM,GAAG,CAAC,MAAM,MAAM;AACtE,qBAAa,WAAW,MAAM,CAAC;AAC/B,mBAAW,KAAK,UAAU;AAAA,MAC3B;AACA,UAAI,aAAa,gBAAgB;AAChC,mBAAW;AAAA,MACZ,WAAW,aAAa,qBAAqB;AAC5C,mBAAW;AAAA,MACZ,WAAW,aAAa,qBAAqB;AAC5C,mBAAW;AACX,YAAI,YAAY,GAAG;AAClB,iBAAO,KAAK,aAAa,4EAA4E,WAAW,YAAY,CAAC,GAAG;AAAA,QACjI;AAAA,MACD,WAAW,aAAa,aAAa;AACpC,mBAAW;AAAA,MACZ,WAAW,aAAa,oBAAoB;AAC3C,mBAAW;AAAA,MACZ,WAAW,aAAa,qBAAqB;AAC5C,mBAAW;AAAA,MACZ,WAAW,aAAa,SAAS;AAChC,mBAAW;AAAA,MACZ,WAAW,SAAS,SAAS,KAAK,GAAG;AACpC,mBAAW,QAAQ,SAAS,MAAM,EAAE;AACpC,qBAAa,WAAW,SAAS,MAAM,EAAE;AAAA,MAC1C,WAAW,YAAY,eAAe,UAAU;AAC/C,qBAAa,WAAW;AAAA,MACzB;AACA,YAAM,qBAA8C;AAAA,QACnD,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,YAAY;AAAA,MACb;AACA,UAAI,KAAK,QAAQ,KAAK,YAAY;AAClC,UAAI,OAAO,WAAY,MAAK;AAC5B,UAAI,OAAO,cAAe,MAAK;AAC/B,UAAI,CAAC,MAAM,IAAI,EAAE,SAAS,QAAQ,KAAK,eAAe,QACrD,MAAM,SAAS,YAAY,KAAK,SAAS,YAAY,oBAAoB;AAGzE,aAAK;AAAA,UACJ,iBAAM,2CAA2C,UAAU,YAAY,EAAE,IAAI,QAAQ,UAAU,mBAAmB,KAAK,SAAS,QAAQ,CAAC,KAAK,WAAW,YAAY,CAAC,IAAI,UAAU,IAAI,QAAQ,IAAI;AAAA,QACrM;AAAA,MACD,WAAW,CAAC,MAAM,IAAI,EAAE,SAAS,QAAQ,KAAK,eAAe,MAAM;AAClE,aAAK;AAAA,UACJ,iBAAM,2CAA2C,UAAU,YAAY,EAAE,IAAI,QAAQ,KAAK,WAAW,YAAY,CAAC,IAAI,UAAU,IAAI,QAAQ,IAAI,kGAChJ,wDAAwD,UAAU,YAAY,EAAE,IAAI,QAAQ,kEAA+D,UAAU,YAAY,EAAE,IAAI,QAAQ,mEAAgE,UAAU,YAAY,EAAE,IAAI,QAAQ,gEAC5P,UAAU,YAAY,EAAE,IAAI,QAAQ,+DAA+D,UAAU,YAAY,EAAE,IAAI,QAAQ;AAAA,QAC/K;AAAA,MACD,OAAO;AACN,aAAK,aAAa,iBAAM,2CAA2C,UAAU,YAAY,EAAE,GAAI,WAAW,MAAM,WAAW,EAAG,KAAK,WAAW,YAAY,CAAC,IAAI,UAAU,IAAI,QAAQ,IAAI,yFAAyF;AAAA,MACnR;AAAA,IACD;AAGA,QAAI,KAAK,UAAU,YAAY,KAAK,KAAK,OAAO,WAAW;AAC1D,mBAAa;AACb,WAAK,aAAa,uCAAuC,UAAU,UAAU,KAAK,EAAE,KAAK,WAAW,YAAY,CAAC,IAAI,KAAK,IAAI,8FAA8F;AAAA,IAC7N;AAGA,QAAI,QAAQ,UAAU,YAAY,KAAK,QAAQ,OAAO,WAAW;AAChE,mBAAa;AACb,WAAK,aAAa,uCAAuC,UAAU,cAAc,QAAQ,EAAE,KAAK,WAAW,YAAY,CAAC,IAAI,QAAQ,IAAI,iGAAiG;AAAA,IAC1O;AAGA,QAAI,KAAK,UAAU,KAAK,OAAO,WAAW;AACzC,mBAAa;AACb,WAAK,aAAa,uCAAuC,UAAU,UAAU,KAAK,KAAK,IAAI,CAAC,KAAK,WAAW,YAAY,CAAC,IAAI,KAAK,IAAI,8FAA8F;AAAA,IACrO;AAGA,QAAI,OAAO,IAAI;AACd,UAAI,aAAa,OAAO;AACxB,UAAI,WAAmB,OAAO;AAC9B,UAAI,WAAW,WAAW,OAAO,KAAK,WAAW,MAAM,GAAG,CAAC,MAAM,MAAM;AACtE,qBAAa,WAAW,MAAM,CAAC;AAC/B,mBAAW,KAAK,UAAU;AAAA,MAC3B;AACA,UAAI,aAAa,gBAAgB;AAChC,mBAAW;AAAA,MACZ,WAAW,aAAa,qBAAqB;AAC5C,mBAAW;AAAA,MACZ,WAAW,aAAa,qBAAqB;AAC5C,mBAAW;AACX,YAAI,YAAY,GAAG;AAClB,iBAAO,KAAK,aAAa,4EAA4E,WAAW,YAAY,CAAC,GAAG;AAAA,QACjI;AAAA,MACD,WAAW,aAAa,aAAa;AACpC,mBAAW;AAAA,MACZ,WAAW,aAAa,oBAAoB;AAC3C,mBAAW;AAAA,MACZ,WAAW,aAAa,qBAAqB;AAC5C,mBAAW;AAAA,MACZ,WAAW,aAAa,SAAS;AAChC,mBAAW;AAAA,MACZ,WAAW,SAAS,SAAS,KAAK,GAAG;AACpC,mBAAW,MAAM,SAAS,MAAM,EAAE,CAAC;AACnC,qBAAa,SAAS,SAAS,MAAM,EAAE,CAAC;AAAA,MACzC,WAAW,OAAO,eAAe,UAAU;AAC1C,qBAAa,WAAW;AAAA,MACzB;AACA,UAAI,YAAY;AACf,qBAAa;AACb,aAAK,aAAa,iBAAM,2CAA2C,UAAU,YAAY,QAAQ,KAAK,WAAW,YAAY,CAAC,IAAI,UAAU,gGAAgG;AAAA,MAC7O;AAAA,IACD;AAEA,QAAI,CAAC,YAAY;AAChB,aAAO,KAAK,aAAa,2EAA2E,WAAW,YAAY,CAAC,GAAG;AAAA,IAChI;AAAA,EACD;AAAA,EACA,aAAa;AAAA,IACZ;AAAA,IACA;AAAA,EACD;AAAA,EAEA,WAAW,QAAQ,WAAW,MAAM;AACnC,QAAI,CAAC,OAAQ,QAAO,KAAK,MAAM,kBAAkB;AACjD,QAAI,CAAC,KAAK,aAAa,EAAG;AAE1B,UAAM,WAAW;AAEjB,UAAM,UAAU,IAAI,QAAQ,IAAI,MAAM;AACtC,UAAM,OAAO,IAAI,MAAM,IAAI,MAAM;AACjC,UAAM,OAAO,IAAI,MAAM,IAAI,MAAM;AACjC,UAAM,UAAU,IAAI,UAAU,IAAI,MAAM;AACxC,UAAM,SAAS,IAAI,QAAQ,IAAI,MAAM;AACrC,QAAI,aAAa;AAGjB,QAAI,QAAQ,QAAQ;AACnB,mBAAa;AACb,UAAI,QAAQ,iBAAiB,QAAQ,kBAAkB,QAAQ;AAC9D,cAAM,IAAI,KAAK,aAAa,GAAG,QAAQ,IAAI,4BAA8B;AAAA,MAC1E;AACA,UAAI,cAAc,QAAQ;AAC1B,UAAI,QAAQ,GAAG,WAAW,SAAS,EAAG,eAAc;AACpD,YAAM,OAAO,GAAG,QAAQ,GAAG,mBAAmB,WAAW,CAAC;AAE1D,WAAK,aAAa,iBAAM,gBAAgB,IAAI,KAAK,QAAQ,IAAI,kDAAkD;AAAA,IAChH;AAGA,QAAI,KAAK,QAAQ;AAChB,mBAAa;AACb,UAAI,KAAK,iBAAiB,KAAK,kBAAkB,QAAQ;AACxD,cAAM,IAAI,KAAK,aAAa,GAAG,KAAK,IAAI,sBAAsB;AAAA,MAC/D;AACA,UAAI,OAAO,GAAG,QAAQ,GAAG,mBAAmB,KAAK,IAAI,CAAC;AACtD,UAAI,IAAI,MAAM,IAAI,KAAK,IAAI,EAAE,OAAQ,SAAQ;AAC7C,WAAK,aAAa,iBAAM,gBAAgB,IAAI,KAAK,KAAK,IAAI,+CAA+C;AAAA,IAC1G;AAGA,QAAI,QAAQ,QAAQ;AACnB,mBAAa;AACb,UAAI,QAAQ,iBAAiB,QAAQ,kBAAkB,QAAQ;AAC9D,cAAM,IAAI,KAAK,aAAa,GAAG,QAAQ,IAAI,yBAAyB;AAAA,MACrE;AACA,YAAM,OAAO,GAAG,QAAQ,GAAG,mBAAmB,QAAQ,IAAI,CAAC;AAC3D,WAAK,aAAa,YAAY,IAAI,KAAK,QAAQ,IAAI,kDAAkD;AAAA,IACtG;AAGA,QAAI,KAAK,QAAQ;AAChB,mBAAa;AACb,UAAI,KAAK,iBAAiB,KAAK,kBAAkB,QAAQ;AACxD,cAAM,IAAI,KAAK,aAAa,GAAG,KAAK,IAAI,sBAAsB;AAAA,MAC/D;AACA,YAAM,OAAO,GAAG,QAAQ,GAAG,mBAAmB,KAAK,IAAI,CAAC;AACxD,WAAK,aAAa,YAAY,IAAI,KAAK,KAAK,IAAI,+CAA+C;AAAA,IAChG;AAGA,QAAI,OAAO,QAAQ;AAClB,mBAAa;AACb,YAAM,OAAO,GAAG,QAAQ;AACxB,WAAK,aAAa,YAAY,IAAI,mDAAmD;AAAA,IACtF;AAEA,QAAI,CAAC,YAAY;AAChB,aAAO,KAAK,aAAa,2DAA2D;AAAA,IACrF;AAAA,EACD;AAAA,EACA,gBAAgB;AAAA,IACf;AAAA,IACA;AAAA,EACD;AAAA,EAEA,WAAW;AACV,QAAI,CAAC,KAAK,aAAa,EAAG;AAC1B,SAAK,aAAa,+MAA+M;AAAA,EAClO;AAAA,EACA,cAAc,CAAC,sDAAsD;AAAA;AAAA;AAAA;AAAA,EAMrE,MAAM;AAAA,EACN,KAAK,QAAQ,MAAM,MAAM;AACxB,QAAI,CAAC,UAAU,gBAAgB,KAAK,MAAM,EAAG,QAAO,KAAK,MAAM,YAAY;AAC3E,QAAI,CAAC,KAAK,aAAa,IAAI,EAAG;AAI9B,UAAM,UAAU;AAEhB,QAAI,eAAe;AACnB,UAAM,gBAAgB,OAAO,QAAQ,GAAG;AACxC,QAAI,iBAAiB,GAAG;AACvB,UAAI,cAAe,gBAAe,OAAO,OAAO,MAAM,GAAG,aAAa,CAAC;AACvE,eAAS,OAAO,MAAM,gBAAgB,CAAC;AACvC,UAAI,CAAC,OAAO,UAAU,YAAY,KAAK,gBAAgB,KAAK,eAAe,SAAS;AACnF,eAAO,KAAK,UAAU,8DAA8D,OAAO,GAAG;AAAA,MAC/F;AAAA,IACD;AACA,QAAI,SAAS;AACb,QAAI,gBAAgB;AAEpB,UAAM,eAAe,OAAO,KAAK,MAAM;AACvC,QAAI,cAAc;AACjB,cAAQ,OAAO,MAAM,aAAa,KAAK,EAAE,KAAK,EAAE,YAAY,GAAG;AAAA,QAC/D,KAAK;AACJ,0BAAgB;AAChB;AAAA,QACD,KAAK;AACJ,0BAAgB;AAChB;AAAA,QACD;AACC,mBAAS,OAAO,OAAO,MAAM,aAAa,KAAK,CAAC;AAChD,cAAI,MAAM,MAAM,EAAG,QAAO,KAAK,MAAM,YAAY;AACjD,cAAI,CAAC,OAAO,cAAc,MAAM,GAAG;AAClC,kBAAM,IAAI,KAAK,aAAa,iDAAiD,OAAO,gBAAgB,GAAG;AAAA,UACxG;AAAA,MACD;AACA,UAAI,iBAAiB,gBAAgB,GAAG;AACvC,cAAM,IAAI,KAAK,aAAa,+DAA+D;AAAA,MAC5F;AACA,eAAS,OAAO,MAAM,GAAG,aAAa,KAAK;AAAA,IAC5C;AAEA,QAAI,YAAY;AAChB,QAAI,OAAO,QAAQ;AAClB,kBAAY,OAAO,MAAM;AACzB,UAAI,CAAC,OAAO,cAAc,SAAS,KAAK,aAAa,GAAG;AACvD,cAAM,IAAI,KAAK,aAAa,yDAAyD,OAAO,gBAAgB,GAAG;AAAA,MAChH;AAAA,IACD;AAEA,QAAI,eAAe,GAAG;AAErB,UAAI,CAAC,OAAO,cAAc,SAAS,IAAI,eAAe,YAAY,eAAe,YAAY,MAAM,GAAG;AACrG,cAAM,IAAI,KAAK,aAAa,8DAA8D,OAAO,gBAAgB,GAAG;AAAA,MACrH;AAAA,IACD;AAEA,QAAI,UAAU;AACd,QAAI,UAAU,OAAO;AAErB,UAAM,aAAa,gBAAgB,GAAG,SAAS,GAAG,SAAS,MAAM;AACjE,UAAM,QAAQ,CAAC;AACf,QAAI,UAAU;AAEd,aAAS,IAAI,GAAG,IAAI,cAAc,EAAE,GAAG;AACtC,YAAM,UAAU,KAAK,MAAM,KAAK,OAAO,IAAI,SAAS,IAAI;AACxD,iBAAW;AACX,UAAI,UAAU,QAAS,WAAU;AACjC,UAAI,UAAU,QAAS,WAAU;AACjC,UAAI,WAAY,OAAM,KAAK,OAAO;AAAA,IACnC;AAIA,QAAI,gBAAgB,GAAG;AACtB,iBAAW;AAAA,IACZ,WAAW,gBAAgB,GAAG;AAC7B,iBAAW;AAAA,IACZ;AACA,QAAI,OAAQ,YAAW;AAIvB,QAAI,iBAAiB;AACrB,QAAI,OAAQ,mBAAkB,GAAG,SAAS,IAAI,MAAM,MAAM,KAAK,MAAM;AAErE,QAAI,iBAAiB,EAAG,QAAO,KAAK,aAAa,iBAAiB,SAAS,IAAI,cAAc,KAAK,OAAO,EAAE;AAE3G,UAAM,kBAAkB,gBAAgB,WAAW,gBAAgB,IAAI,YAAY,QAAQ,KAAK;AAChG,UAAM,gBAAgB,aAAa,OAAO,MAAM,KAAK,IAAI,IAAI;AAC7D,WAAO,KAAK;AAAA,MACX,GAAG,YAAY,gBAAgB,SAAS,IAAI,aAAa,YACnD,cAAc,GAAG,eAAe,KAAK,OAAO;AAAA,IACnD;AAAA,EACD;AAAA,EACA,UAAU;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAAA,EAEA,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,WAAW,QAAQ,MAAM,MAAM;AAC9B,QAAI,CAAC,QAAQ,SAAS,GAAG,EAAG,QAAO,KAAK,MAAM,YAAY;AAC1D,QAAI,CAAC,KAAK,aAAa,IAAI,EAAG,QAAO;AACrC,QAAI,KAAK,cAAc;AACtB,OAAC,EAAE,MAAM,IAAI,iBAAM,WAAW,KAAK,SAAS,GAAG;AAAA,IAChD;AACA,UAAM,UAAU,OAAO,MAAM,GAAG;AAChC,UAAM,eAAe,QAAQ,KAAK,MAAM,KAAK,OAAO,IAAI,QAAQ,MAAM,CAAC,EAAE,KAAK;AAC9E,WAAO,KAAK,aAAa,iBAAM,oCAAoC,YAAY,EAAE;AAAA,EAClF;AAAA,EACA,gBAAgB,CAAC,qGAAqG;AAAA,EAEtH,QAAQ,QAAQ,MAAM,MAAM;AAC3B,QAAI,CAAC,QAAQ,SAAS,GAAG,EAAG,QAAO,KAAK,MAAM,eAAe;AAC7D,UAAM,OAAO,OAAO,MAAM,GAAG;AAC7B,QAAI,CAAC,KAAK,aAAa,IAAI,EAAG,QAAO;AACrC,UAAM,UAAU,iBAAM,QAAQ,KAAK,IAAI,SAAO,IAAI,KAAK,CAAC,CAAC;AACzD,WAAO,KAAK,aAAa,iBAAM,8BAA8B,QAAQ,KAAK,IAAI,CAAC,EAAE;AAAA,EAClF;AAAA,EACA,aAAa;AAAA,IACZ;AAAA,EACD;AAAA,EAEA,UAAU,QAAQ,MAAM,MAAM;AAC7B,UAAM,IAAI,KAAK,aAAa,qDAAqD;AAAA,EAClF;AAAA,EAEA,MAAM,YAAY,QAAQ,MAAM,MAAM;AACrC,WAAO,KAAK,YAAY;AACxB,SAAK,UAAU;AACf,QAAI,CAAC,KAAK,SAAS,oBAAoB;AACtC,YAAM,IAAI,KAAK,aAAa,4CAA4C;AAAA,IACzE;AACA,QAAI,KAAK,IAAI,aAAa,MAAM,MAAM,MAAM,EAAG,OAAM,IAAI,KAAK,aAAa,oBAAoB;AAC/F,QAAI,KAAK,kBAAkB,IAAI,KAAK,EAAE,EAAG,OAAM,IAAI,KAAK,aAAa,qCAAqC;AAC1G,QAAI,CAAC,KAAK,MAAM,EAAG,QAAO,KAAK,MAAM,mBAAmB;AAExD,QAAI,CAAC,MAAM,OAAO,IAAI,KAAK,SAAS,MAAM;AAC1C,QAAI,CAAC,eAAe,KAAK,IAAI,EAAG,QAAO,WAAW,IAAI;AACtD,WAAO,UAAU,IAAI;AACrB,QAAI;AACJ,QAAI,CAAC,yDAAyD,KAAK,IAAI,GAAG;AACzE,UAAI,KAAK,SAAS,uBAAuB,GAAG;AAC3C,cAAM,IAAI,KAAK,aAAa,qEAAqE;AAAA,MAClG;AACA,UAAI;AACH,qBAAa,MAAM,KAAK,SAAS,IAAI;AAAA,MACtC,QAAQ;AACP,cAAM,IAAI,KAAK,aAAa,eAAe;AAAA,MAC5C;AAAA,IACD;AACA,QAAI,WAAW,KAAK,UAAU,OAAO,MAAM,SAAS;AACnD,YAAM,IAAI,KAAK,aAAa,4CAA4C;AAAA,IACzE;AACA,QAAI,CAAC,KAAK,iBAAkB,MAAK,mBAAmB,oBAAI,IAAI;AAC5D,SAAK,iBAAiB,IAAI,KAAK,IAAI;AAAA,MAClC,MAAM,KAAK;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,IACD,CAAC;AACD,SAAK,UAAU,wCAAwC,IAAI,GAAG,UAAU,sBAAsB,OAAO,MAAM,EAAE,GAAG;AAChH,UAAM,UAAU,uDACX,KAAK,IAAI,mCAAmC,KAAK,KAAK;AAC3D,SAAK,gBAAgB,SAAS,GAAG;AACjC,SAAK;AAAA,MACJ,iBAAM,sBAAsB,KAAK,EAAE,yBAAyB,KAAK,IAAI,2BAA2B,IAAI,KAAK,IAAI,cAC5G,UAAU,iBAAM,gBAAgB,OAAO,SAAS,MACjD,0DAA0D,KAAK,EAAE,6EACV,KAAK,EAAE;AAAA,IAC/D;AAAA,EACD;AAAA,EACA,iBAAiB,CAAC,iFAAiF;AAAA,EAEnG,MAAM,YAAY,QAAQ,MAAM,MAAM;AACrC,WAAO,KAAK,YAAY;AACxB,SAAK,SAAS,QAAQ,MAAM,IAAI;AAChC,QAAI,CAAC,KAAK,SAAS,oBAAoB;AACtC,YAAM,IAAI,KAAK,aAAa,4CAA4C;AAAA,IACzE;AACA,UAAM,SAAS,KAAK,MAAM;AAC1B,QAAI,CAAC,OAAQ,QAAO,KAAK,MAAM,mBAAmB;AAClD,UAAM,UAAU,KAAK,kBAAkB,IAAI,MAAM;AACjD,QAAI,CAAC,QAAS,OAAM,IAAI,KAAK,aAAa,GAAG,MAAM,0BAA0B;AAC7E,QAAI,WAAW,KAAK,IAAI;AACvB,YAAM,IAAI,KAAK,aAAa,2CAA2C;AAAA,IACxE;AACA,SAAK,iBAAkB,OAAO,MAAM;AACpC,SAAK,SAAS,wBAAwB,MAAM,GAAG;AAC/C,SAAK,gBAAgB,mCAAmC,GAAG;AAE3D,QAAI;AACJ,QAAI,QAAQ,YAAY;AACvB,YAAM,CAAC,OAAO,QAAQ,OAAO,IAAI,QAAQ;AACzC,YAAM,iBAAM,iBAAiB,QAAQ,IAAI,YAAY,KAAK,aAAa,MAAM;AAC7E,UAAI,QAAS,QAAO,iBAAM,sBAAsB,QAAQ,IAAI;AAAA,IAC7D,OAAO;AACN,YAAM,MAAM,uBAAQ,qBAAqB,QAAQ,MAAM,KAAK;AAC5D,UAAI,CAAC,IAAK,OAAM,IAAI,KAAK,aAAa,6BAA6B;AAAA,IACpE;AACA,WAAO,iBAAM,uDAAuD,QAAQ,IAAI;AAChF,QAAI,QAAQ,SAAS;AACpB,aAAO,iBAAM,aAAa,QAAQ,OAAO;AAAA,IAC1C,OAAO;AACN,aAAO;AAAA,IACR;AACA,SAAK,IAAI,OAAO,QAAQ,IAAI,SAAS,GAAG,EAAE;AAC1C,SAAK,iBAAiB,GAAG,KAAK,IAAI,gCAAgC,QAAQ,IAAI,GAAG;AAAA,EAClF;AAAA,EACA,iBAAiB,CAAC,uFAAuF;AAAA,EAEzG,SAAS,QAAQ,MAAM,MAAM;AAC5B,WAAO,KAAK,YAAY;AACxB,SAAK,SAAS,QAAQ,MAAM,IAAI;AAChC,QAAI,CAAC,KAAK,SAAS,oBAAoB;AACtC,YAAM,IAAI,KAAK,aAAa,4CAA4C;AAAA,IACzE;AACA,aAAS,KAAK,MAAM;AACpB,QAAI,CAAC,OAAQ,QAAO,KAAK,MAAM,gBAAgB;AAE/C,UAAM,QAAQ,KAAK,kBAAkB,IAAI,MAAM;AAC/C,QAAI,CAAC,MAAO,OAAM,IAAI,KAAK,aAAa,GAAG,MAAM,0BAA0B;AAE3E,SAAK,iBAAkB,OAAO,MAAM;AACpC,SAAK,SAAS,wBAAwB,MAAM,GAAG;AAC/C,SAAK,gBAAgB,mCAAmC,GAAG;AAC3D,SAAK,iBAAiB,GAAG,KAAK,IAAI,WAAW,MAAM,yBAAyB,MAAM,IAAI,GAAG;AAEzF,UAAM,aAAa,MAAM,IAAI,MAAM;AACnC,QAAI,CAAC,WAAY;AACjB,SAAK,SAAS,YAAY,sEAAsE;AAChG,SAAK,SAAS,YAAY,8BAA8B;AAAA,EACzD;AAAA,EACA,cAAc,CAAC,kFAAkF;AAAA,EAEjG,YAAY,QAAQ,MAAM,MAAM;AAC/B,WAAO,KAAK,YAAY;AACxB,WAAO,KAAK,MAAM,oCAAoC,KAAK,MAAM,EAAE;AAAA,EACpE;AAAA,EACA,iBAAiB,CAAC,oFAAoF;AAAA,EAEtG,cAAc,QAAQ,MAAM,MAAM;AACjC,WAAO,KAAK,YAAY;AACxB,WAAO,KAAK,MAAM,wBAAwB,KAAK,MAAM,EAAE;AAAA,EACxD;AAAA,EACA,mBAAmB;AAAA,IAClB;AAAA,IACA;AAAA,EACD;AAAA,EAEA,MAAM,KAAK,QAAQ,MAAM,MAAM,YAAY;AAC1C,QAAI,CAAC,MAAM,WAAW,CAAC,KAAK,YAAY,CAAC,MAAM,OAAO,WAAW,OAAO,GAAG;AAC1E,YAAM,IAAI,KAAK,aAAa,0CAA0C;AAAA,IACvE;AACA,QAAI,CAAC,KAAK,MAAM,EAAE,KAAK,EAAG,QAAO,KAAK,MAAM,YAAY;AACxD,QAAI,QAAQ,iBAAiB,WAAW,EAAE,GAAG;AAC5C,YAAM,IAAI,KAAK,aAAa,mEAAmE;AAAA,IAChG;AAEA,UAAM,CAAC,MAAM,OAAO,IAAI,iBAAM,WAAW,QAAQ,GAAG,EAAE,IAAI,OAAK,EAAE,KAAK,CAAC;AACvE,SAAK,eAAe;AACpB,QAAI,KAAK,kBAAkB;AAC1B,UAAI,MAAM;AACT,aAAK,SAAS,QAAQ,MAAM,IAAI;AAAA,MACjC,OAAO;AACN,aAAK,SAAS,UAAU;AAAA,MACzB;AAAA,IACD;AAEA,SAAK,aAAa;AAClB,QAAI;AACJ,QAAI,uBAAQ,UAAU,KAAK,IAAI,GAAG;AACjC,YAAM,MAAM,uBAAQ,qBAAqB,MAAM,KAAK;AACpD,WAAK,UAAU,KAAK,QAAQ,QAAQ,0BAA0B,EAAE,EAAE,QAAQ,qBAAqB,EAAE;AAAA,IAClG,WAAW,sBAAO,UAAU,KAAK,IAAI,GAAG;AACvC,YAAM,YAAY,sBAAO,UAAU,KAAK,IAAI,IAAI,CAAC,GAAG,KAAK;AACzD,UAAI,CAAC,UAAW,OAAM,IAAI,KAAK,aAAa,2BAA2B;AACvE,YAAM,iBAAM,6DAA6D,KAAK,SAAS,CAAC,KAAK,SAAS;AACtG,aAAO,iBAAM,oBAAoB,IAAI;AAAA,IACtC,OAAO;AACN,UAAI,KAAK,UAAU,KAAK,IAAI,GAAG;AAC9B,YAAI,uCAAuC,KAAK,IAAI,GAAG;AAEtD,gBAAM,iBAAM,mBAAmB,IAAI;AAAA,QACpC,WAAW,uCAAuC,KAAK,IAAI,GAAG;AAC7D,gBAAM,iBAAM,mBAAmB,IAAI;AAAA,QACpC;AAAA,MACD;AACA,UAAI,KAAK,SAAS,uBAAuB,GAAG;AAC3C,cAAM,IAAI,KAAK,aAAa,gEAAgE;AAAA,MAC7F;AACA,UAAI,CAAC,KAAK;AACT,YAAI;AACH,gBAAM,CAAC,OAAO,QAAQ,OAAO,IAAI,MAAM,KAAK,SAAS,IAAI;AACzD,gBAAM,iBAAM,iBAAiB,IAAI,YAAY,KAAK,aAAa,MAAM;AACrE,cAAI,QAAS,QAAO,iBAAM,sBAAsB,IAAI;AAAA,QACrD,QAAQ;AACP,gBAAM,IAAI,KAAK,aAAa,qCAAqC;AAAA,QAClE;AAAA,MACD;AAAA,IACD;AACA,QAAI,SAAS;AACZ,UAAI,KAAK,UAAU,OAAO,MAAM,SAAS;AACxC,cAAM,IAAI,KAAK,aAAa,4CAA4C;AAAA,MACzE;AACA,aAAO,iBAAM,cAAc,OAAO;AAAA,IACnC;AAEA,SAAK,aAAa,GAAG;AAAA,EACtB;AAAA,EACA,UAAU;AAAA,IACT;AAAA,IACA;AAAA,EACD;AAAA,EAEA,YAAY,QAAQ,MAAM,MAAM,YAAY;AAC3C,QAAI,CAAC,UAAU,CAAC,OAAO,WAAW,GAAG,KAAK,CAAC,KAAK,gBAAgB,GAAG;AAClE,aAAO,KAAK,MAAM,mBAAmB;AAAA,IACtC;AACA,WAAO,KAAK,YAAY;AACxB,SAAK,gBAAgB;AACrB,SAAK,MAAM,QAAQ,EAAE,iBAAiB,gBAAgB,CAAC;AAAA,EACxD;AAAA,EACA,iBAAiB;AAAA,IAChB;AAAA,EACD;AAAA,EAEA,SAAS;AAAA,EACT,SAAS;AAAA,EACT,MAAM,aAAa,QAAQ,MAAM,MAAM,YAAY;AAClD,SAAK,aAAa;AAClB,QAAI,QAAQ,iBAAiB,WAAW,EAAE,GAAG;AAC5C,YAAM,IAAI,KAAK,aAAa,mEAAmE;AAAA,IAChG;AACA,QAAI,CAAC,KAAK,cAAe,OAAM,IAAI,KAAK,aAAa,gDAAgD;AACrG,aAAS,KAAK,MAAM;AACpB,QAAI,CAAC,OAAQ,UAAS,KAAK;AAC3B,QAAI;AACJ,QAAI;AACH,kBAAY,UAAM,gBAAI,WAAW,OAAO,OAAO,IAAI,UAAU,MAAM,OAAO,EAAE,IAAI;AAAA,IACjF,SAAS,GAAQ;AAChB,UAAI,EAAE,QAAQ,SAAS,WAAW,EAAG,OAAM,IAAI,KAAK,aAAa,SAAS,MAAM,oBAAoB;AACpG,YAAM,IAAI,KAAK,aAAa,EAAE,OAAO;AAAA,IACtC;AAEA,UAAM,SAAS,KAAK,MAAM,SAAS;AACnC,UAAM,OAAO,IAAI,KAAK,OAAO,eAAe,GAAI;AAChD,UAAM,WAAW,KAAK,IAAI,IAAI,KAAK,QAAQ;AAG3C,UAAM,aAAa,WAAW,KAAK,KAAK,KAAK,MAC5C,KAAK,iBAAiB,UAAU,EAAE,WAAW,EAAE,CAAC,IAChD;AACD,SAAK,aAAa,iBAAM,iBAAiB,MAAM,gBAAgB,UAAU,qBAAqB,KAAK,aAAa,CAAC,GAAG;AAAA,EACrH;AAAA,EACA,kBAAkB,CAAC,qEAAqE;AAAA,EAExF,GAAG,QAAQ,MAAM,MAAM;AACtB,QAAI,CAAC,KAAK,aAAa,EAAG,QAAO;AACjC,WAAO,KAAK;AAAA,MACX;AAAA,IAID;AAAA,EACD;AAAA,EACA,QAAQ,CAAC,0EAA0E;AAAA,EAEnF,KAAK,QAAQ,MAAM,MAAM,YAAY;AAGpC,aAAS,KAAK,QAAQ,OAAO,KAAK,SAAS,SAAS,KAAK,IAAI,UAAU,KAAK,QAAQ,SAAS,GAAG,IAAI,IAAI,EAAE,EAAE,UAAU;AACtH,QAAI,CAAC,OAAQ,QAAO,KAAK,MAAM,YAAY;AAC3C,QAAI,OAAO,UAAU,KAAM,OAAM,IAAI,KAAK,aAAa,+CAA+C;AACtG,QAAI,OAAO,SAAS,MAAM,CAAC,OAAO,SAAS,IAAI,KAAK,CAAC,OAAO,SAAS,KAAK,KAAK,KAAK,gBAAgB,GAAG;AACtG,aAAO,KAAK,UAAU,SAAS,MAAM,QAAQ;AAAA,IAC9C;AAEA,QAAI,KAAK,MAAM,SAAS,eAAe,SAAS,KAAK,gBAAgB,GAAG;AACvE,eAAS,KAAK,OAAO,MAAM;AAC3B,UAAI,CAAC,OAAQ,OAAM,IAAI,KAAK,aAAa,eAAe;AAAA,IACzD;AAEA,SAAK,eAAe,MAAM,OAAO;AACjC,SAAK,aAAa,IAAI;AAEtB,QAAI,KAAK,cAAc;AACtB,aAAO,6BAA6B,KAAK,qBAAqB,MAAM,CAAC;AAAA,IACtE,OAAO;AACN,WAAK,aAAa,KAAK,qBAAqB,MAAM,CAAC;AAAA,IACpD;AAAA,EACD;AAAA,EACA,UAAU;AAAA,IACT;AAAA,IACA;AAAA,EACD;AAAA,EAEA,YAAY,QAAQ,MAAM,MAAM;AAC/B,aAAS,KAAK,MAAM;AACpB,QAAI,UAAU,KAAK,WAAW,WAAW,IAAI,aAAa,GAAG;AAC5D,WAAK,UAAU,aAAa;AAAA,IAC7B;AACA,WAAO,KAAK,MAAM,sBAAsB,SAAS,IAAI,MAAM,KAAK,EAAE,EAAE;AAAA,EACrE;AAAA,EAEA,oBAAoB,QAAQ,MAAM,MAAM;AACvC,aAAS,OAAO,KAAK;AACrB,QAAI,CAAC,OAAO,QAAQ;AACnB,aAAO,KAAK,WAAW,sBAAsB;AAAA,IAC9C;AACA,UAAM,OAAO,KAAK,eAAe,QAAQ,OAAO;AAAA,MAC/C,YAAY;AAAA,MAAM,QAAQ;AAAA,IAC3B,CAAC;AACD,QAAI,CAAC,KAAK,SAAS,CAAC,GAAG;AACtB,aAAO,KAAK,WAAW,sBAAsB;AAAA,IAC9C;AACA,UAAM,SAAS,IAAI,QAAQ,IAAI,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC;AACnD,QAAI,OAAO,eAAe,UAAU;AACnC,aAAO,KAAK,WAAW,eAAe,MAAM,mBAAmB;AAAA,IAChE;AACA,WAAO,KAAK;AACZ,UAAM,eAAe,KAAK,KAAK,OAAO,CAAC,KAAK,EAAE;AAC9C,QAAI,cAAc;AACjB,WAAK,UAAU;AACf,UAAI,CAAC,MAAM,IAAI,YAAY,GAAG;AAC7B,eAAO,KAAK,WAAW,SAAS,YAAY,cAAc;AAAA,MAC3D;AAAA,IACD;AACA,WAAO,KAAK;AACZ,UAAM,eAAe,CAAC;AACtB,QAAI,KAAK,OAAO,CAAC,GAAG;AACnB,YAAM,OAAO,KAAK,KAAK,CAAC,EAAE,MAAM,GAAG,EAAE,IAAI,OAAK,EAAE,KAAK,CAAC;AACtD,mBAAa,KAAK,GAAG,IAAI;AAAA,IAC1B;AACA,WAAO,KAAK;AAEZ,eAAW,KAAK,MAAM;AACrB,UAAI,EAAE,SAAS,UAAU,EAAG;AAC5B,UAAI,OAAO;AACX,UAAI,KAAK,SAAS,MAAM,GAAG;AAC1B,eAAO,KAAK,MAAM,GAAG,EAAE;AAAA,MACxB;AACA,YAAM,OAAO,IAAI,KAAK,SAAS,IAAI;AACnC,UAAI,CAAC,QAAQ,KAAK,eAAe,UAAU;AAC1C,eAAO,KAAK,WAAW,6BAA6B,IAAI,EAAE;AAAA,MAC3D;AACA,YAAM,KAAK,KAAK,MAAM,KAAK,KAAK,IAAI;AACpC,UAAI,MAAM,KAAK,CAAC,EAAE,CAAC;AAGnB,UAAI,IAAI,WAAW,GAAG,GAAG;AACxB,cAAM;AAAA,MACP;AAEA,YAAM,YAAY,IAAI,QAAQ,aAAa,MAAM;AACjD,UAAI,KAAK,UAAU;AAClB,cAAM,UAAU,KAAK,GAAG,EAAE,UAAU,EAAE,CAAC,KAAK;AAC5C,cAAM,KAAK,GAAG,EAAE,MAAM,EAAE,CAAC,KAAK;AAC9B,YAAI,SAAS;AACZ,gBAAM,UAAU,UAAU,WAAW,IAAI,EAAE;AAC3C,cAAI,OAAO,YAAY,aAAa;AACnC,gBAAI,YAAY,KAAK;AACpB,2BAAa,KAAK,MAAM,KAAK,IAAI,MAAM,GAAG,EAAE;AAAA,YAC7C;AAAA,UACD,OAAO;AACN,yBAAa,KAAK,GAAG,KAAK,IAAI,MAAM,GAAG,EAAE;AAAA,UAC1C;AAAA,QACD,OAAO;AACN,cAAI,UAAU,WAAW,IAAI,EAAE,GAAG;AACjC,yBAAa,KAAK,IAAI,KAAK,IAAI,EAAE;AAAA,UAClC;AAAA,QACD;AAAA,MACD,OAAO;AAEN,YAAI,OAAO,UAAU,IAAI,EAAE,GAAG;AAC7B;AAAA,QACD;AACA,YAAI,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,GAAG;AAE/B;AAAA,QACD;AACA,qBAAa,KAAK,GAAG,CAAC,MAAM,MAAM,EAAE,GAAG,KAAK,IAAI,EAAE;AAAA,MACnD;AAAA,IACD;AACA,UAAM,aAAa,GAAG,OAAO,EAAE,MAAM,aAAa,KAAK,GAAG,CAAC;AAC3D,QAAI;AACH,UAAI,QAAQ,SAAS,UAAU;AAAA,IAChC,SAAS,GAAQ;AAChB,WAAK,YAAY,eAAe,OAAO,EAAE,EAAE;AAC3C,aAAO,KAAK,WAAW,EAAE,OAAO;AAAA,IACjC;AACA,QAAI,cAAc;AACjB,WAAK,UAAU,aAAa;AAC5B,aAAO,KAAK,MAAM,cAAc,YAAY,IAAI,UAAU,EAAE;AAAA,IAC7D,OAAO;AACN,WAAK,WAAW;AAAA,QACf,qBAAqB,OAAO,EAAE;AAAA,6EAC0B,UAAU,4CACnC,UAAU;AAAA,MAC1C;AAAA,IACD;AAAA,EACD;AAAA,EAEA,UAAU,QAAQ,MAAM,MAAM;AAC7B,SAAK,SAAS,UAAU;AACxB,QAAI,OAAO,KAAK,YAAY;AAC5B,UAAM,aAAa,CAAC,SAAiB;AAAA,IAEpC,OAAO,OAAO,OAAO,MAAM,EAAE,MAAM,CAAC,EAAE,KAAK,OAAM,EAAU,IAAI,CAAC;AAEjE,WAAO,KAAK;AAAA,MACX,OAAK,EAAE,sBAAsB,WAAW,EAAE,kBAAkB,KAAK,EAAE,YAAY,KAAK,SAAS;AAAA,IAC9F;AACA,WAAO,iBAAM,OAAO,MAAM,OAAK,EAAE,OAAO;AACxC,QAAI,aAAa,oBAAI,IAAsB;AAC3C,eAAW,OAAO,MAAM;AACvB,YAAM,YAAY,IAAI,QAAQ,MAAM,GAAG,EAAE,CAAC;AAC1C,YAAM,OAAO,WAAW,IAAI,SAAS,KAAK,CAAC;AAC3C,WAAK,KAAK,IAAI,QAAQ,KAAK,CAAC;AAC5B,iBAAW,IAAI,WAAW,IAAI;AAAA,IAC/B;AACA,QAAI,MAAM;AACV,iBAAa,IAAI,IAAI,iBAAM,OAAO,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC,EAAE,OAAO,MAAM,QAAQ,WAAW,CAAC,CAAC;AACzF,eAAW,CAAC,WAAW,OAAO,KAAK,YAAY;AAC9C,UAAI,QAAQ,SAAS,KAAK,QAAQ,CAAC,EAAE,SAAS,GAAG,GAAG;AACnD,eAAO,sCAAsC,SAAS;AACtD,eAAO,QAAQ,IAAI,OAAK,WAAW,CAAC,EAAE,EAAE,KAAK,QAAQ;AACrD,eAAO;AAAA,MACR,OAAO;AACN,eAAO,UAAU,QAAQ,CAAC,CAAC;AAC3B,cAAM,OAAO,KAAK,SAAS,YAAY,MAAM;AAC7C,YAAI,MAAM;AACT,gBAAM,OAAO,MAAM,QAAQ,IAAI,IAC9B,KAAK,KAAK,KAAK,IAAI,OAAO,SAAS,aAClC,8CAA8C,QAAQ,CAAC,IAAI,MAAM,wBAAwB;AAC3F,iBAAO,OAAO,kBAAkB,IAAI,qBAAqB;AAAA,QAC1D;AAAA,MACD;AACA,aAAO;AAAA,IACR;AACA,SAAK,aAAa,GAAG;AAAA,EACtB;AAAA,EACA,eAAe,CAAC,2FAA2F;AAAA,EAE3G,QAAQ;AAAA,EACR,QAAQ,QAAQ,MAAM,MAAM;AAC3B,SAAK,SAAS,MAAM;AACpB,aAAS,KAAK,MAAM;AACpB,QAAI,CAAC,QAAQ;AACZ,aAAO,KAAK,MAAM,eAAe;AAAA,IAClC;AACA,WAAO,KAAK,MAAM,sBAAsB,MAAM,EAAE;AAAA,EACjD;AAAA,EACA,aAAa;AAAA,IACZ;AAAA,EACD;AAAA,EAEA,UAAU,QAAQ,MAAM,MAAM;AAC7B,WAAO,KAAK,YAAY;AACxB,QAAI,CAAC,KAAK,SAAS,QAAQ,QAAQ;AAClC,YAAM,IAAI,KAAK,aAAa,gDAAgD;AAAA,IAC7E;AACA,SAAK,aAAa;AAClB,SAAK,UAAU,iBAAM,yCAAyC,iBAAM,cAAc,KAAK,SAAS,MAAM,CAAC,QAAQ;AAAA,EAChH;AAAA,EACA,eAAe;AAAA,IACd;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAAA,EAEA,SAAS,QAAQ,MAAM,MAAM;AAC5B,WAAO,KAAK,YAAY;AACxB,SAAK,SAAS,QAAQ,MAAM,IAAI;AAChC,aAAS,OAAO,KAAK;AACrB,QAAI,CAAC,KAAK,MAAM,EAAE,QAAQ;AACzB,aAAO,KAAK,MAAM,iBAAiB;AAAA,IACpC;AACA,QAAI,CAAC,KAAK,SAAS,OAAQ,MAAK,SAAS,SAAS,CAAC;AACnD,SAAK,SAAS,OAAO,KAAK,MAAM;AAChC,SAAK,iBAAiB,GAAG,KAAK,IAAI,qBAAqB,MAAM,6BAA6B;AAC1F,SAAK,OAAO,YAAY,MAAM,MAAM;AACpC,SAAK,aAAa;AAAA,EACnB;AAAA,EACA,cAAc,CAAC,mGAAmG;AAAA,EAElH,YAAY,QAAQ,MAAM,MAAM;AAC/B,WAAO,KAAK,YAAY;AACxB,SAAK,SAAS,QAAQ,MAAM,IAAI;AAChC,QAAI,CAAC,KAAK,MAAM,GAAG;AAClB,aAAO,KAAK,MAAM,iBAAiB;AAAA,IACpC;AACA,UAAM,QAAQ,OAAO,KAAK,MAAM,CAAC,IAAI;AACrC,QAAI,MAAM,KAAK,GAAG;AACjB,YAAM,IAAI,KAAK,aAAa,wBAAwB,MAAM,qBAAqB;AAAA,IAChF;AACA,QAAI,CAAC,KAAK,SAAS,SAAS,KAAK,GAAG;AACnC,YAAM,IAAI,KAAK,aAAa,SAAS,QAAQ,CAAC,aAAa;AAAA,IAC5D;AACA,UAAM,QAAQ,KAAK,SAAS,OAAO,OAAO,OAAO,CAAC,EAAE,CAAC;AACrD,SAAK,aAAa;AAClB,SAAK,iBAAiB,GAAG,KAAK,IAAI,kBAAkB,QAAQ,CAAC,8BAA8B;AAC3F,SAAK,OAAO,eAAe,MAAM,KAAK;AAAA,EACvC;AAAA,EACA,iBAAiB,CAAC,wFAAwF;AAAA,EAE1G,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,aAAa,QAAQ,MAAM,MAAM;AAChC,WAAO,KAAK,YAAY;AACxB,WAAO,KAAK,MAAM,qBAAqB,IAAI,EAAE;AAAA,EAC9C;AACD;AAEO,MAAM,WAA0B;AAAA,EACtC,SAAS,MAAM,OAAO,OAAO;AAC5B,QAAI,UAAU,SAAS,CAAC,OAAO,aAAa,CAAC,OAAO,KAAK,EAAE,KAAK,OAAK,EAAE,WAAW,OAAO,CAAC,EAAG;AAC7F,SAAK,KAAK,SAAS;AAAA,MAClB;AAAA,MACA,CAAC,OAAO,OAAO,KAAK,QAAQ;AAAA,IAC7B;AAAA,EACD;AACD;AAEO,MAAM,QAAwB;AAAA,EACpC,MAAM,QAAQ,OAAO,MAAM;AAC1B,SAAK,SAAS,MAAM;AACpB,SAAK,QAAQ;AACb,UAAM,SAAS,KAAK,MAAM,MAAM,CAAC;AACjC,QAAI,CAAC,QAAQ;AACZ,YAAM,IAAI,KAAK,aAAa,uDAAuD;AAAA,IACpF;AACA,SAAK,SAAS,IAAI,MAAM;AACxB,QAAI,CAAC,OAAO,WAAW;AACtB,YAAM,IAAI,KAAK,aAAa,kDAAkD;AAAA,IAC/E;AACA,UAAM,WAAW,MAAM,MAAM,KAAK;AAClC,UAAM,MAAM,SAAS,QAAQ;AAC7B,QAAI,MAAM,KAAM;AACf,YAAM,IAAI,KAAK,aAAa,uEAAuE;AAAA,IACpG;AACA,QAAI,MAAM,GAAG,KAAK,MAAM,GAAG;AAC1B,YAAM,IAAI,KAAK,aAAa,yEAAyE,QAAQ,IAAI;AAAA,IAClH;AACA,UAAM,UAAU,KAAK,IAAI,WAAW;AACpC,UAAM,UAAU,MAAM,KAAK,SAAS;AAAA,MACnC;AAAA,MACA,CAAC,QAAQ,QAAQ,GAAG;AAAA,IACrB;AACA,QAAI,MAAM,+CAA+C,MAAM;AAC/D,WAAO,GAAG,QAAQ,MAAM;AAExB,UAAM,UAAU,CAAC;AACjB,UAAM,UAAU,oBAAI,IAAY;AAChC,UAAM,aAAa,oBAAI,IAAsB;AAC7C,eAAW,UAAU,SAAS;AAC7B,YAAM,KAAK,OAAO,YAAY,SAAS,OAAO,QAAQ,OAAO;AAC7D,cAAQ,IAAI,EAAE;AACd,UAAI,UAAU,WAAW,IAAI,EAAE;AAC/B,UAAI,CAAC,SAAS;AACb,kBAAU,CAAC;AAAA,MACZ;AACA,UAAI,CAAC,QAAQ,SAAS,OAAO,EAAE,GAAG;AACjC,gBAAQ,KAAK,OAAO,EAAE;AAAA,MACvB;AACA,iBAAW,IAAI,IAAI,OAAO;AAC1B,UAAI,CAAC,QAAQ,OAAO,EAAE,EAAG,SAAQ,OAAO,EAAE,IAAI;AAC9C,cAAQ,OAAO,EAAE;AAAA,IAClB;AACA,WAAO,qDAAqD,UAAU,uBAAuB,EAAE;AAC/F,eAAW,MAAM,SAAS;AACzB,YAAM,MAAM,WAAW,IAAI,EAAE,KAAK,CAAC;AACnC,aAAO;AACP,aAAO,oBAAoB,OAAO,OAAO,IAAI,UAAU,EAAE,KAAK,EAAE;AAChE,YAAM,QAAQ,IAAI,IAAI,OAAK,6CAA6C,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,IAAI;AAChG,aAAO,GAAG,UAAU,OAAO,KAAK,UAAU,EAAE;AAAA,IAC7C;AACA,WAAO;AACP,QAAI,SAAS;AACZ,aAAO;AACP,iBAAW,MAAM,SAAS;AACzB,eAAO,WAAW,EAAE,YAAY,QAAQ,EAAE,CAAC;AAAA,MAC5C;AACA,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAAA,EACA,OAAO,OAAO,MAAM;AACnB,UAAM,OAAO,KAAK,YAAY;AAC9B,SAAK,QAAQ,YAAY,KAAK,KAAK;AACnC,UAAM,SAAS,KAAK,SAAS,UAAU,CAAC;AACxC,QAAI;AACJ,QAAI,CAAC,OAAO,QAAQ;AACnB,YAAM;AACN,aAAO;AAAA,IACR;AACA,UAAM,0CAA0C,KAAK,KAAK,KAAK,OAAO,MAAM;AAC5E,eAAW,CAAC,GAAG,KAAK,KAAK,OAAO,QAAQ,GAAG;AAC1C,aAAO,iBAAM,WAAW,IAAI,CAAC,MAAM,KAAK;AAAA,IACzC;AACA,WAAO;AACP,WAAO;AAAA,EACR;AAAA,EACA,YAAY,OAAO,MAAM;AACxB,UAAM,QAAQ,OAAO,OAAO,IAAI,KAAK,QAAQ,EAAE,OAAO,UAAQ,KAAK,eAAe,QAAQ;AAC1F,UAAM,WAAW;AACjB,SAAK,QAAQ;AACb,QAAI,YAAY;AAChB,UAAM,SAAS;AAAA,MACd;AAAA,MACA;AAAA,MACA,uFAAuF,QAAQ;AAAA,MAC/F;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,UAAM,WAAW;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,eAAW,QAAQ,OAAO;AACzB,UAAI,KAAK,SAAU;AACnB,YAAM,OAAO,KAAK,OAAO,KAAK,OAAO;AACrC,eAAS,KAAK,WAAW,KAAK,IAAI,YAAY,IAAI,YAAY;AAAA,IAC/D;AACA,aAAS;AAAA,MACR;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,eAAW,QAAQ,OAAO;AACzB,UAAI,CAAC,KAAK,SAAU;AACpB,YAAM,OAAO,KAAK,OAAO,KAAK,OAAO;AACrC,eAAS,KAAK,WAAW,KAAK,IAAI,YAAY,IAAI,YAAY;AAAA,IAC/D;AACA,aAAS,KAAK,gBAAgB;AAC9B,iBAAa,GAAG,OAAO,OAAO,QAAQ,EAAE,KAAK,EAAE,CAAC;AAChD,WAAO;AAAA,EACR;AAAA,EACA,YAAY,OAAO,MAAM;AACxB,SAAK,QAAQ;AACb,UAAM,QAAQ,OAAO,OAAO,IAAI,KAAK,QAAQ,EAAE,OAAO,UAAQ,KAAK,eAAe,QAAQ;AAC1F,QAAI,MAAM;AACV,WAAO,mDAAmD,KAAK,MAAM;AACrE,WAAO,iCAAiC,KAAK,WAAW;AACxD,WAAO;AACP,UAAM,WAAW,KAAK,MAAM,CAAC,CAAC;AAC9B,UAAM,SAAS,IAAI,QAAQ,IAAI,QAAQ;AACvC,QAAI,CAAC,YAAY,OAAO,eAAe,UAAU;AAChD,UAAI,UAAU;AACb,eAAO,0CAA0C,QAAQ;AAAA,MAC1D;AACA,aAAO;AACP,aAAO,wDAAwD,IAAI,GAAG;AACtE,aAAO;AACP,aAAO;AACP,aAAO;AAAA,IACR;AAEA,WAAO;AACP,UAAM,YAAY,IAAI,QAAQ,aAAa,MAAM;AACjD,UAAM,MAAM,CAAC,UAAU,QAAQ,IAAI,aAAa;AAChD,WAAO,WAAW,OAAO,IAAI;AAC7B,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,QAAI,KAAK,aAAa;AACtB,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,eAAW,QAAQ,OAAO;AACzB,UAAI,KAAK,SAAU;AACnB,YAAM,OAAO,KAAK,QAAQ;AAC1B,YAAM,KAAK,KAAK,KAAK,IAAI;AACzB,aAAO;AACP,aAAO,OAAO,KAAK,IAAI,YAAY,IAAI;AACvC,aAAO,oCAAoC,EAAE,KAAK,UAAU,IAAI,EAAE,IAAI,YAAY,EAAE;AACpF,aAAO;AACP,UAAI,KAAK,GAAG,EAAE,KAAK,EAAE,GAAG;AAAA,IACzB;AACA,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AACP,eAAW,QAAQ,OAAO;AACzB,UAAI,CAAC,KAAK,SAAU;AACpB,YAAM,OAAO,KAAK,QAAQ;AAC1B,aAAO;AACP,YAAM,KAAK,KAAK,KAAK,IAAI;AACzB,YAAM,WAAW,UAAU,WAAW,IAAI,EAAE;AAC5C,aAAO,OAAO,KAAK,IAAI,YAAY,IAAI;AACvC,aAAO,6CAA6C,EAAE,uBAAuB,WAAW,YAAY,EAAE;AACtG,aAAO,uBAAuB,EAAE,eAAe,YAAY,EAAE;AAC7D,UAAI,KAAK,GAAG,EAAE,aAAa,EAAE,UAAU;AACvC,UAAI,KAAK,GAAG,EAAE,SAAS,EAAE,MAAM;AAC/B,aAAO;AAAA,IACR;AACA,WAAO;AACP,UAAM,IAAI,QAAQ,WAAW,wBAAwB,IAAI,KAAK,KAAK,CAAC,EAAE;AACtE,WAAO;AACP,WAAO;AACP,WAAO;AACP,WAAO;AAAA,EACR;AAAA,EACA,YAAY,OAAO,MAAM;AACxB,SAAK,QAAQ;AACb,UAAM,OAAO,KAAK,YAAY;AAE9B,QAAI,MAAM;AACV,QAAI,CAAC,KAAK,MAAO,QAAO,MAAM;AAC9B,QAAI,CAAC,KAAK,QAAS;AACnB,SAAK,SAAS,QAAQ,MAAM,IAAI;AAEhC,UAAM,oBAAoB,iBAAM,OAAO,CAAC,GAAG,YAAY,eAAe,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,MAC/F,MAAM,UACN;AACD,UAAM,KAAK,oBAAI,IAAI;AACnB,eAAW,CAAC,IAAI,KAAK,KAAK,mBAAmB;AAC5C,SAAG,IAAI,IAAI,KAAK;AAAA,IACjB;AACA,WAAO,YAAY,qBAAqB,IAAI,IAAI;AAChD,WAAO;AAAA,EACR;AAAA,EACA,kBAAkB,OAAO,MAAM;AAC9B,SAAK,QAAQ;AACb,QAAI,MAAM;AACV,QAAI,CAAC,KAAK,MAAO,QAAO,MAAM;AAC9B,SAAK,SAAS,MAAM;AAEpB,UAAM,oBAAoB,iBAAM,OAAO,CAAC,GAAG,YAAY,eAAe,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,MACpF,MAAM,UACN;AACD,UAAM,KAAK,oBAAI,IAAI;AACnB,eAAW,cAAc,mBAAmB;AAC3C,SAAG,IAAI,WAAW,CAAC,GAAG,WAAW,CAAC,CAAC;AAAA,IACpC;AACA,WAAO,YAAY,qBAAqB,IAAI,IAAI;AAChD,WAAO;AAAA,EACR;AAAA,EACA,UAAU,MAAM;AACf,UAAM,OAAO,MAAM,IAAI,KAAK,CAAC,CAAC;AAC9B,SAAK,SAAS,QAAQ,MAAM,IAAI;AAChC,QAAI,CAAC,KAAK,iBAAkB,MAAK,mBAAmB,oBAAI,IAAI;AAC5D,QAAI,KAAK,iBAAiB,OAAO,EAAG,QAAO,+BAA+B,KAAK,KAAK;AACpF,QAAI,MAAM,sDAAsD,KAAK,KAAK;AAC1E,eAAW,CAAC,QAAQ,KAAK,KAAK,KAAK,kBAAkB;AACpD,aAAO,WAAW,MAAM,IAAI;AAC5B,aAAO,kCAAkC,MAAM;AAC/C,aAAO,mCAAmC,MAAM,IAAI,KAAK,MAAM,IAAI;AACnE,aAAO,6BAA6B,MAAM,OAAO;AACjD,aAAO,mCAAmC,KAAK,CAAC,CAAC,kBAAkB,MAAM;AACzE,aAAO;AACP,aAAO;AACP,aAAO,mCAAmC,KAAK,CAAC,CAAC,eAAe,MAAM;AACtE,aAAO;AACP,aAAO;AACP,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AACD;AAEA,QAAQ,SAAS,MAAM;AACtB,MAAI,YAAY;AAChB,OAAK,iBAAiB;AAAA,IACrB;AAAA,IAAY;AAAA,IAAU;AAAA,IAAa;AAAA,IAAY;AAAA,IAAe;AAAA,IAAmB;AAAA,IACjF;AAAA,IAAgB;AAAA,IAAoB;AAAA,IAAuB;AAAA,IAAiB;AAAA,IAC5E;AAAA,EACD;AACD,CAAC;",
  "names": []
}

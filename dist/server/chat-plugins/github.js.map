{
  "version": 3,
  "sources": ["../../../server/chat-plugins/github.ts"],
  "sourcesContent": ["/**\n * Chat plugin to view GitHub events in a chatroom.\n * By Mia, with design / html from xfix's original bot, https://github.com/xfix/GitHub-Bot-Legacy/\n * @author mia-pi-git\n */\n\nimport { FS, Utils } from '../../lib';\n\nconst STAFF_REPOS = Config.staffrepos || [\n\t'pokemon-showdown', 'pokemon-showdown-client', 'Pokemon-Showdown-Dex', 'pokemon-showdown-loginserver',\n];\nconst COOLDOWN = 10 * 60 * 1000;\n\nexport const gitData: GitData = JSON.parse(FS(\"config/chat-plugins/github.json\").readIfExistsSync() || \"{}\");\n\ninterface GitHookHandler {\n\ton(event: 'pull_request', callback: (repo: string, ref: string | undefined, result: PullRequest) => void): void;\n\ton(event: 'push', callback: (repo: string, ref: string, result: Push) => void): void;\n\ton(event: string, callback: (repo: string, ref: string | undefined, result: any) => void): void;\n\tlisten(): void;\n\tserver: import('http').Server;\n}\n\ninterface Push {\n\tcommits: Commit[];\n\tsender: { login: string };\n\tcompare: string;\n}\n\ninterface PullRequest {\n\taction: string;\n\tnumber: number;\n\tpull_request: {\n\t\turl: string,\n\t\thtml_url: string,\n\t\ttitle: string,\n\t\tuser: {\n\t\t\tlogin: string,\n\t\t\thtml_url: string,\n\t\t},\n\t\tmerge_commit_sha: string,\n\t};\n\tsender: { login: string };\n}\n\ninterface Commit {\n\tid: string;\n\tmessage: string;\n\tauthor: { name: string, avatar_url: string };\n\turl: string;\n}\n\ninterface GitData {\n\tusernames?: { [username: string]: string };\n\tbans?: { [username: string]: string };\n}\n\nexport const GitHub = new class {\n\treadonly hook: GitHookHandler | null = null;\n\tupdates: { [k: string]: number } = Object.create(null);\n\tconstructor() {\n\t\t// config.github: https://github.com/nlf/node-github-hook#readme\n\t\tif (!Config.github) return;\n\n\t\ttry {\n\t\t\tthis.hook = require('githubhook')({\n\t\t\t\tlogger: {\n\t\t\t\t\tlog: (line: string) => Monitor.debug(line),\n\t\t\t\t\terror: (line: string) => Monitor.notice(line),\n\t\t\t\t},\n\t\t\t\t...Config.github,\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tMonitor.crashlog(err, \"GitHub hook\");\n\t\t}\n\t\tthis.listen();\n\t}\n\tlisten() {\n\t\tif (!this.hook) return;\n\t\tthis.hook.listen();\n\t\tthis.hook.on('push', (repo, ref, result) => this.handlePush(repo, ref, result));\n\t\tthis.hook.on('pull_request', (repo, ref, result) => this.handlePull(repo, ref, result));\n\t}\n\tprivate getRepoName(repo: string) {\n\t\tswitch (repo) {\n\t\tcase 'pokemon-showdown':\n\t\t\treturn 'server';\n\t\tcase 'pokemon-showdown-client':\n\t\t\treturn 'client';\n\t\tcase 'Pokemon-Showdown-Dex':\n\t\t\treturn 'dex';\n\t\tdefault:\n\t\t\treturn repo.toLowerCase();\n\t\t}\n\t}\n\thandlePush(repo: string, ref: string, result: Push) {\n\t\tconst branch = /[^/]+$/.exec(ref)?.[0] || \"\";\n\t\tif (branch !== 'master') return;\n\t\tconst messages: { [k: string]: string[] } = {\n\t\t\tstaff: [],\n\t\t\tdevelopment: [],\n\t\t};\n\t\tfor (const commit of result.commits) {\n\t\t\tconst { message, url } = commit;\n\t\t\tconst [shortMessage] = message.split('\\n\\n');\n\t\t\tconst username = this.getUsername(commit.author.name);\n\t\t\tconst repoName = this.getRepoName(repo);\n\t\t\tconst id = commit.id.substring(0, 6);\n\t\t\tmessages.development.push(\n\t\t\t\tUtils.html`[<span style=\"color:#FF00FF\">${repoName}</span>] <a href=\"${url}\" style=\"color:#606060\">${id}</a> ${shortMessage} <span style=\"color:#909090\">(${username})</span>`\n\t\t\t);\n\t\t\tmessages.staff.push(Utils.html`[<span style=\"color:#FF00FF\">${repoName}</span>] <a href=\"${url}\">${shortMessage}</a> <span style=\"color:#909090\">(${username})</span>`);\n\t\t}\n\t\tfor (const k in messages) {\n\t\t\tthis.report(k as RoomID, repo, messages[k as RoomID]);\n\t\t}\n\t}\n\thandlePull(repo: string, ref: string | undefined, result: PullRequest) {\n\t\tif (this.isRateLimited(result.number)) return;\n\t\tif (this.isGitbanned(result)) return;\n\t\tconst url = result.pull_request.html_url;\n\t\tconst action = this.isValidAction(result.action);\n\t\tif (!action) return;\n\t\tconst repoName = this.getRepoName(repo);\n\t\tconst userName = this.getUsername(result.sender.login);\n\t\tconst title = result.pull_request.title;\n\t\tlet buf = Utils.html`[<span style=\"color:#FF00FF\">${repoName}</span>] <span style=\"color:#909090\">${userName}</span> `;\n\t\tbuf += Utils.html`${action} <a href=\"${url}\">PR#${result.number}</a>: ${title}`;\n\t\tthis.report('development', repo, buf);\n\t}\n\treport(roomid: RoomID, repo: string, messages: string[] | string) {\n\t\tif (!STAFF_REPOS.includes(repo) && roomid === 'staff') return;\n\t\tif (Array.isArray(messages)) messages = messages.join('<br />');\n\t\tRooms.get(roomid)?.add(`|c| GitHub|/raw <div class=\"infobox\">${messages}</div>`).update();\n\t}\n\tisGitbanned(result: PullRequest) {\n\t\tif (!gitData.bans) return false;\n\t\treturn gitData.bans[result.sender.login] || gitData.bans[result.pull_request.user.login];\n\t}\n\tisRateLimited(prNumber: number) {\n\t\tif (this.updates[prNumber]) {\n\t\t\tif (this.updates[prNumber] + COOLDOWN > Date.now()) return true;\n\t\t\tthis.updates[prNumber] = Date.now();\n\t\t\treturn false;\n\t\t}\n\t\tthis.updates[prNumber] = Date.now();\n\t\treturn false;\n\t}\n\tisValidAction(action: string) {\n\t\tif (action === 'synchronize') return 'updated';\n\t\tif (action === 'review_requested') {\n\t\t\treturn 'requested a review for';\n\t\t} else if (action === 'review_request_removed') {\n\t\t\treturn 'removed a review request for';\n\t\t}\n\t\tif (['ready_for_review', 'labeled', 'unlabeled', 'converted_to_draft'].includes(action)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn action;\n\t}\n\tgetUsername(name: string) {\n\t\treturn gitData.usernames?.[toID(name)] || name;\n\t}\n\tsave() {\n\t\tFS(\"config/chat-plugins/github.json\").writeUpdate(() => JSON.stringify(gitData));\n\t}\n};\n\nexport const commands: Chat.ChatCommands = {\n\tgh: 'github',\n\tgithub: {\n\t\t''() {\n\t\t\treturn this.parse('/help github');\n\t\t},\n\t\tban(target, room, user) {\n\t\t\troom = this.requireRoom('development');\n\t\t\tthis.checkCan('mute', null, room);\n\t\t\tconst [username, reason] = Utils.splitFirst(target, ',').map(u => u.trim());\n\t\t\tif (!toID(target)) return this.parse(`/help github`);\n\t\t\tif (!toID(username)) throw new Chat.ErrorMessage(\"Provide a username.\");\n\t\t\tif (room.auth.has(toID(GitHub.getUsername(username)))) {\n\t\t\t\tthrow new Chat.ErrorMessage(\"That user is Dev roomauth. If you need to do this, demote them and try again.\");\n\t\t\t}\n\t\t\tif (!gitData.bans) gitData.bans = {};\n\t\t\tif (gitData.bans[toID(username)]) {\n\t\t\t\tthrow new Chat.ErrorMessage(`${username} is already gitbanned.`);\n\t\t\t}\n\t\t\tgitData.bans[toID(username)] = reason || \" \"; // to ensure it's truthy\n\t\t\tGitHub.save();\n\t\t\tthis.privateModAction(`${user.name} banned the GitHub user ${username} from having their GitHub actions reported to this server.`);\n\t\t\tthis.modlog('GITHUB BAN', username, reason);\n\t\t},\n\t\tunban(target, room, user) {\n\t\t\troom = this.requireRoom('development');\n\t\t\tthis.checkCan('mute', null, room);\n\t\t\ttarget = toID(target);\n\t\t\tif (!target) return this.parse('/help github');\n\t\t\tif (!gitData.bans?.[target]) throw new Chat.ErrorMessage(\"That user is not gitbanned.\");\n\t\t\tdelete gitData.bans[target];\n\t\t\tif (!Object.keys(gitData.bans).length) delete gitData.bans;\n\t\t\tGitHub.save();\n\t\t\tthis.privateModAction(`${user.name} allowed the GitHub user ${target} to have their GitHub actions reported to this server.`);\n\t\t\tthis.modlog('GITHUB UNBAN', target);\n\t\t},\n\t\tbans() {\n\t\t\tconst room = this.requireRoom('development');\n\t\t\tthis.checkCan('mute', null, room);\n\t\t\treturn this.parse('/j view-github-bans');\n\t\t},\n\t\tsetname: 'addusername',\n\t\taddusername(target, room, user) {\n\t\t\troom = this.requireRoom('development');\n\t\t\tthis.checkCan('mute', null, room);\n\t\t\tconst [gitName, username] = Utils.splitFirst(target, ',').map(u => u.trim());\n\t\t\tif (!toID(gitName) || !toID(username)) return this.parse(`/help github`);\n\t\t\tif (!gitData.usernames) gitData.usernames = {};\n\t\t\tgitData.usernames[toID(gitName)] = username;\n\t\t\tGitHub.save();\n\t\t\tthis.privateModAction(`${user.name} set ${gitName}'s name on reported GitHub actions to be ${username}.`);\n\t\t\tthis.modlog('GITHUB SETNAME', null, `'${gitName}' to '${username}'`);\n\t\t},\n\t\tclearname: 'removeusername',\n\t\tremoveusername(target, room, user) {\n\t\t\troom = this.requireRoom('development');\n\t\t\tthis.checkCan('mute', null, room);\n\t\t\ttarget = toID(target);\n\t\t\tif (!target) return this.parse(`/help github`);\n\t\t\tconst name = gitData.usernames?.[target];\n\t\t\tif (!name) throw new Chat.ErrorMessage(`${target} is not a GitHub username on our list.`);\n\t\t\tdelete gitData.usernames?.[target];\n\t\t\tif (!Object.keys(gitData.usernames || {}).length) delete gitData.usernames;\n\t\t\tGitHub.save();\n\t\t\tthis.privateModAction(`${user.name} removed ${target}'s name from the GitHub username list.`);\n\t\t\tthis.modlog('GITHUB CLEARNAME', target, `from the name ${name}`);\n\t\t},\n\t\tnames() {\n\t\t\treturn this.parse('/j view-github-names');\n\t\t},\n\t},\n\tgithubhelp: [\n\t\t`/github ban [username], [reason] - Bans a GitHub user from having their GitHub actions reported to Dev room. Requires: % @ # ~`,\n\t\t`/github unban [username] - Unbans a GitHub user from having their GitHub actions reported to Dev room. Requires: % @ # ~`,\n\t\t`/github bans - Lists all GitHub users that are currently gitbanned. Requires: % @ # ~`,\n\t\t`/github setname [username], [name] - Sets a GitHub user's name on reported GitHub actions to be [name]. Requires: % @ # ~`,\n\t\t`/github clearname [username] - Removes a GitHub user's name from the GitHub username list. Requires: % @ # ~`,\n\t\t`/github names - Lists all GitHub usernames that are currently on our list.`,\n\t],\n};\n\nexport const pages: Chat.PageTable = {\n\tgithub: {\n\t\tbans(query, user) {\n\t\t\tconst room = Rooms.get('development');\n\t\t\tif (!room) throw new Chat.ErrorMessage(\"No Development room found.\");\n\t\t\tthis.checkCan('mute', null, room);\n\t\t\tif (!gitData.bans) throw new Chat.ErrorMessage(\"There are no gitbans at this time.\");\n\t\t\tlet buf = `<div class=\"pad\"><h2>Current Gitbans:</h2><hr /><ol>`;\n\t\t\tfor (const [username, reason] of Object.entries(gitData.bans)) {\n\t\t\t\tbuf += `<li><strong>${username}</strong> - ${reason.trim() || '(No reason found)'}</li>`;\n\t\t\t}\n\t\t\tbuf += `</ol>`;\n\t\t\treturn buf;\n\t\t},\n\t\tnames() {\n\t\t\tif (!gitData.usernames) throw new Chat.ErrorMessage(\"There are no GitHub usernames in the list.\");\n\t\t\tlet buf = `<div class=\"pad\"><h2>Current GitHub username mappings:</h2><hr /><ol>`;\n\t\t\tfor (const [username, name] of Object.entries(gitData.usernames)) {\n\t\t\t\tbuf += `<li><strong>${username}</strong> - ${name}</li>`;\n\t\t\t}\n\t\t\tbuf += `</ol>`;\n\t\t\treturn buf;\n\t\t},\n\t},\n};\n\nexport function destroy() {\n\tGitHub.hook?.server.close();\n}\n"],
  "mappings": "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",
  "names": []
}

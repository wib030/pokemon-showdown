{
  "version": 3,
  "sources": ["../../../server/chat-plugins/daily-spotlight.ts"],
  "sourcesContent": ["import { FS, Utils } from '../../lib';\n\nconst DAY = 24 * 60 * 60 * 1000;\nconst SPOTLIGHT_FILE = 'config/chat-plugins/spotlights.json';\nconst NUMBER_REGEX = /^\\s*[0-9]+\\s*$/;\n\ntype StoredImage = [string, number, number];\n\ninterface Spotlight {\n\t/** legacy - string = just url, arr is [url, width, height] */\n\timage?: StoredImage | string;\n\tdescription: string;\n\ttime: number;\n}\n\nexport let spotlights: {\n\t[roomid: string]: { [k: string]: Spotlight[] },\n} = {};\n\ntry {\n\tspotlights = JSON.parse(FS(SPOTLIGHT_FILE).readIfExistsSync() || \"{}\");\n\tfor (const roomid in spotlights) {\n\t\tfor (const k in spotlights[roomid]) {\n\t\t\tfor (const spotlight of spotlights[roomid][k]) {\n\t\t\t\tif (!spotlight.time) {\n\t\t\t\t\tspotlight.time = Date.now();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} catch (e: any) {\n\tif (e.code !== 'MODULE_NOT_FOUND' && e.code !== 'ENOENT') throw e;\n}\nif (!spotlights || typeof spotlights !== 'object') spotlights = {};\n\nfunction saveSpotlights() {\n\tFS(SPOTLIGHT_FILE).writeUpdate(() => JSON.stringify(spotlights));\n}\n\nfunction nextDaily() {\n\tfor (const roomid in spotlights) {\n\t\tfor (const key in spotlights[roomid]) {\n\t\t\tif (spotlights[roomid][key].length > 1) {\n\t\t\t\tspotlights[roomid][key].shift();\n\t\t\t}\n\t\t}\n\t}\n\n\tsaveSpotlights();\n\ttimeout = setTimeout(nextDaily, DAY);\n}\n\nconst midnight = new Date();\nmidnight.setHours(24, 0, 0, 0);\nlet timeout = setTimeout(nextDaily, midnight.getTime() - Date.now());\n\nexport function renderSpotlight(roomid: RoomID, key: string, index = 0) {\n\tlet imgHTML = '', descHTML = '';\n\tconst { image, description } = spotlights[roomid][key][index];\n\n\tif (image) {\n\t\tif (Array.isArray(image)) {\n\t\t\timgHTML = `<td><img src=\"${image[0]}\" width=\"${image[1]}\" height=\"${image[2]}\" style=\"vertical-align:middle;\"></td>`;\n\t\t} else {\n\t\t\t// legacy\n\t\t\timgHTML = Chat.html`<td>Legacy image ${image}</td>`;\n\t\t}\n\t}\n\n\tif (description) {\n\t\tdescHTML = `<td style=\"padding-right:10px;\">${Chat.formatText(description, true)}</td>`;\n\t}\n\n\treturn `<table style=\"text-align:center;margin:auto\"><tr>${descHTML}${imgHTML}</tr></table>`;\n}\n\nexport const destroy = () => clearTimeout(timeout);\n\nexport const pages: Chat.PageTable = {\n\tspotlights(query, user, connection) {\n\t\tthis.title = 'Daily Spotlights';\n\t\tconst room = this.requireRoom();\n\t\tquery.shift(); // roomid\n\t\tconst sortType = toID(query.shift());\n\t\tif (sortType && !['time', 'alphabet'].includes(sortType)) {\n\t\t\tthrow new Chat.ErrorMessage(`Invalid sorting type '${sortType}' - must be either 'time', 'alphabet', or not provided.`);\n\t\t}\n\n\t\tlet buf = `<div class=\"pad ladder\">`;\n\t\tbuf += `<div class=\"pad\">`;\n\t\tbuf += `<button style=\"float:right;\" class=\"button\" name=\"send\" value=\"/join view-spotlights-${room.roomid}${sortType ? '-' + sortType : ''}\">`;\n\t\tbuf += `<i class=\"fa fa-refresh\"></i> Refresh</button>`;\n\t\tbuf += `<h2>Daily Spotlights</h2>`;\n\t\t// for posterity, all these switches are futureproofing for more sort types\n\t\tif (sortType) {\n\t\t\tlet title = '';\n\t\t\tswitch (sortType) {\n\t\t\tcase 'time':\n\t\t\t\ttitle = 'latest time updated';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttitle = 'alphabetical';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbuf += `(sorted by ${title})<br />`;\n\t\t}\n\t\tif (!spotlights[room.roomid]) {\n\t\t\tbuf += `<p>This room has no daily spotlights.</p></div>`;\n\t\t\treturn buf;\n\t\t}\n\n\t\tconst sortedEntries = Utils.sortBy(Object.entries(spotlights[room.roomid]), ([key]) => {\n\t\t\tswitch (sortType) {\n\t\t\tcase 'time': {\n\t\t\t\t// find most recently added/updated spotlight in that name, sort all by that\n\t\t\t\tconst sortedSpotlights = Utils.sortBy(spotlights[room.roomid][key].slice(), k => -k.time);\n\t\t\t\treturn -sortedSpotlights[0].time;\n\t\t\t}\n\t\t\t// sort alphabetically by name otherwise\n\t\t\tdefault:\n\t\t\t\treturn key;\n\t\t\t}\n\t\t});\n\t\tconst canManage = user.can('announce', null, room);\n\t\tfor (const [key, queue] of sortedEntries) {\n\t\t\tbuf += `<table style=\"margin-bottom:30px;\"><th colspan=\"2\"><h3>${key}:</h3></th>`;\n\t\t\tfor (const i of queue.keys()) {\n\t\t\t\tconst html = renderSpotlight(room.roomid, key, i);\n\t\t\t\tbuf += `<tr><td>${i || 'Current'}</td><td>${html}</td>`;\n\t\t\t\tif (canManage) {\n\t\t\t\t\tconst deleteCommand = `/msgroom ${room.roomid},/removedaily ${key}, ${i}`;\n\t\t\t\t\tbuf += `<td><button class=\"button\" name=\"send\" value=\"${deleteCommand}\">Delete</button></td>`;\n\t\t\t\t}\n\t\t\t\tbuf += `</tr>`;\n\t\t\t\tif (!canManage) break;\n\t\t\t}\n\t\t\tbuf += '</table>';\n\t\t}\n\t\treturn buf;\n\t},\n};\n\nexport const commands: Chat.ChatCommands = {\n\tremovedaily(target, room, user) {\n\t\troom = this.requireRoom();\n\t\tif (!room.persist) throw new Chat.ErrorMessage(\"This command is unavailable in temporary rooms.\");\n\t\tlet [key, rest] = target.split(',');\n\t\tkey = toID(key);\n\t\trest = toID(rest);\n\t\tif (!key) return this.parse('/help daily');\n\t\tif (!spotlights[room.roomid][key]) throw new Chat.ErrorMessage(`Cannot find a daily spotlight with name '${key}'`);\n\n\t\tthis.checkCan('announce', null, room);\n\t\tif (!rest || rest === 'current' || rest === '0' || rest === 'all') {\n\t\t\tspotlights[room.roomid][key].shift();\n\t\t\tif (!spotlights[room.roomid][key].length || rest === 'all') {\n\t\t\t\tdelete spotlights[room.roomid][key];\n\t\t\t\tthis.modlog(`DAILY REMOVE`, key);\n\t\t\t\tthis.privateModAction(`${user.name} removed the daily spotlight named '${key}'.`);\n\t\t\t} else {\n\t\t\t\tthis.modlog(`DAILY REMOVE`, `${key}[0]`);\n\t\t\t\tthis.privateModAction(`${user.name} removed the current entry from the queue of the daily spotlight named '${key}'.`);\n\t\t\t}\n\t\t\tsaveSpotlights();\n\t\t} else {\n\t\t\tconst queueNumber = parseInt(rest);\n\t\t\tif (isNaN(queueNumber) || queueNumber < 1) throw new Chat.ErrorMessage(\"Invalid queue number\");\n\t\t\tif (queueNumber >= spotlights[room.roomid][key].length) {\n\t\t\t\tthrow new Chat.ErrorMessage(`Queue number must be between 1 and ${spotlights[room.roomid][key].length - 1}`);\n\t\t\t}\n\t\t\tspotlights[room.roomid][key].splice(queueNumber, 1);\n\t\t\tsaveSpotlights();\n\n\t\t\tthis.modlog(`DAILY REMOVE`, `${key}[${queueNumber}]`);\n\t\t\tthis.privateModAction(\n\t\t\t\t`${user.name} removed the ${queueNumber}th entry from the queue of the daily spotlight named '${key}'.`\n\t\t\t);\n\t\t}\n\t\tChat.refreshPageFor(`spotlights-${room.roomid}`, room);\n\t},\n\tswapdailies: 'swapdaily',\n\tswapdaily(target, room, user) {\n\t\troom = this.requireRoom();\n\t\tif (!room.persist) throw new Chat.ErrorMessage(\"This command is unavailable in temporary rooms.\");\n\t\tif (!spotlights[room.roomid]) throw new Chat.ErrorMessage(\"There are no dailies for this room.\");\n\t\tthis.checkCan('announce', null, room);\n\n\t\tconst [key, indexStringA, indexStringB] = target.split(',').map(index => toID(index));\n\t\tif (!indexStringB) return this.parse('/help daily');\n\t\tif (!spotlights[room.roomid][key]) throw new Chat.ErrorMessage(`Cannot find a daily spotlight with name '${key}'`);\n\t\tif (!(NUMBER_REGEX.test(indexStringA) && NUMBER_REGEX.test(indexStringB))) {\n\t\t\tthrow new Chat.ErrorMessage(\"Queue numbers must be numbers.\");\n\t\t}\n\t\tconst indexA = parseInt(indexStringA);\n\t\tconst indexB = parseInt(indexStringB);\n\t\tconst queueLength = spotlights[room.roomid][key].length;\n\t\tif (indexA < 1 || indexB < 1 || indexA >= queueLength || indexB >= queueLength) {\n\t\t\tthrow new Chat.ErrorMessage(`Queue numbers must between 1 and the length of the queue (${queueLength}).`);\n\t\t}\n\n\t\tconst dailyA = spotlights[room.roomid][key][indexA];\n\t\tconst dailyB = spotlights[room.roomid][key][indexB];\n\t\tspotlights[room.roomid][key][indexA] = dailyB;\n\t\tspotlights[room.roomid][key][indexB] = dailyA;\n\n\t\tsaveSpotlights();\n\n\t\tthis.modlog(`DAILY QUEUE SWAP`, key, `${indexA} with ${indexB}`);\n\t\tthis.privateModAction(`${user.name} swapped the queued dailies for '${key}' at queue numbers ${indexA} and ${indexB}.`);\n\t\tChat.refreshPageFor(`spotlights-${room.roomid}`, room);\n\t},\n\tqueuedaily: 'setdaily',\n\tqueuedailyat: 'setdaily',\n\treplacedaily: 'setdaily',\n\tasync setdaily(target, room, user, connection, cmd) {\n\t\troom = this.requireRoom();\n\t\tif (!room.persist) throw new Chat.ErrorMessage(\"This command is unavailable in temporary rooms.\");\n\t\tlet key, indexString, rest;\n\t\tif (cmd.endsWith('at') || cmd === 'replacedaily') {\n\t\t\t[key, indexString, ...rest] = target.split(',');\n\t\t} else {\n\t\t\t[key, ...rest] = target.split(',');\n\t\t}\n\t\tkey = toID(key);\n\t\tif (!key) return this.parse('/help daily');\n\t\tif (key.length > 20) throw new Chat.ErrorMessage(\"Spotlight names can be a maximum of 20 characters long.\");\n\t\tif (key === 'constructor') return false;\n\t\tif (!spotlights[room.roomid]) spotlights[room.roomid] = {};\n\t\tconst queueLength = spotlights[room.roomid][key]?.length || 0;\n\n\t\tif (indexString && !NUMBER_REGEX.test(indexString)) throw new Chat.ErrorMessage(\"The queue number must be a number.\");\n\n\t\tconst index = (indexString ? parseInt(indexString) : queueLength);\n\t\tif (indexString && (index < 1 || index > queueLength)) {\n\t\t\tthrow new Chat.ErrorMessage(`Queue numbers must be between 1 and the length of the queue (${queueLength}).`);\n\t\t}\n\n\t\tthis.checkCan('announce', null, room);\n\t\tif (!rest.length) return this.parse('/help daily');\n\t\tlet img: StoredImage | undefined;\n\t\tif (rest[0].trim().startsWith('http://') || rest[0].trim().startsWith('https://')) {\n\t\t\tconst url = rest.shift()!.trim();\n\t\t\ttry {\n\t\t\t\tconst [width, height] = await Chat.fitImage(url);\n\t\t\t\timg = [url, width, height];\n\t\t\t} catch {\n\t\t\t\tthrow new Chat.ErrorMessage(`Invalid image url: ${url}`);\n\t\t\t}\n\t\t}\n\t\tconst desc = rest.join(',');\n\t\tif (Chat.stripFormatting(desc).length > 500) {\n\t\t\tthrow new Chat.ErrorMessage(\"Descriptions can be at most 500 characters long.\");\n\t\t}\n\t\tconst obj = { image: img, description: desc, time: Date.now() };\n\t\tif (!spotlights[room.roomid][key]) spotlights[room.roomid][key] = [];\n\t\tif (cmd === 'setdaily') {\n\t\t\tspotlights[room.roomid][key].shift();\n\t\t\tspotlights[room.roomid][key].unshift(obj);\n\n\t\t\tthis.modlog('SETDAILY', key, `${img ? `${img}, ` : ''}${desc}`);\n\t\t\tthis.privateModAction(`${user.name} set the daily ${key}.`);\n\t\t} else if (cmd === 'queuedailyat') {\n\t\t\tspotlights[room.roomid][key].splice(index, 0, obj);\n\t\t\tthis.modlog('QUEUEDAILY', key, `queue number ${index}: ${img ? `${img}, ` : ''}${desc}`);\n\t\t\tthis.privateModAction(`${user.name} queued a daily ${key} at queue number ${index}.`);\n\t\t} else {\n\t\t\tspotlights[room.roomid][key][index] = obj;\n\t\t\tif (indexString) {\n\t\t\t\tthis.modlog('REPLACEDAILY', key, `queue number ${index}: ${img ? `${img}, ` : ''}${desc}`);\n\t\t\t\tthis.privateModAction(`${user.name} replaced the daily ${key} at queue number ${index}.`);\n\t\t\t} else {\n\t\t\t\tthis.modlog('QUEUEDAILY', key, `${img ? `${img}, ` : ''}${desc}`);\n\t\t\t\tthis.privateModAction(`${user.name} queued a daily ${key}.`);\n\t\t\t}\n\t\t}\n\t\tsaveSpotlights();\n\t\tChat.refreshPageFor(`spotlights-${room.roomid}`, room);\n\t},\n\tdaily(target, room, user) {\n\t\troom = this.requireRoom();\n\t\tif (!room.persist) throw new Chat.ErrorMessage(\"This command is unavailable in temporary rooms.\");\n\t\tconst key = toID(target);\n\t\tif (!key) return this.parse('/help daily');\n\n\t\tif (!spotlights[room.roomid]?.[key]) {\n\t\t\tthrow new Chat.ErrorMessage(`Cannot find a daily spotlight with name '${key}'`);\n\t\t}\n\n\t\tif (!this.runBroadcast()) return;\n\n\t\tconst { image, description } = spotlights[room.roomid][key][0];\n\t\tconst html = renderSpotlight(room.roomid, key);\n\n\t\tthis.sendReplyBox(html);\n\t\tif (!this.broadcasting && user.can('ban', null, room, 'setdaily')) {\n\t\t\tconst code = Utils.escapeHTML(description).replace(/\\n/g, '<br />');\n\t\t\tthis.sendReplyBox(`<details><summary>Source</summary><code style=\"white-space: pre-wrap; display: table; tab-size: 3\">/setdaily ${key},${image ? `${typeof image === 'string' ? image : image[0]},` : ''}${code}</code></details>`);\n\t\t}\n\t\troom.update();\n\t},\n\tvsl: 'viewspotlights',\n\tdailies: 'viewspotlights',\n\tviewspotlights(target, room, user) {\n\t\troom = this.requireRoom();\n\t\tif (!room.persist) throw new Chat.ErrorMessage(\"This command is unavailable in temporary rooms.\");\n\t\ttarget = toID(target);\n\t\treturn this.parse(`/join view-spotlights-${room.roomid}${target ? `-${target}` : ''}`);\n\t},\n\n\tdailyhelp() {\n\t\tthis.sendReply(\n\t\t\t`|html|<details class=\"readmore\"><summary><code>/daily [name]</code>: shows the daily spotlight.<br />` +\n\t\t\t`<code>!daily [name]</code>: shows the daily spotlight to everyone. Requires: + % @ # ~<br />` +\n\t\t\t`<code>/setdaily [name], [image], [description]</code>: sets the daily spotlight. Image can be left out. Requires: % @ # ~</summary>` +\n\t\t\t`<code>/queuedaily [name], [image], [description]</code>: queues a daily spotlight. At midnight, the spotlight with this name will automatically switch to the next queued spotlight. Image can be left out. Requires: % @ # ~<br />` +\n\t\t\t`<code>/queuedailyat [name], [queue number], [image], [description]</code>: inserts a daily spotlight into the queue at the specified number (starting from 1). Requires: % @ # ~<br />` +\n\t\t\t`<code>/replacedaily [name], [queue number], [image], [description]</code>: replaces the daily spotlight queued at the specified number. Requires: % @ # ~<br />` +\n\t\t\t`<code>/removedaily [name][, queue number]</code>: If no queue number is provided, the current spotlight is deleted (and tomorrow's, if it exists, is moved up). If a number is provided, removes a specific future spotlight from the queue. Requires: % @ # ~<br />` +\n\t\t\t`<code>/removedaily [name], all</code>: Deletes all current and queued spotlights with the given name. Requires: % @ # ~<br />` +\n\t\t\t`<code>/swapdaily [name], [queue number], [queue number]</code>: swaps the two queued spotlights at the given queue numbers. Requires: % @ # ~<br />` +\n\t\t\t`<code>/viewspotlights [sorter]</code>: shows all current spotlights in the room. For staff, also shows queued spotlights.` +\n\t\t\t`[sorter] can either be unset, 'time', or 'alphabet'. These sort by either the time added, or alphabetical order.` +\n\t\t\t`</details>`\n\t\t);\n\t},\n};\n\nexport const handlers: Chat.Handlers = {\n\tonRenameRoom(oldID, newID) {\n\t\tif (spotlights[oldID]) {\n\t\t\tif (!spotlights[newID]) spotlights[newID] = {};\n\t\t\tObject.assign(spotlights[newID], spotlights[oldID]);\n\t\t\tdelete spotlights[oldID];\n\t\t\tsaveSpotlights();\n\t\t}\n\t},\n};\n\nprocess.nextTick(() => {\n\tChat.multiLinePattern.register('/(queue|set|replace)daily(at | )');\n});\n"],
  "mappings": "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",
  "names": []
}

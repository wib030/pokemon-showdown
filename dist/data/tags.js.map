{
  "version": 3,
  "sources": ["../../data/tags.ts"],
  "sourcesContent": ["interface TagData {\n\tname: string;\n\tdesc?: string;\n\tspeciesFilter?: (species: Species) => boolean;\n\tmoveFilter?: (move: Move) => boolean;\n\tgenericFilter?: (thing: Species | Move | Item | Ability) => boolean;\n\tspeciesNumCol?: (species: Species) => number;\n\tmoveNumCol?: (move: Move) => number;\n\tgenericNumCol?: (thing: Species | Move | Item | Ability) => number;\n}\n\nexport const Tags: { [id: IDEntry]: TagData } = {\n\t// Categories\n\t// ----------\n\tphysical: {\n\t\tname: \"Physical\",\n\t\tdesc: \"Move deals damage with the Attack and Defense stats.\",\n\t\tmoveFilter: move => move.category === 'Physical',\n\t},\n\tspecial: {\n\t\tname: \"Special\",\n\t\tdesc: \"Move deals damage with the Special Attack and Special Defense stats.\",\n\t\tmoveFilter: move => move.category === 'Special',\n\t},\n\tstatus: {\n\t\tname: \"Status\",\n\t\tdesc: \"Move does not deal damage.\",\n\t\tmoveFilter: move => move.category === 'Status',\n\t},\n\n\t// Pokemon tags\n\t// ------------\n\tmega: {\n\t\tname: \"Mega\",\n\t\tspeciesFilter: species => !!species.isMega,\n\t},\n\tmythical: {\n\t\tname: \"Mythical\",\n\t\tspeciesFilter: species => species.tags.includes(\"Mythical\"),\n\t},\n\tsublegendary: {\n\t\tname: \"Sub-Legendary\",\n\t\tspeciesFilter: species => species.tags.includes(\"Sub-Legendary\"),\n\t},\n\trestrictedlegendary: {\n\t\tname: \"Restricted Legendary\",\n\t\tspeciesFilter: species => species.tags.includes(\"Restricted Legendary\"),\n\t},\n\tultrabeast: {\n\t\tname: \"Ultra Beast\",\n\t\tspeciesFilter: species => species.tags.includes(\"Ultra Beast\"),\n\t},\n\tparadox: {\n\t\tname: \"Paradox\",\n\t\tspeciesFilter: species => species.tags.includes(\"Paradox\"),\n\t},\n\n\t// Move tags\n\t// ---------\n\tzmove: {\n\t\tname: \"Z-Move\",\n\t\tmoveFilter: move => !!move.isZ,\n\t},\n\tmaxmove: {\n\t\tname: \"Max Move\",\n\t\tmoveFilter: move => !!move.isMax,\n\t},\n\tcontact: {\n\t\tname: \"Contact\",\n\t\tdesc: \"Affected by a variety of moves, abilities, and items. Moves affected by contact moves include: Spiky Shield, King's Shield. Abilities affected by contact moves include: Iron Barbs, Rough Skin, Gooey, Flame Body, Static, Tough Claws. Items affected by contact moves include: Rocky Helmet, Sticky Barb.\",\n\t\tmoveFilter: move => 'contact' in move.flags,\n\t},\n\tsound: {\n\t\tname: \"Sound\",\n\t\tdesc: \"Doesn't affect Soundproof Pok\u00E9mon. (All sound moves also bypass Substitute.)\",\n\t\tmoveFilter: move => 'sound' in move.flags,\n\t},\n\tpowder: {\n\t\tname: \"Powder\",\n\t\tdesc: \"Doesn't affect Grass-type Pok\u00E9mon, Overcoat Pok\u00E9mon, or Safety Goggles holders.\",\n\t\tmoveFilter: move => 'powder' in move.flags,\n\t},\n\tfist: {\n\t\tname: \"Fist\",\n\t\tdesc: \"Boosted 1.2x by Iron Fist.\",\n\t\tmoveFilter: move => 'punch' in move.flags,\n\t},\n\tpulse: {\n\t\tname: \"Pulse\",\n\t\tdesc: \"Boosted 1.5x by Mega Launcher.\",\n\t\tmoveFilter: move => 'pulse' in move.flags,\n\t},\n\tbite: {\n\t\tname: \"Bite\",\n\t\tdesc: \"Boosted 1.5x by Strong Jaw.\",\n\t\tmoveFilter: move => 'bite' in move.flags,\n\t},\n\tballistic: {\n\t\tname: \"Ballistic\",\n\t\tdesc: \"Doesn't affect Bulletproof Pok\u00E9mon.\",\n\t\tmoveFilter: move => 'bullet' in move.flags,\n\t},\n\tbypassprotect: {\n\t\tname: \"Bypass Protect\",\n\t\tdesc: \"Bypasses Protect, Detect, King's Shield, and Spiky Shield.\",\n\t\tmoveFilter: move => move.target !== 'self' && !('protect' in move.flags),\n\t},\n\tnonreflectable: {\n\t\tname: \"Nonreflectable\",\n\t\tdesc: \"Can't be bounced by Magic Coat or Magic Bounce.\",\n\t\tmoveFilter: move => move.target !== 'self' && move.category === 'Status' && !('reflectable' in move.flags),\n\t},\n\tnonmirror: {\n\t\tname: \"Nonmirror\",\n\t\tdesc: \"Can't be copied by Mirror Move.\",\n\t\tmoveFilter: move => move.target !== 'self' && !('mirror' in move.flags),\n\t},\n\tnonsnatchable: {\n\t\tname: \"Nonsnatchable\",\n\t\tdesc: \"Can't be copied by Snatch.\",\n\t\tmoveFilter: move => ['allyTeam', 'self', 'adjacentAllyOrSelf'].includes(move.target) && !('snatch' in move.flags),\n\t},\n\tbypasssubstitute: {\n\t\tname: \"Bypass Substitute\",\n\t\tdesc: \"Bypasses but does not break a Substitute.\",\n\t\tmoveFilter: move => 'bypasssub' in move.flags,\n\t},\n\tgmaxmove: {\n\t\tname: \"G-Max Move\",\n\t\tmoveFilter: move => typeof move.isMax === 'string',\n\t},\n\n\t// Tiers\n\t// -----\n\tuber: {\n\t\tname: \"Uber\",\n\t\tspeciesFilter: species => species.tier === 'Uber' || species.tier === '(Uber)' || species.tier === 'AG',\n\t},\n\tou: {\n\t\tname: \"OU\",\n\t\tspeciesFilter: species => species.tier === 'OU' || species.tier === '(OU)',\n\t},\n\tuubl: {\n\t\tname: \"UUBL\",\n\t\tspeciesFilter: species => species.tier === 'UUBL',\n\t},\n\tuu: {\n\t\tname: \"UU\",\n\t\tspeciesFilter: species => species.tier === 'UU',\n\t},\n\trubl: {\n\t\tname: \"RUBL\",\n\t\tspeciesFilter: species => species.tier === 'RUBL',\n\t},\n\tru: {\n\t\tname: \"RU\",\n\t\tspeciesFilter: species => species.tier === 'RU',\n\t},\n\tnubl: {\n\t\tname: \"NUBL\",\n\t\tspeciesFilter: species => species.tier === 'NUBL',\n\t},\n\tnu: {\n\t\tname: \"NU\",\n\t\tspeciesFilter: species => species.tier === 'NU',\n\t},\n\tpubl: {\n\t\tname: \"PUBL\",\n\t\tspeciesFilter: species => species.tier === 'PUBL',\n\t},\n\tpu: {\n\t\tname: \"PU\",\n\t\tspeciesFilter: species => species.tier === 'PU' || species.tier === '(NU)',\n\t},\n\tzubl: {\n\t\tname: \"ZUBL\",\n\t\tspeciesFilter: species => species.tier === 'ZUBL',\n\t},\n\tzu: {\n\t\tname: \"ZU\",\n\t\tspeciesFilter: species => species.tier === '(PU)' || species.tier === 'ZU',\n\t},\n\tnfe: {\n\t\tname: \"NFE\",\n\t\tspeciesFilter: species => species.tier === 'NFE',\n\t},\n\tlc: {\n\t\tname: \"LC\",\n\t\tspeciesFilter: species => species.doublesTier === 'LC',\n\t},\n\tcaptier: {\n\t\tname: \"CAP Tier\",\n\t\tspeciesFilter: species => species.isNonstandard === 'CAP',\n\t},\n\tcaplc: {\n\t\tname: \"CAP LC\",\n\t\tspeciesFilter: species => species.tier === 'CAP LC',\n\t},\n\tcapnfe: {\n\t\tname: \"CAP NFE\",\n\t\tspeciesFilter: species => species.tier === 'CAP NFE',\n\t},\n\tag: {\n\t\tname: \"AG\",\n\t\tspeciesFilter: species => species.tier === 'AG',\n\t},\n\n\t// Doubles tiers\n\t// -------------\n\tduber: {\n\t\tname: \"DUber\",\n\t\tspeciesFilter: species => species.doublesTier === 'DUber' || species.doublesTier === '(DUber)',\n\t},\n\tdou: {\n\t\tname: \"DOU\",\n\t\tspeciesFilter: species => species.doublesTier === 'DOU' || species.doublesTier === '(DOU)',\n\t},\n\tdbl: {\n\t\tname: \"DBL\",\n\t\tspeciesFilter: species => species.doublesTier === 'DBL',\n\t},\n\tduu: {\n\t\tname: \"DUU\",\n\t\tspeciesFilter: species => species.doublesTier === 'DUU',\n\t},\n\tdnu: {\n\t\tname: \"DNU\",\n\t\tspeciesFilter: species => species.doublesTier === '(DUU)',\n\t},\n\n\t// Nat Dex tiers\n\t// -------------\n\tndag: {\n\t\tname: \"ND AG\",\n\t\tspeciesFilter: species => species.natDexTier === 'AG',\n\t},\n\tnduber: {\n\t\tname: \"ND Uber\",\n\t\tspeciesFilter: species => species.natDexTier === 'Uber' || species.natDexTier === '(Uber)',\n\t},\n\tndou: {\n\t\tname: \"ND OU\",\n\t\tspeciesFilter: species => species.natDexTier === 'OU' || species.natDexTier === '(OU)',\n\t},\n\tnduubl: {\n\t\tname: \"ND UUBL\",\n\t\tspeciesFilter: species => species.natDexTier === 'UUBL',\n\t},\n\tnduu: {\n\t\tname: \"ND UU\",\n\t\tspeciesFilter: species => species.natDexTier === 'UU',\n\t},\n\tndrubl: {\n\t\tname: \"ND RUBL\",\n\t\tspeciesFilter: species => species.natDexTier === 'RUBL',\n\t},\n\tndru: {\n\t\tname: \"ND RU\",\n\t\tspeciesFilter: species => species.natDexTier === 'RU',\n\t},\n\tndnfe: {\n\t\tname: \"ND NFE\",\n\t\tspeciesFilter: species => species.natDexTier === 'NFE',\n\t},\n\tndlc: {\n\t\tname: \"ND LC\",\n\t\tspeciesFilter: species => species.natDexTier === 'LC',\n\t},\n\n\t// Legality tags\n\tpast: {\n\t\tname: \"Past\",\n\t\tgenericFilter: thing => thing.isNonstandard === 'Past',\n\t},\n\tfuture: {\n\t\tname: \"Future\",\n\t\tgenericFilter: thing => thing.isNonstandard === 'Future',\n\t},\n\tlgpe: {\n\t\tname: \"LGPE\",\n\t\tgenericFilter: thing => thing.isNonstandard === 'LGPE',\n\t},\n\tunobtainable: {\n\t\tname: \"Unobtainable\",\n\t\tgenericFilter: thing => thing.isNonstandard === 'Unobtainable',\n\t},\n\tcap: {\n\t\tname: \"CAP\",\n\t\tspeciesFilter: thing => thing.isNonstandard === 'CAP',\n\t},\n\tcustom: {\n\t\tname: \"Custom\",\n\t\tgenericFilter: thing => thing.isNonstandard === 'Custom',\n\t},\n\tnonexistent: {\n\t\tname: \"Nonexistent\",\n\t\tgenericFilter: thing => !!thing.isNonstandard && thing.isNonstandard !== 'Unobtainable',\n\t},\n\n\t// filter columns\n\t// --------------\n\tintroducedgen: {\n\t\tname: \"Introduced Gen\",\n\t\tgenericNumCol: thing => thing.gen,\n\t},\n\n\theight: {\n\t\tname: \"Height\",\n\t\tspeciesNumCol: species => species.heightm,\n\t},\n\tweight: {\n\t\tname: \"Weight\",\n\t\tspeciesNumCol: species => species.weightkg,\n\t},\n\thp: {\n\t\tname: \"HP\",\n\t\tdesc: \"Hit Points\",\n\t\tspeciesNumCol: species => species.baseStats.hp,\n\t},\n\tatk: {\n\t\tname: \"Atk\",\n\t\tdesc: \"Attack\",\n\t\tspeciesNumCol: species => species.baseStats.atk,\n\t},\n\tdef: {\n\t\tname: \"Def\",\n\t\tdesc: \"Defense\",\n\t\tspeciesNumCol: species => species.baseStats.def,\n\t},\n\tspa: {\n\t\tname: \"SpA\",\n\t\tdesc: \"Special Attack\",\n\t\tspeciesNumCol: species => species.baseStats.spa,\n\t},\n\tspd: {\n\t\tname: \"SpD\",\n\t\tdesc: \"Special Defense\",\n\t\tspeciesNumCol: species => species.baseStats.spd,\n\t},\n\tspe: {\n\t\tname: \"Spe\",\n\t\tdesc: \"Speed\",\n\t\tspeciesNumCol: species => species.baseStats.spe,\n\t},\n\tbst: {\n\t\tname: \"BST\",\n\t\tdesc: \"Base Stat Total\",\n\t\tspeciesNumCol: species => species.bst,\n\t},\n\n\tbasepower: {\n\t\tname: \"Base Power\",\n\t\tmoveNumCol: move => move.basePower,\n\t},\n\tpriority: {\n\t\tname: \"Priority\",\n\t\tmoveNumCol: move => move.priority,\n\t},\n\taccuracy: {\n\t\tname: \"Accuracy\",\n\t\tmoveNumCol: move => move.accuracy === true ? 101 : move.accuracy,\n\t},\n\tmaxpp: {\n\t\tname: \"Max PP\",\n\t\tmoveNumCol: move => move.pp,\n\t},\n};\n"],
  "mappings": "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",
  "names": []
}
